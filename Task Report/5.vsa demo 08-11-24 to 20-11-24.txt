updated on vsalocal,vsademo,
22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222

1.Client want to implement attendence tab for staff and manager currently working on admin and partner.
2.The client wants rejected timesheet data to be displayed separately, as it is currently merged in one section on the timesheet rejected page. (bugs)
3.ordering using month name like Dec,Nov,Oct etc ON attendance tab,
4.Attendance revert exam leave problem fixed (user name gurvesh)
5.Attendance inserting leaving date after deleting attendance problem fixed (user name gurvesh)
6.After inserting the leave date, all saved timesheets are submitted forcefully. Therefore, it is necessary to check if the exam leave and other saved timesheets are submitted, and then verify the total count column in the attendance
7.Exam leave count problem tested and fixed 
8.All attendance get using year column on everywhere on attendance module ~~~~~



2.Client want to implement attendence tab for staff and manager currently working on admin and partner.
22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
resources\views\backEnd\layouts\includes\leftsidebar.blade.php

find <li><a href="{{ url('assignmentviewer') }}">Assignment Viewer Report </a>
after that 

        @if (Auth::user()->role_id == 14 || Auth::user()->role_id == 15)
                                      <li><a href="{{ url('attendance') }}">Attendance</a></li>
                                  @endif








22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
app\Http\Controllers\AttendanceController.php

       public function index()
    {

        if (auth()->user()->role_id == 11 || auth()->user()->role_id == 13) {
            $teammembers = DB::table('teammembers')
                ->leftJoin('teamrolehistory', 'teamrolehistory.teammember_id', '=', 'teammembers.id')
                // ->where('teammembers.status', 1)
                ->whereIn('teammembers.role_id', [14, 15, 13, 11])
                ->select('teammembers.team_member', 'teamrolehistory.newstaff_code', 'teammembers.id', 'teammembers.staffcode')
                ->orderBy('team_member', 'ASC')
                ->get();

            return view('backEnd.attendance.index', compact('teammembers'));
        } else {
            $teammembers = DB::table('teammembers')
                ->leftJoin('teamrolehistory', 'teamrolehistory.teammember_id', '=', 'teammembers.id')
                ->where('teammembers.id', auth()->user()->teammember_id)
                ->select('teammembers.team_member', 'teamrolehistory.newstaff_code', 'teammembers.id', 'teammembers.staffcode')
                ->orderBy('team_member', 'ASC')
                ->get();

            return view('backEnd.attendance.teamindex', compact('teammembers'));
        }
        abort(403, ' you have no permission to access this page ');
    }







22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
resources\views\backEnd\attendance\index.blade.php

  <!--Third party Styles(used by this page)-->
  <link href="{{ url('backEnd/plugins/select2/dist/css/select2.min.css') }}" rel="stylesheet">
  <link href="{{ url('backEnd/plugins/select2-bootstrap4/dist/select2-bootstrap4.min.css') }}" rel="stylesheet">
  <link href="{{ url('backEnd/plugins/jquery.sumoselect/sumoselect.min.css') }}" rel="stylesheet">

  @extends('backEnd.layouts.layout') @section('backEnd_content')
      <!--Content Header (Page header)-->
      <div class="content-header row align-items-center m-0">
          <nav aria-label="breadcrumb" class="col-sm-4 order-sm-last mb-3 mb-sm-0 p-0 ">
          </nav>
          <div class="col-sm-8 header-title p-0">
              <div class="media">
                  <div class="header-icon text-success mr-3"><i class="typcn typcn-puzzle-outline"></i></div>
                  <div class="media-body">
                      <h1 class="font-weight-bold">Attendance Report</h1>
                      <small>Team Workbook List</small>
                  </div>
              </div>
          </div>
      </div>
      <!--/.Content Header (Page header)-->
      <div class="body-content">
          <div class="card mb-4">

              <div class="card-body">
                  @component('backEnd.components.alert')
                  @endcomponent
                  {{-- filtering functionality --}}
                  <form method="post" action="{{ url('attendance-filter') }}" enctype="multipart/form-data">
                      @csrf
                      <div class="row">
                          <!-- Teammember Filter -->
                          <div class="col-md-4 col-sm-6 mb-3">
                              <div class="form-group">
                                  <strong><label for="teammemberId">Employee Name</label></strong>
                                  <select class="language form-control" id="teammemberId" name="teammemberId">
                                      <option value="">Please Select One</option>
                                      @php
                                          $displayedValues = [];
                                      @endphp
                                      @foreach ($teammembers as $teammember)
                                          @if (!in_array($teammember->staffcode, $displayedValues))
                                              <option value="{{ $teammember->id }}"
                                                  {{ old('teammemberId') == $teammember->id ? 'selected' : '' }}>
                                                  {{ $teammember->team_member }}
                                                  ({{ $teammember->newstaff_code ?? ($teammember->staffcode ?? '') }})
                                              </option>
                                              @php
                                                  $displayedValues[] = $teammember->staffcode;
                                              @endphp
                                          @endif
                                      @endforeach
                                  </select>
                              </div>
                          </div>

                          <!-- Start Date Filter -->
                          <div class="col-md-3 col-sm-6 mb-3">
                              <div class="form-group">
                                  <strong><label for="startdate">Start Date <span
                                              class="text-danger">*</span></label></strong>
                                  <input required type="date" class="form-control" id="startdate" name="startdate"
                                      value="{{ old('startdate') }}">
                              </div>
                          </div>

                          <!-- End Date Filter -->
                          <div class="col-md-3 col-sm-6 mb-3">
                              <div class="form-group">
                                  <strong><label for="enddate">End Date <span class="text-danger">*</span></label></strong>
                                  <input required type="date" class="form-control" id="enddate" name="enddate"
                                      value="{{ old('enddate') }}">
                              </div>
                          </div>

                          <!-- Search Button -->
                          <div class="col-md-2 col-sm-6 mb-3">
                              <div class="form-group">
                                  <label for="search">&nbsp;</label>
                                  <button type="submit" class="btn btn-success btn-block">Search</button>
                              </div>
                          </div>
                      </div>
                  </form>
              </div>

          </div>
      </div>
  @endsection


  {{-- Include jQuery --}}
  <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

  <script>
      $(document).ready(function() {
          var startDateInput = $('#startdate');
          var endDateInput = $('#enddate');

          // Function to compare start and end dates
          function compareDates() {
              var startDate = new Date(startDateInput.val());
              var endDate = new Date(endDateInput.val());

              if (startDate > endDate) {
                  alert('End date should be greater than or equal to the Start date');
                  endDateInput.val(''); // Clear the end date input
              }
          }

          // Function to validate the year length
          function validateYear(input) {
              var date = new Date(input.val());
              var year = date.getFullYear();

              if (year.toString().length > 4) {
                  alert('Enter four digits for the year');
                  input.val(''); // Clear the invalid date
              }
          }

          //   // Attach event listeners
          startDateInput.on('input', compareDates);
          endDateInput.on('blur', compareDates);

          startDateInput.on('change', function() {
              validateYear(startDateInput);
          });

          endDateInput.on('change', function() {
              validateYear(endDateInput);
          });
      });
  </script>


 
 
 
 
 
 



22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
resources\views\backEnd\attendance\teamindex.blade.php

  <!--Third party Styles(used by this page)-->
  <link href="{{ url('backEnd/plugins/select2/dist/css/select2.min.css') }}" rel="stylesheet">
  <link href="{{ url('backEnd/plugins/select2-bootstrap4/dist/select2-bootstrap4.min.css') }}" rel="stylesheet">
  <link href="{{ url('backEnd/plugins/jquery.sumoselect/sumoselect.min.css') }}" rel="stylesheet">

  @extends('backEnd.layouts.layout') @section('backEnd_content')
      <!--Content Header (Page header)-->
      <div class="content-header row align-items-center m-0">
          <nav aria-label="breadcrumb" class="col-sm-4 order-sm-last mb-3 mb-sm-0 p-0 ">
          </nav>
          <div class="col-sm-8 header-title p-0">
              <div class="media">
                  <div class="header-icon text-success mr-3"><i class="typcn typcn-puzzle-outline"></i></div>
                  <div class="media-body">
                      <h1 class="font-weight-bold">Attendance Report</h1>
                      <small>Team Workbook List</small>
                  </div>
              </div>
          </div>
      </div>
      <!--/.Content Header (Page header)-->
      <div class="body-content">
          <div class="card mb-4">

              <div class="card-body">
                  @component('backEnd.components.alert')
                  @endcomponent
                  {{-- filtering functionality --}}
                  <form method="post" action="{{ url('attendance-filter') }}" enctype="multipart/form-data">
                      @csrf
                      <div class="row">
                          <!-- Teammember Filter -->
                          <div class="col-md-4 col-sm-6 mb-3">
                              <div class="form-group">
                                  <strong><label for="teammemberId">Employee Name</label></strong>
                                  <select class="language form-control" id="teammemberId" name="teammemberId">
                                      <option value="">Please Select One</option>
                                      @php
                                          $displayedValues = [];
                                      @endphp
                                      @foreach ($teammembers as $teammember)
                                          @if (!in_array($teammember->staffcode, $displayedValues))
                                              <option value="{{ $teammember->id }}"
                                                  {{ old('teammemberId') == $teammember->id ? 'selected' : '' }}>
                                                  {{ $teammember->team_member }}
                                                  ({{ $teammember->newstaff_code ?? ($teammember->staffcode ?? '') }})
                                              </option>
                                              @php
                                                  $displayedValues[] = $teammember->staffcode;
                                              @endphp
                                          @endif
                                      @endforeach
                                  </select>
                              </div>
                          </div>

                          <!-- Start Date Filter -->
                          <div class="col-md-3 col-sm-6 mb-3">
                              <div class="form-group">
                                  <strong><label for="startdate">Start Date <span
                                              class="text-danger">*</span></label></strong>
                                  <input required type="date" class="form-control" id="startdate" name="startdate"
                                      value="{{ old('startdate') }}">
                              </div>
                          </div>

                          <!-- End Date Filter -->
                          <div class="col-md-3 col-sm-6 mb-3">
                              <div class="form-group">
                                  <strong><label for="enddate">End Date <span class="text-danger">*</span></label></strong>
                                  <input required type="date" class="form-control" id="enddate" name="enddate"
                                      value="{{ old('enddate') }}">
                              </div>
                          </div>

                          <!-- Search Button -->
                          <div class="col-md-2 col-sm-6 mb-3">
                              <div class="form-group">
                                  <label for="search">&nbsp;</label>
                                  <button type="submit" class="btn btn-success btn-block">Search</button>
                              </div>
                          </div>
                      </div>
                  </form>
              </div>

          </div>
      </div>
  @endsection


  {{-- Include jQuery --}}
  <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

  <script>
      $(document).ready(function() {
          var startDateInput = $('#startdate');
          var endDateInput = $('#enddate');

          // Function to compare start and end dates
          function compareDates() {
              var startDate = new Date(startDateInput.val());
              var endDate = new Date(endDateInput.val());

              if (startDate > endDate) {
                  alert('End date should be greater than or equal to the Start date');
                  endDateInput.val(''); // Clear the end date input
              }
          }

          // Function to validate the year length
          function validateYear(input) {
              var date = new Date(input.val());
              var year = date.getFullYear();

              if (year.toString().length > 4) {
                  alert('Enter four digits for the year');
                  input.val(''); // Clear the invalid date
              }
          }

          //   // Attach event listeners
          startDateInput.on('input', compareDates);
          endDateInput.on('blur', compareDates);

          startDateInput.on('change', function() {
              validateYear(startDateInput);
          });

          endDateInput.on('change', function() {
              validateYear(endDateInput);
          });
      });
  </script>






   
   
   
   



22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
app\Http\Controllers\AttendanceController.php


    public function adminattendancereport(Request $request)
    {
        $teamnid = $request->input('teammemberId');
        $startdate = Carbon::parse($request->input('startdate'));
        $enddate = Carbon::parse($request->input('enddate'));

        // Convert start and end dates to their respective month numbers like Month number (1-12)
        $startMonth = $startdate->format('n');
        $startYear = $startdate->format('Y');

        $endMonth = $enddate->format('n');
        $endYear = $enddate->format('Y');

        // Retrieve all team members
        if (auth()->user()->role_id == 11 || auth()->user()->role_id == 13) {
            $teammembers = DB::table('teammembers')
                ->leftJoin('teamrolehistory', 'teamrolehistory.teammember_id', '=', 'teammembers.id')
                ->whereIn('teammembers.role_id', [14, 15, 13, 11])
                ->select('teammembers.team_member', 'teamrolehistory.newstaff_code', 'teammembers.id', 'teammembers.staffcode')
                ->orderBy('team_member', 'ASC')
                ->get();
        } else {
            $teammembers = DB::table('teammembers')
                ->leftJoin('teamrolehistory', 'teamrolehistory.teammember_id', '=', 'teammembers.id')
                ->where('teammembers.id', auth()->user()->teammember_id)
                ->select('teammembers.team_member', 'teamrolehistory.newstaff_code', 'teammembers.id', 'teammembers.staffcode')
                ->orderBy('team_member', 'ASC')
                ->get();
        }

        // Fetch single user data
        $singleusersearched = DB::table('teammembers')
            ->where('id', $teamnid)
            ->select('team_member', 'staffcode', 'id', 'leavingdate', 'joining_date')
            ->first();

        // Check leaving date validation
        if ($singleusersearched && $singleusersearched->leavingdate) {
            $leavingdate = Carbon::parse($singleusersearched->leavingdate);
            if ($startdate->gt($leavingdate)) {
                $output = ['msg' => 'User left on ' . $leavingdate->format('d-m-Y') . ', cannot select beyond this date.'];
                $request->flash();
                return redirect()->to('attendance')->with('statuss', $output);
            }
        }

        // Check joining date validation
        if ($singleusersearched && $singleusersearched->joining_date) {
            $joiningdate = Carbon::parse($singleusersearched->joining_date);
            if ($joiningdate->gt($enddate)) {
                $output = ['msg' => 'User joined on ' . $joiningdate->format('d-m-Y') . ', cannot select before this date.'];
                $request->flash();
                return redirect()->to('attendance')->with('statuss', $output);
            }
        }

        // Build attendance query filtered by month
        $query = DB::table('attendances')
            ->leftJoin('teammembers', 'teammembers.id', 'attendances.employee_name')
            ->leftJoin('teamrolehistory', 'teamrolehistory.teammember_id', '=', 'teammembers.id')
            ->leftJoin('roles', 'roles.id', 'teammembers.role_id')
            ->select(
                'attendances.*',
                'teammembers.team_member',
                'teammembers.staffcode',
                'teamrolehistory.newstaff_code',
                'teammembers.employment_status',
                'roles.rolename',
                'teammembers.joining_date'
            );

        if ($teamnid) {
            $query->where('attendances.employee_name', $teamnid);
        }

        // // Filter where the attendance month falls between the start and end month
        // if ($startMonth && $endMonth) {
        //     $query->whereBetween(DB::raw('MONTH(STR_TO_DATE(CONCAT(attendances.month, " 1, 2000"), "%M %d, %Y"))'), [$startMonth, $endMonth]);
        // }

        // Filter attendance records by month and year
        if ($startMonth && $endMonth && $startYear && $endYear) {
            $query->whereBetween(DB::raw('MONTH(STR_TO_DATE(CONCAT(attendances.month, " 1, 2000"), "%M %d, %Y"))'), [$startMonth, $endMonth])
                ->whereBetween('attendances.year', [$startYear, $endYear]);
        }

        // ordering using month name like Dec,Nov,Oct etc
        $query->orderBy('attendances.year', 'desc')
            ->orderBy(DB::raw('MONTH(STR_TO_DATE(CONCAT(attendances.month, " 1, 2000"), "%M %d, %Y"))'), 'desc');

        $attendanceDatas = $query->get();
        $request->flash();
        // dd($attendanceDatas);

        if (auth()->user()->role_id == 11 || auth()->user()->role_id == 13) {
            return view('backEnd.attendance.adminattendance', compact('attendanceDatas', 'teammembers'));
        } else {
            return view('backEnd.attendance.teamattendance', compact('attendanceDatas', 'teammembers'));
        }
    }
	
	
	
	
	
	

22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
resources\views\backEnd\attendance\adminattendance.blade.php


{{-- selec input box style --}}
<link href="{{ url('backEnd/plugins/select2/dist/css/select2.min.css') }}" rel="stylesheet">
<link href="{{ url('backEnd/plugins/select2-bootstrap4/dist/select2-bootstrap4.min.css') }}" rel="stylesheet">
<link href="{{ url('backEnd/plugins/jquery.sumoselect/sumoselect.min.css') }}" rel="stylesheet">
{{-- selec input box style end hare --}}

{{-- Datatable style --}}
<link href="https://cdn.datatables.net/1.10.25/css/jquery.dataTables.min.css" rel="stylesheet">
<link href="https://cdn.datatables.net/buttons/1.7.1/css/buttons.dataTables.min.css" rel="stylesheet">
{{-- Datatable style end --}}

@extends('backEnd.layouts.layout') @section('backEnd_content')
    <div class="content-header row align-items-center m-0">
        <nav aria-label="breadcrumb" class="col-sm-4 order-sm-last mb-3 mb-sm-0 p-0 ">
        </nav>
        <div class="col-sm-8 header-title p-0">
            <div class="media">
                <div class="header-icon text-success mr-3"><i class="typcn typcn-puzzle-outline"></i></div>
                <div class="media-body">
                    <h1 class="font-weight-bold">Attendance Report</h1>
                    <small>Team Workbook List</small>
                </div>
            </div>
        </div>
    </div>

    <div class="body-content">
        <div class="card mb-4">
            <div class="card-body">
                @component('backEnd.components.alert')
                @endcomponent
                <div class="table-responsive">
                    <form method="post" action="{{ url('attendance-filter') }}" enctype="multipart/form-data">
                        @csrf
                        <div class="row">
                            <!-- Teammember Filter -->
                            <div class="col-md-4 col-sm-6 mb-3">
                                <div class="form-group">
                                    <strong><label for="teammemberId">Employee Name</label></strong>
                                    <select class="language form-control" id="teammemberId" name="teammemberId">
                                        <option value="">Please Select One</option>
                                        @php
                                            $displayedValues = [];
                                        @endphp
                                        @foreach ($teammembers as $teammember)
                                            @if (!in_array($teammember->staffcode, $displayedValues))
                                                <option value="{{ $teammember->id }}"
                                                    {{ old('teammemberId') == $teammember->id ? 'selected' : '' }}>
                                                    {{ $teammember->team_member }}
                                                    ({{ $teammember->newstaff_code ?? ($teammember->staffcode ?? '') }})
                                                </option>
                                                @php
                                                    $displayedValues[] = $teammember->staffcode;
                                                @endphp
                                            @endif
                                        @endforeach
                                    </select>
                                </div>
                            </div>

                            <!-- Start Date Filter -->
                            <div class="col-md-3 col-sm-6 mb-3">
                                <div class="form-group">
                                    <strong><label for="startdate">Start Date <span
                                                class="text-danger">*</span></label></strong>
                                    <input required type="date" class="form-control" id="startdate" name="startdate"
                                        value="{{ old('startdate') }}">
                                </div>
                            </div>

                            <!-- End Date Filter -->
                            <div class="col-md-3 col-sm-6 mb-3">
                                <div class="form-group">
                                    <strong><label for="enddate">End Date <span
                                                class="text-danger">*</span></label></strong>
                                    <input required type="date" class="form-control" id="enddate" name="enddate"
                                        value="{{ old('enddate') }}">
                                </div>
                            </div>

                            <!-- Search Button -->
                            <div class="col-md-2 col-sm-6 mb-3">
                                <div class="form-group">
                                    <label for="search">&nbsp;</label>
                                    <button type="submit" class="btn btn-success btn-block">Search</button>
                                </div>
                            </div>
                        </div>
                    </form>
                    <table id="examplee" class="display nowrap">
                        <thead>
                            <tr>
                                <th style="display: none;">id</th>
                                <th>Employee Name</th>
                                <th>Staff Code</th>
                                <th>Role</th>
                                <th>Month</th>
                                <th>Year</th>
                                <th>01</th>
                                <th>02</th>
                                <th>03</th>
                                <th>04</th>
                                <th>05</th>
                                <th>06</th>
                                <th>07</th>
                                <th>08</th>
                                <th>09</th>
                                <th>10</th>
                                <th>11</th>
                                <th>12</th>
                                <th>13</th>
                                <th>14</th>
                                <th>15</th>
                                <th>16</th>
                                <th>17</th>
                                <th>18</th>
                                <th>19</th>
                                <th>20</th>
                                <th>21</th>
                                <th>22</th>
                                <th>23</th>
                                <th>24</th>
                                <th>25</th>
                                <th>26</th>
                                <th>27</th>
                                <th>28</th>
                                <th>29</th>
                                <th>30</th>
                                <th>31</th>
                                <th>Total Number of days</th>
                                {{-- <th>No of days Present</th> --}}
                                <th>Total Working days</th>
                                <th>Total Casual Leave</th>
                                {{-- <th>Sick Leave (SL)</th> --}}
                                {{-- <th>Exam Leave (EL)</th> --}}
                                <th>Total Exam Leave</th>
                                <th>Total Travel</th>
                                <th>Total Offholidays</th>
                                <th>Total Weekend</th>
                                <th>Total Holidays</th>
                                {{-- <th>Absent</th> --}}
                            </tr>
                        </thead>
                        <tbody>
                            @foreach ($attendanceDatas as $attendanceData)
                                <tr>
                                    {{-- @php
                                        dd($attendanceData);
                                    @endphp --}}
                                    <td style="display: none;">{{ $attendanceData->id }}</td>
                                    <td>{{ $attendanceData->team_member }}</td>
                                    <td class="text-center">
                                        {{ $attendanceData->newstaff_code ?? ($attendanceData->staffcode ?? '') }}</td>
                                    <td>{{ $attendanceData->rolename }}</td>
                                    <td> {{ $attendanceData->month }}</td>
                                    <td> {{ $attendanceData->year }}</td>
                                    <td> {{ $attendanceData->one ?? '…....' }}</td>
                                    <td> {{ $attendanceData->two ?? '…....' }}</td>
                                    <td> {{ $attendanceData->three ?? '…....' }}</td>
                                    <td> {{ $attendanceData->four ?? '…....' }}</td>
                                    <td> {{ $attendanceData->five ?? '…....' }}</td>
                                    <td> {{ $attendanceData->six ?? '…....' }}</td>
                                    <td> {{ $attendanceData->seven ?? '…....' }}</td>
                                    <td> {{ $attendanceData->eight ?? '…....' }}</td>
                                    <td> {{ $attendanceData->nine ?? '…....' }}</td>
                                    <td> {{ $attendanceData->ten ?? '…....' }}</td>
                                    <td> {{ $attendanceData->eleven ?? '…....' }}</td>
                                    <td> {{ $attendanceData->twelve ?? '…....' }}</td>
                                    <td> {{ $attendanceData->thirteen ?? '…....' }}</td>
                                    <td> {{ $attendanceData->fourteen ?? '…....' }}</td>
                                    <td> {{ $attendanceData->fifteen ?? '…....' }}</td>
                                    <td> {{ $attendanceData->sixteen ?? '…....' }}</td>
                                    <td> {{ $attendanceData->seventeen ?? '…....' }}</td>
                                    <td> {{ $attendanceData->eighteen ?? '…....' }}</td>
                                    <td> {{ $attendanceData->ninghteen ?? '…....' }}</td>
                                    <td> {{ $attendanceData->twenty ?? '…....' }}</td>
                                    <td> {{ $attendanceData->twentyone ?? '…....' }}</td>
                                    <td> {{ $attendanceData->twentytwo ?? '…....' }}</td>
                                    <td> {{ $attendanceData->twentythree ?? '…....' }}</td>
                                    <td> {{ $attendanceData->twentyfour ?? '…....' }}</td>
                                    <td> {{ $attendanceData->twentyfive ?? '…....' }}</td>
                                    <td> {{ $attendanceData->twentysix ?? '…....' }}</td>
                                    <td> {{ $attendanceData->twentyseven ?? '…....' }}</td>
                                    <td> {{ $attendanceData->twentyeight ?? '…....' }}</td>
                                    <td> {{ $attendanceData->twentynine ?? '…....' }}</td>
                                    <td> {{ $attendanceData->thirty ?? '…....' }}</td>
                                    <td> {{ $attendanceData->thirtyone ?? '…....' }}</td>

                                    <td class="text-center"> {{ $attendanceData->total_no_of_days ?? '0' }}</td>
                                    <td class="text-center"> {{ $attendanceData->no_of_days_present ?? '0' }}</td>
                                    <td class="text-center"> {{ $attendanceData->casual_leave ?? '0' }}</td>
                                    {{-- <td> {{ $attendanceData->sick_leave ?? '0' }}</td> --}}
                                    <td class="text-center"> {{ $attendanceData->exam_leave ?? '0' }}</td>
                                    <td class="text-center"> {{ $attendanceData->travel ?? '0' }}</td>
                                    <td class="text-center"> {{ $attendanceData->offholidays ?? '0' }}</td>
                                    <td class="text-center"> {{ $attendanceData->sundaycount ?? '0' }}</td>
                                    <td class="text-center"> {{ $attendanceData->holidays ?? '0' }}</td>
                                    {{-- <td> {{ $attendanceData->absent ?? '' }}</td> --}}
                                </tr>
                            @endforeach
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
@endsection
{{-- 
<script src="https://code.jquery.com/jquery-3.5.1.js"></script>
<script src="https://cdn.datatables.net/1.10.25/js/jquery.dataTables.min.js"></script>
<script src="https://cdn.datatables.net/buttons/1.7.1/js/dataTables.buttons.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jszip/3.1.3/jszip.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.53/pdfmake.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.53/vfs_fonts.js"></script>
<script src="https://cdn.datatables.net/buttons/1.7.1/js/buttons.html5.min.js"></script>
<script src="https://cdn.datatables.net/buttons/1.7.1/js/buttons.print.min.js"></script>
<script>
    $(document).ready(function() {
        $('#examplee').DataTable({
            "pageLength": 100,
            dom: 'Bfrtip',
            "order": [
                [0, "desc"]
            ],


            buttons: [

                {
                    extend: 'copyHtml5',
                    exportOptions: {
                        columns: [0, ':visible']
                    }
                },
                {
                    extend: 'excelHtml5',
                    exportOptions: {
                        columns: ':visible'
                    }
                },
                {
                    extend: 'pdfHtml5',
                    exportOptions: {
                        columns: [0, 1, 2, 5]
                    }
                },
                'colvis'
            ]
        });
    });
</script> --}}



<script src="https://code.jquery.com/jquery-3.5.1.js"></script>
<script src="https://cdn.datatables.net/1.10.25/js/jquery.dataTables.min.js"></script>
<script src="https://cdn.datatables.net/buttons/1.7.1/js/dataTables.buttons.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jszip/3.1.3/jszip.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.53/pdfmake.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.53/vfs_fonts.js"></script>
<script src="https://cdn.datatables.net/buttons/1.7.1/js/buttons.html5.min.js"></script>
<script src="https://cdn.datatables.net/buttons/1.7.1/js/buttons.print.min.js"></script>

<script>
    $(document).ready(function() {
        $('#examplee').DataTable({
            "pageLength": 100,
            dom: 'Bfrtip',
            "order": [
                // [0, "desc"]
            ],
            columnDefs: [{
                targets: [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
                    21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38,
                    39, 40, 41, 42, 43
                ],
                orderable: false
            }],

            buttons: [{
                    extend: 'excelHtml5',
                    filename: 'Team Attendance',
                    exportOptions: {
                        columns: ':visible'
                    }
                },
                'colvis'
            ]
        });
    });
</script>


{{-- Include jQuery --}}
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

<script>
    $(document).ready(function() {
        var startDateInput = $('#startdate');
        var endDateInput = $('#enddate');

        // Function to compare start and end dates
        function compareDates() {
            var startDate = new Date(startDateInput.val());
            var endDate = new Date(endDateInput.val());

            if (startDate > endDate) {
                alert('End date should be greater than or equal to the Start date');
                endDateInput.val(''); // Clear the end date input
            }
        }

        // Function to validate the year length
        function validateYear(input) {
            var date = new Date(input.val());
            var year = date.getFullYear();

            if (year.toString().length > 4) {
                alert('Enter four digits for the year');
                input.val(''); // Clear the invalid date
            }
        }

        //   // Attach event listeners
        startDateInput.on('input', compareDates);
        endDateInput.on('blur', compareDates);

        startDateInput.on('change', function() {
            validateYear(startDateInput);
        });

        endDateInput.on('change', function() {
            validateYear(endDateInput);
        });
    });
</script>









22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
resources\views\backEnd\attendance\teamattendance.blade.php

{{-- selec input box style --}}
<link href="{{ url('backEnd/plugins/select2/dist/css/select2.min.css') }}" rel="stylesheet">
<link href="{{ url('backEnd/plugins/select2-bootstrap4/dist/select2-bootstrap4.min.css') }}" rel="stylesheet">
<link href="{{ url('backEnd/plugins/jquery.sumoselect/sumoselect.min.css') }}" rel="stylesheet">
{{-- selec input box style end hare --}}

{{-- Datatable style --}}
<link href="https://cdn.datatables.net/1.10.25/css/jquery.dataTables.min.css" rel="stylesheet">
<link href="https://cdn.datatables.net/buttons/1.7.1/css/buttons.dataTables.min.css" rel="stylesheet">
{{-- Datatable style end --}}

@extends('backEnd.layouts.layout') @section('backEnd_content')
    <div class="content-header row align-items-center m-0">
        <nav aria-label="breadcrumb" class="col-sm-4 order-sm-last mb-3 mb-sm-0 p-0 ">
        </nav>
        <div class="col-sm-8 header-title p-0">
            <div class="media">
                <div class="header-icon text-success mr-3"><i class="typcn typcn-puzzle-outline"></i></div>
                <div class="media-body">
                    <h1 class="font-weight-bold">Attendance Report</h1>
                    <small>Team Workbook List</small>
                </div>
            </div>
        </div>
    </div>

    <div class="body-content">
        <div class="card mb-4">
            <div class="card-body">
                @component('backEnd.components.alert')
                @endcomponent
                <div class="table-responsive">
                    <form method="post" action="{{ url('attendance-filter') }}" enctype="multipart/form-data">
                        @csrf
                        <div class="row">
                            <!-- Teammember Filter -->
                            <div class="col-md-4 col-sm-6 mb-3">
                                <div class="form-group">
                                    <strong><label for="teammemberId">Employee Name</label></strong>
                                    <select class="language form-control" id="teammemberId" name="teammemberId">
                                        <option value="">Please Select One</option>
                                        @php
                                            $displayedValues = [];
                                        @endphp
                                        @foreach ($teammembers as $teammember)
                                            @if (!in_array($teammember->staffcode, $displayedValues))
                                                <option value="{{ $teammember->id }}"
                                                    {{ old('teammemberId') == $teammember->id ? 'selected' : '' }}>
                                                    {{ $teammember->team_member }}
                                                    ({{ $teammember->newstaff_code ?? ($teammember->staffcode ?? '') }})
                                                </option>
                                                @php
                                                    $displayedValues[] = $teammember->staffcode;
                                                @endphp
                                            @endif
                                        @endforeach
                                    </select>
                                </div>
                            </div>

                            <!-- Start Date Filter -->
                            <div class="col-md-3 col-sm-6 mb-3">
                                <div class="form-group">
                                    <strong><label for="startdate">Start Date <span
                                                class="text-danger">*</span></label></strong>
                                    <input required type="date" class="form-control" id="startdate" name="startdate"
                                        value="{{ old('startdate') }}">
                                </div>
                            </div>

                            <!-- End Date Filter -->
                            <div class="col-md-3 col-sm-6 mb-3">
                                <div class="form-group">
                                    <strong><label for="enddate">End Date <span
                                                class="text-danger">*</span></label></strong>
                                    <input required type="date" class="form-control" id="enddate" name="enddate"
                                        value="{{ old('enddate') }}">
                                </div>
                            </div>

                            <!-- Search Button -->
                            <div class="col-md-2 col-sm-6 mb-3">
                                <div class="form-group">
                                    <label for="search">&nbsp;</label>
                                    <button type="submit" class="btn btn-success btn-block">Search</button>
                                </div>
                            </div>
                        </div>
                    </form>
                    <table id="examplee" class="display nowrap">
                        <thead>
                            <tr>
                                <th style="display: none;">id</th>
                                <th>Employee Name</th>
                                <th>Staff Code</th>
                                <th>Role</th>
                                <th>Month</th>
                                <th>Year</th>
                                <th>01</th>
                                <th>02</th>
                                <th>03</th>
                                <th>04</th>
                                <th>05</th>
                                <th>06</th>
                                <th>07</th>
                                <th>08</th>
                                <th>09</th>
                                <th>10</th>
                                <th>11</th>
                                <th>12</th>
                                <th>13</th>
                                <th>14</th>
                                <th>15</th>
                                <th>16</th>
                                <th>17</th>
                                <th>18</th>
                                <th>19</th>
                                <th>20</th>
                                <th>21</th>
                                <th>22</th>
                                <th>23</th>
                                <th>24</th>
                                <th>25</th>
                                <th>26</th>
                                <th>27</th>
                                <th>28</th>
                                <th>29</th>
                                <th>30</th>
                                <th>31</th>
                                <th>Total Number of days</th>
                                {{-- <th>No of days Present</th> --}}
                                <th>Total Working days</th>
                                <th>Total Casual Leave</th>
                                {{-- <th>Sick Leave (SL)</th> --}}
                                {{-- <th>Exam Leave (EL)</th> --}}
                                <th>Total Exam Leave</th>
                                <th>Total Travel</th>
                                <th>Total Offholidays</th>
                                <th>Total Weekend</th>
                                <th>Total Holidays</th>
                                {{-- <th>Absent</th> --}}
                            </tr>
                        </thead>
                        <tbody>
                            @foreach ($attendanceDatas as $attendanceData)
                                <tr>
                                    {{-- @php
                                        dd($attendanceData);
                                    @endphp --}}
                                    <td style="display: none;">{{ $attendanceData->id }}</td>
                                    <td>{{ $attendanceData->team_member }}</td>
                                    <td class="text-center">
                                        {{ $attendanceData->newstaff_code ?? ($attendanceData->staffcode ?? '') }}</td>
                                    <td>{{ $attendanceData->rolename }}</td>
                                    <td> {{ $attendanceData->month }}</td>
                                    <td> {{ $attendanceData->year }}</td>
                                    <td> {{ $attendanceData->one ?? '…....' }}</td>
                                    <td> {{ $attendanceData->two ?? '…....' }}</td>
                                    <td> {{ $attendanceData->three ?? '…....' }}</td>
                                    <td> {{ $attendanceData->four ?? '…....' }}</td>
                                    <td> {{ $attendanceData->five ?? '…....' }}</td>
                                    <td> {{ $attendanceData->six ?? '…....' }}</td>
                                    <td> {{ $attendanceData->seven ?? '…....' }}</td>
                                    <td> {{ $attendanceData->eight ?? '…....' }}</td>
                                    <td> {{ $attendanceData->nine ?? '…....' }}</td>
                                    <td> {{ $attendanceData->ten ?? '…....' }}</td>
                                    <td> {{ $attendanceData->eleven ?? '…....' }}</td>
                                    <td> {{ $attendanceData->twelve ?? '…....' }}</td>
                                    <td> {{ $attendanceData->thirteen ?? '…....' }}</td>
                                    <td> {{ $attendanceData->fourteen ?? '…....' }}</td>
                                    <td> {{ $attendanceData->fifteen ?? '…....' }}</td>
                                    <td> {{ $attendanceData->sixteen ?? '…....' }}</td>
                                    <td> {{ $attendanceData->seventeen ?? '…....' }}</td>
                                    <td> {{ $attendanceData->eighteen ?? '…....' }}</td>
                                    <td> {{ $attendanceData->ninghteen ?? '…....' }}</td>
                                    <td> {{ $attendanceData->twenty ?? '…....' }}</td>
                                    <td> {{ $attendanceData->twentyone ?? '…....' }}</td>
                                    <td> {{ $attendanceData->twentytwo ?? '…....' }}</td>
                                    <td> {{ $attendanceData->twentythree ?? '…....' }}</td>
                                    <td> {{ $attendanceData->twentyfour ?? '…....' }}</td>
                                    <td> {{ $attendanceData->twentyfive ?? '…....' }}</td>
                                    <td> {{ $attendanceData->twentysix ?? '…....' }}</td>
                                    <td> {{ $attendanceData->twentyseven ?? '…....' }}</td>
                                    <td> {{ $attendanceData->twentyeight ?? '…....' }}</td>
                                    <td> {{ $attendanceData->twentynine ?? '…....' }}</td>
                                    <td> {{ $attendanceData->thirty ?? '…....' }}</td>
                                    <td> {{ $attendanceData->thirtyone ?? '…....' }}</td>

                                    <td class="text-center"> {{ $attendanceData->total_no_of_days ?? '0' }}</td>
                                    <td class="text-center"> {{ $attendanceData->no_of_days_present ?? '0' }}</td>
                                    <td class="text-center"> {{ $attendanceData->casual_leave ?? '0' }}</td>
                                    {{-- <td> {{ $attendanceData->sick_leave ?? '0' }}</td> --}}
                                    <td class="text-center"> {{ $attendanceData->exam_leave ?? '0' }}</td>
                                    <td class="text-center"> {{ $attendanceData->travel ?? '0' }}</td>
                                    <td class="text-center"> {{ $attendanceData->offholidays ?? '0' }}</td>
                                    <td class="text-center"> {{ $attendanceData->sundaycount ?? '0' }}</td>
                                    <td class="text-center"> {{ $attendanceData->holidays ?? '0' }}</td>
                                    {{-- <td> {{ $attendanceData->absent ?? '' }}</td> --}}
                                </tr>
                            @endforeach
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
@endsection

<script src="https://code.jquery.com/jquery-3.5.1.js"></script>
<script src="https://cdn.datatables.net/1.10.25/js/jquery.dataTables.min.js"></script>
<script src="https://cdn.datatables.net/buttons/1.7.1/js/dataTables.buttons.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jszip/3.1.3/jszip.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.53/pdfmake.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.53/vfs_fonts.js"></script>
<script src="https://cdn.datatables.net/buttons/1.7.1/js/buttons.html5.min.js"></script>
<script src="https://cdn.datatables.net/buttons/1.7.1/js/buttons.print.min.js"></script>

<script>
    $(document).ready(function() {
        $('#examplee').DataTable({
            "pageLength": 100,
            dom: 'Bfrtip',
            "order": [
                // [0, "desc"]
            ],
            columnDefs: [{
                targets: [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
                    21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38,
                    39, 40, 41, 42, 43
                ],
                orderable: false
            }],

            buttons: [{
                    extend: 'excelHtml5',
                    filename: 'Attendance Report',
                    exportOptions: {
                        columns: ':visible'
                    }
                },
                'colvis'
            ]
        });
    });
</script>


{{-- Include jQuery --}}
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

<script>
    $(document).ready(function() {
        var startDateInput = $('#startdate');
        var endDateInput = $('#enddate');

        // Function to compare start and end dates
        function compareDates() {
            var startDate = new Date(startDateInput.val());
            var endDate = new Date(endDateInput.val());

            if (startDate > endDate) {
                alert('End date should be greater than or equal to the Start date');
                endDateInput.val(''); // Clear the end date input
            }
        }

        // Function to validate the year length
        function validateYear(input) {
            var date = new Date(input.val());
            var year = date.getFullYear();

            if (year.toString().length > 4) {
                alert('Enter four digits for the year');
                input.val(''); // Clear the invalid date
            }
        }

        //   // Attach event listeners
        startDateInput.on('input', compareDates);
        endDateInput.on('blur', compareDates);

        startDateInput.on('change', function() {
            validateYear(startDateInput);
        });

        endDateInput.on('change', function() {
            validateYear(endDateInput);
        });
    });
</script>











1.The client wants rejected timesheet data to be displayed separately, as it is currently merged in one section on the timesheet rejected page. (bugs)
22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
app\Http\Controllers\TimesheetController.php

  public function rejectedlist(Request $request)
  {

    if (auth()->user()->role_id == 13) {
      $timesheetData = DB::table('timesheetusers')
        ->leftjoin('teammembers', 'teammembers.id', 'timesheetusers.createdby')
        ->leftjoin('assignmentbudgetings', 'assignmentbudgetings.assignmentgenerate_id', 'timesheetusers.assignmentgenerate_id')
        ->where('timesheetusers.createdby', auth()->user()->teammember_id)
        // ->where('timesheetusers.status', 2)
        ->whereIn('timesheetusers.status', [2, 3])
        ->select('timesheetusers.*', 'assignmentbudgetings.assignmentname', 'teammembers.team_member', 'teammembers.staffcode')->orderBy('id', 'ASC')->paginate(10);
      // dd($timesheetData);
    } else if (auth()->user()->role_id == 11) {
      $timesheetData = DB::table('timesheetusers')
        ->leftjoin('teammembers', 'teammembers.id', 'timesheetusers.createdby')
        ->leftjoin('assignmentbudgetings', 'assignmentbudgetings.assignmentgenerate_id', 'timesheetusers.assignmentgenerate_id')
        ->whereIn('timesheetusers.status', [2, 3])
        ->where('timesheetusers.rejectedby', auth()->user()->teammember_id)
        ->select('timesheetusers.*', 'teammembers.team_member', 'assignmentbudgetings.assignmentname', 'teammembers.staffcode')->orderBy('id', 'ASC')->get();
    } else {
      $timesheetData = DB::table('timesheetusers')
        ->leftjoin('teammembers', 'teammembers.id', 'timesheetusers.createdby')
        ->leftjoin('assignmentbudgetings', 'assignmentbudgetings.assignmentgenerate_id', 'timesheetusers.assignmentgenerate_id')
        ->where('timesheetusers.createdby', auth()->user()->teammember_id)
        ->whereIn('timesheetusers.status', [2, 3])
        ->select('timesheetusers.*', 'teammembers.team_member', 'assignmentbudgetings.assignmentname', 'teammembers.staffcode')->orderBy('id', 'ASC')->paginate(10);
      // dd($timesheetData);

    }
    // dd($timesheetData);
    return view('backEnd.timesheet.rejectedlist', compact('timesheetData'));
  }
  
  
  
  
  
  

22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
resources\views\backEnd\timesheet\rejectedlist.blade.php



                    <table id="examplee" class="table display table-bordered table-striped table-hover">
                        <thead>
                            <tr>
                                <th style="display: none;">id</th>
                                <th>Employee Name</th>
                                <th class="textfixed">Staff Code</th>
                                <th>Date</th>
                                <th>Day</th>
                                <th class="textfixed">Client Name</th>
                                <th class="textfixed">Client Code</th>
                                <th class="textfixed">Assignment Name</th>
                                <th class="textfixed">Assignment Id</th>

                                <th>Work Item</th>
                                <th>Location</th>
                                <th>Partner</th>
                                <th class="textfixed">Partner Code</th>
                                {{-- <th>Hour</th> --}}
                                <th class="textfixed">Total Hour</th>
                                <th>Status</th>

                                @if (Auth::user()->role_id == 13 || Auth::user()->role_id == 14 || Auth::user()->role_id == 15)
                                    <th>Action</th>
                                @endif


                            </tr>
                        </thead>
                        <tbody>
                            @foreach ($timesheetData as $timesheetDatas)
                         
                                <tr>
                                    @php

                                        $timeid = DB::table('timesheetusers')
                                            ->where('timesheetusers.id', $timesheetDatas->id)
                                            ->first();

                                        $client_id = DB::table('timesheetusers')
                                            ->leftjoin('clients', 'clients.id', 'timesheetusers.client_id')
                                            ->leftjoin(
                                                'assignmentbudgetings',
                                                'assignmentbudgetings.assignment_id',
                                                'timesheetusers.assignment_id',
                                            )
                                            ->leftjoin('assignments', 'assignments.id', 'timesheetusers.assignment_id')
                                            ->leftjoin('teammembers', 'teammembers.id', 'timesheetusers.partner')
                                            ->where('timesheetusers.id', $timesheetDatas->id)
                                            ->select(
                                                'clients.client_name',
                                                'clients.client_code',
                                                'timesheetusers.hour',
                                                'timesheetusers.id',
                                                'timesheetusers.location',
                                                'timesheetusers.status',
                                                'assignments.assignment_name',
                                                'billable_status',
                                                'workitem',
                                                'teammembers.team_member',
                                                'teammembers.staffcode',
                                                'assignmentbudgetings.assignmentname',
                                            )
                                            ->first();

                                        // dd($client_id);
                                        $total = DB::table('timesheetusers')

                                            ->where('timesheetusers.timesheetid', $timesheetDatas->timesheetid)
                                            ->sum('hour');

                                        $dates = date('l', strtotime($timesheetDatas->date));

                                        $assignmentcheck = DB::table('assignmentbudgetings')
                                            ->where('assignmentgenerate_id', $timesheetDatas->assignmentgenerate_id)
                                            ->first();

                                        $permotioncheck = DB::table('teamrolehistory')
                                            ->where('teammember_id', $timesheetDatas->createdby)
                                            ->first();

                                        //shshid client
                                        // $datadate = Carbon\Carbon::createFromFormat('Y-m-d', $timesheetDatas->date);
                                        $datadate = $assignmentcheck
                                            ? Carbon\Carbon::createFromFormat(
                                                'Y-m-d H:i:s',
                                                $assignmentcheck->created_at,
                                            )
                                            : null;

                                        $permotiondate = null;
                                        if ($permotioncheck) {
                                            $permotiondate = Carbon\Carbon::createFromFormat(
                                                'Y-m-d H:i:s',
                                                $permotioncheck->created_at,
                                            );
                                        }
                                    @endphp
                                    <td style="display: none;">{{ $timesheetDatas->id }}</td>

                                    <td class="textfixed"> {{ $timesheetDatas->team_member ?? '' }} </td>
                                    @if ($permotioncheck && $datadate && $datadate->greaterThan($permotiondate))
                                        <td>{{ $permotioncheck->newstaff_code }}</td>
                                    @else
                                        <td>{{ $timesheetDatas->staffcode }}</td>
                                    @endif

                                    <td class="textfixed">
                                        <span style="display: none;">
                                            {{ date('Y-m-d', strtotime($timesheetDatas->date)) }}
                                        </span>
                                        {{ date('d-m-Y', strtotime($timesheetDatas->date)) }}
                                    </td>

                                    <td class="textfixed">
                                        @if ($timesheetDatas->date != null)
                                            {{ $dates ?? '' }}
                                        @endif
                                    </td>
                                    <td class="textfixed">
                                        {{ $client_id->client_name ?? '' }}
                                        @if (count((array) $client_id->client_name) > 1)
                                            ,
                                        @endif
                                    </td>
                                    <td class="textfixed">
                                        {{ $client_id->client_code ?? '' }}
                                        @if (count((array) $client_id->client_code) > 1)
                                            ,
                                        @endif
                                    </td>
                                    <td class="textfixed">
                                        {{ $client_id->assignment_name ?? '' }}
                                        @if ($timesheetDatas->assignmentname != null)
                                            ({{ $timesheetDatas->assignmentname ?? '' }})
                                        @endif
                                        @if (count((array) $client_id->assignment_name) > 1)
                                            ,
                                        @endif
                                    </td>
                                    <td class="textfixed">
                                        {{ $timesheetDatas->assignmentgenerate_id ?? '' }}
                                    </td>

                                    <td class="textfixed">
                                        {{ $client_id->workitem ?? '' }}
                                        @if (count((array) $client_id->workitem) > 1)
                                            ,
                                        @endif
                                    </td>

                                    <td class="textfixed">
                                        {{ $client_id->location ?? '' }}
                                        @if (count((array) $client_id->location) > 1)
                                            ,
                                        @endif
                                    </td>
                                    <td class="textfixed">
                                        {{ $client_id->team_member ?? '' }}
                                        @if (count((array) $client_id->team_member) > 1)
                                            ,
                                        @endif
                                    </td>
                                    <td class="textfixed">
                                        @if ($permotioncheck && $datadate && $datadate->greaterThan($permotiondate))
                                            {{ $permotioncheck->newstaff_code }}
                                        @else
                                            {{ $client_id->staffcode ?? '' }}
                                        @endif
                                        @if (count((array) $client_id->team_member) > 1)
                                            ,
                                        @endif
                                    </td>
                                    <td>{{ $total }}</td>
                                    <td class="textfixed">

                                        @if ($client_id->status == 0)
                                            <span class="badge badge-pill badge-warning">saved</span>
                                        @elseif ($client_id->status == 1)
                                            <span class="badge badge-pill badge-danger">submit</span>
                                        @elseif ($client_id->status == 3)
                                            <span class="badge badge-pill badge-info">Submitted</span>
                                        @else
                                            <span class="badge badge-pill badge-secondary">Rejected</span>
                                        @endif

                                    </td>

                                    @if (Auth::user()->role_id == 13 || Auth::user()->role_id == 14 || Auth::user()->role_id == 15)
                                        <td>
                                            @if ($client_id->status == 2)
                                                <a href="{{ url('/timesheetreject/edit/' . $client_id->id) }}"
                                                    class="btn btn-info-soft btn-sm"><i class="far fa-edit"></i></a>
                                            @endif

                                        </td>
                                    @endif
                                </tr>

                                <div class="modal fade" id="exampleModal12" tabindex="-1" role="dialog"
                                    aria-labelledby="exampleModalLabel4" aria-hidden="true">
                                    <div class="modal-dialog" role="document">
                                        <div class="modal-content">
                                            <form id="detailsForm" method="post" action="{{ url('/timesheet/submit') }}"
                                                enctype="multipart/form-data" style="margin-bottom: 0px;">
                                                @csrf
                                                <div class="modal-header" style="background:#37A000;color:white; m-5">
                                                    <h5 class="modal-title font-weight-600" id="exampleModalLabel4">Update
                                                        Timesheet</h5>
                                                    <div>
                                                        <ul>
                                                            @foreach ($errors->all() as $e)
                                                                <li style="color:red;">{{ $e }}</li>
                                                            @endforeach
                                                        </ul>
                                                    </div>
                                                    <button style="color: white" type="button" class="close"
                                                        data-dismiss="modal" aria-label="Close">
                                                        <span aria-hidden="true">&times;</span>
                                                    </button>
                                                </div>
                                                <div class="modal-body">

                                                    <div class="row row-sm">
                                                        {{-- <label for="name" class="col-sm-3 col-form-label font-weight-600">Name :</label> --}}
                                                        <div class="col-sm-12">
                                                            <input type="text" readonly id="teamname"
                                                                class="form-control" placeholder="Enter Name">
                                                            <input hidden class="form-control" id="timesheetid"
                                                                name="timesheetid" type="text">
                                                        </div>
                                                    </div>

                                                    <br>
                                                    @php

                                                        $clientlist = DB::table('clients')
                                                            ->select('clients.client_name', 'clients.id')
                                                            ->get();
                                                        $partner = DB::table('teammembers')
                                                            ->select('teammembers.team_member', 'teammembers.id')
                                                            ->get();
                                                        // dd($partner);
                                                        $assignmentlist = DB::table('assignments')
                                                            ->select('assignments.assignment_name', 'assignments.id')
                                                            ->get();
                                                    @endphp
                                                    <br>

                                                    <div class="row row-sm">
                                                        {{-- <label for="name" class="col-sm-3 col-form-label font-weight-600">Name :</label> --}}
                                                        <div class="col-sm-6">
                                                            <label for="">Select Client</label>
                                                            <select class="form-control" name="client_id" id="client_id">
                                                                <option value="">Select Client</option>
                                                                @foreach ($clientlist as $city)
                                                                    <option value="{{ $city->id }}">
                                                                        {{ $city->client_name }}</option>
                                                                @endforeach
                                                            </select>
                                                        </div>
                                                        {{-- <label for="name" class="col-sm-3 col-form-label font-weight-600">Name :</label> --}}
                                                        <div class="col-sm-6">
                                                            <label for="">Select Assignment</label>
                                                            <select class="form-control" name="assignment_id"
                                                                id="assignment_id">
                                                                <option value="">Select Assignment</option>
                                                                @foreach ($assignmentlist as $assignmentlistData)
                                                                    <option value="{{ $assignmentlistData->id }}">
                                                                        {{ $assignmentlistData->assignment_name }}</option>
                                                                @endforeach
                                                            </select>
                                                        </div>
                                                    </div>

                                                    <br>

                                                    <div class="row row-sm">
                                                        {{-- <label for="name" class="col-sm-3 col-form-label font-weight-600">Name :</label> --}}
                                                        <div class="col-sm-6">
                                                            <label for="">Select Partner</label>
                                                            <select class="form-control" name="partner" id="partner">
                                                                <option value="">Select Partner</option>
                                                                @foreach ($partner as $partnerData)
                                                                    <option value="{{ $partnerData->id }}">
                                                                        {{ $partnerData->team_member }}</option>
                                                                @endforeach
                                                            </select>
                                                        </div>
                                                        <div class="col-sm-6">
                                                            <label for="">Employee Name</label>
                                                            <input required type="text" name="workitem" id="workitem"
                                                                class="form-control" placeholder="Enter Employee Name">
                                                        </div>
                                                    </div>
                                                    <br>
                                                    <div class="row row-sm">
                                                        <div class="col-sm-6">
                                                            <label for="">Location</label>
                                                            <input required type="text" name="location" id="location"
                                                                class="form-control" placeholder="Enter Location">
                                                        </div>
                                                        <div class="col-sm-6">
                                                            <label for="">Work Item</label>
                                                            <input required type="text" name="totalhour"
                                                                id="totalhour" class="form-control"
                                                                placeholder="Enter Name">
                                                        </div>
                                                    </div>
                                                    <br>
                                                    <div class="row row-sm">
                                                        <div class="col-sm-6">
                                                            <label for="">Total Hour</label>
                                                            <input required type="text" name="location" id="location"
                                                                class="form-control" placeholder="Enter Location">
                                                        </div>
                                                    </div>
                                                    <br>

                                                    <div class="modal-footer">
                                                        <button type="button" class="btn btn-danger"
                                                            data-dismiss="modal">Close</button>
                                                        <button type="submit" class="btn btn-success">Submit</button>
                                                    </div>
                                            </form>

                                        </div>
                                    </div>
                                </div>
                    
                            @endforeach
                        </tbody>
                    </table>
					
					
		

		
		

		
					
<script>
    $(document).ready(function() {
        $('#examplee').DataTable({
            "order": [
                [3, "desc"]
            ],
            //   searching: false,
            columnDefs: [{

                @if (Auth::user()->role_id == 11)
                    targets: [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14],
                @else
                    targets: [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15],
                @endif
                orderable: false
            }],
            buttons: []
        });
    });
</script>					





22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
app\Http\Controllers\TimesheetController.php


  public function timesheetEdit(Request $request, $id)
  {
    $timesheetedit = DB::table('timesheetusers')
      ->leftjoin('clients', 'clients.id', 'timesheetusers.client_id')
      ->leftjoin('assignments', 'assignments.id', 'timesheetusers.assignment_id')
      ->leftjoin('teammembers', 'teammembers.id', 'timesheetusers.createdby')
      // ->where('timesheetusers.timesheetid', $id)
      ->where('timesheetusers.id', $id)
      ->select('timesheetusers.*', 'clients.client_name', 'assignments.assignment_name', 'teammembers.team_member')
      ->first();

    // $timesheetedit = DB::table('assignmentbudgetings')->where('client_id', $id)
    //   ->leftjoin('assignments', 'assignments.id', 'assignmentbudgetings.assignment_id')
    //   ->orderBy('assignment_name')->get();
    // dd($timesheetedit);

    // client of particular partner
    $partner = Teammember::where('role_id', '=', 13)->where('status', '=', 1)->with('title')->get();
    $teammember = Teammember::where('role_id', '!=', 11)->with('title', 'role')->get();
    if (auth()->user()->role_id == 11) {
      $client = Client::where('status', 1)->select('id', 'client_name')->orderBy('client_name', 'ASC')->get();
    } elseif (auth()->user()->role_id == 13) {
      $selectedDate = \DateTime::createFromFormat('Y-m-d', $timesheetedit->date);
      $selectedDate1 = \DateTime::createFromFormat('Y-m-d', $timesheetedit->date);

      $clientss = DB::table('assignmentmappings')
        ->leftjoin('assignmentbudgetings', 'assignmentbudgetings.assignmentgenerate_id', 'assignmentmappings.assignmentgenerate_id')
        ->leftjoin('clients', 'clients.id', 'assignmentbudgetings.client_id')
        ->where(function ($query) {
          $query->where('assignmentmappings.leadpartner', auth()->user()->teammember_id)
            ->orWhere('assignmentmappings.otherpartner', auth()->user()->teammember_id);
        })
        ->where(function ($query) use ($selectedDate) {
          $query->whereNull('otpverifydate')
            ->orWhere('otpverifydate', '>=', $selectedDate->modify('-1 day'));
        })
        // ->whereNotNull('clients.client_name')
        ->select('clients.client_name', 'clients.id', 'clients.client_code')
        ->orderBy('client_name', 'ASC')
        ->distinct()->get();

      // // done default $clients in ajax if need then $clientss add in ajax target $request->cid == 29 || $request->cid == 32 || $request->cid == 33 || $request->cid == 34
      // $clients = DB::table('clients')
      //   ->whereIn('id', [29, 32, 33, 34])
      //   ->select('clients.client_name', 'clients.id', 'clients.client_code')
      //   ->orderBy('client_name', 'ASC')
      //   ->distinct()->get();

      // if you selected sturday date then offholydays client will be show otherwise not

      $formattedDate = $selectedDate1->format('Y-m-d');
      $holidaydatecheck = DB::table('holidays')->where('startdate', $formattedDate)->select('holidayname')->first();

      if ($holidaydatecheck) {
        $clientIds = [29, 32, 33, 34];
      } else {
        // if not holidays then go hare
        $dayOfWeek = $selectedDate1->format('w');
        if ($selectedDate1->format('l') == 'Saturday') {
          $dayOfMonth = $selectedDate1->format('j');
          // Calculate which Saturday of the month it is
          $saturdayNumber = ceil($dayOfMonth / 7);
          // offholiday client name will be show on 2nd and 4rth sturday
          if ($saturdayNumber == 2.0 || $saturdayNumber == 4.0) {
            $clientIds = [29, 32, 33, 34];
          } else {
            $clientIds = [29, 32, 34];
          }
        } else {
          $clientIds = [29, 32, 34];
        }
      }
      $clients = DB::table('clients')
        ->whereIn('id', $clientIds)
        ->select('clients.client_name', 'clients.id', 'clients.client_code')
        ->orderBy('client_name', 'ASC')
        ->distinct()
        ->get();

      $client = $clientss->merge($clients);
    } else {

      $selectedDate = \DateTime::createFromFormat('Y-m-d', $timesheetedit->date);
      $selectedDate1 = \DateTime::createFromFormat('Y-m-d', $timesheetedit->date);

      $clientss = DB::table('assignmentteammappings')
        ->leftjoin('assignmentmappings', 'assignmentmappings.id', 'assignmentteammappings.assignmentmapping_id')
        ->leftjoin('assignmentbudgetings', 'assignmentbudgetings.assignmentgenerate_id', 'assignmentmappings.assignmentgenerate_id')
        ->leftjoin('clients', 'clients.id', 'assignmentbudgetings.client_id')
        ->orwhere('assignmentteammappings.teammember_id', auth()->user()->teammember_id)
        ->whereNotIn('assignmentbudgetings.assignmentname', ['Unallocated', 'Official Travel', 'Off/Holiday', 'Seminar/Conference/Post Qualification Course'])
        ->where(function ($query) use ($selectedDate) {
          $query->whereNull('otpverifydate')
            ->orWhere('otpverifydate', '>=', $selectedDate->modify('-1 day'));
        })
        ->select('clients.client_name', 'clients.id', 'clients.client_code')
        ->orderBy('client_name', 'ASC')
        ->distinct()->get();

      $formattedDate = $selectedDate1->format('Y-m-d');
      $holidaydatecheck = DB::table('holidays')->where('startdate', $formattedDate)->select('holidayname')->first();

      if ($holidaydatecheck) {
        $clientIds = [29, 32, 33, 34];
      } else {
        // if not holidays then go hare
        $dayOfWeek = $selectedDate1->format('w');
        if ($selectedDate1->format('l') == 'Saturday') {
          $dayOfMonth = $selectedDate1->format('j');
          // Calculate which Saturday of the month it is
          $saturdayNumber = ceil($dayOfMonth / 7);
          // offholiday client name will be show on 2nd and 4rth sturday
          if (auth()->user()->role_id == 14) {
            if ($saturdayNumber == 2.0 || $saturdayNumber == 4.0) {
              $clientIds = [29, 32, 33, 34];
            } else {
              $clientIds = [29, 32, 34];
            }
          } else {
            if ($saturdayNumber == 1.0 || $saturdayNumber == 2.0 || $saturdayNumber == 3.0 || $saturdayNumber == 4.0 || $saturdayNumber == 5.0) {
              $clientIds = [29, 32, 33, 34];
            }
          }
        } else {
          $clientIds = [29, 32, 34];
        }
      }
      $clients = DB::table('clients')
        ->whereIn('id', $clientIds)
        ->select('clients.client_name', 'clients.id', 'clients.client_code')
        ->orderBy('client_name', 'ASC')
        ->distinct()
        ->get();

      $client = $clientss->merge($clients);
    }
    $assignment = Assignment::select('id', 'assignment_name')->get();
    return view('backEnd.timesheet.correction', compact('client', 'teammember', 'assignment', 'partner', 'timesheetedit'));
  }






22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
resources\views\backEnd\timesheet\correction.blade.php

replace all code hare 






22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
app\Http\Controllers\TimesheetController.php


  public function timesheeteditstore(Request $request)
  {
    //akshay kumar

    $oldtimesheetsubmiteddata = DB::table('timesheetusers')
      ->where('timesheetid', $request->timesheetid)
      ->where('createdby', $request->createdby) // Assuming you are storing user ID
      ->get();

    // Calculate the total hours from previously submitted timesheets (status = 1)
    $SubmittedTimesheetHours = $oldtimesheetsubmiteddata->whereIn('status', [1, 3])->sum('hour');

    // Get the new rejected hours from the request
    $RejectedTimesheetHours = $request->input('hour');

    // Cast rejected hours to integer to ensure it's a numeric value
    $RejectedTimesheetHours = (int)$RejectedTimesheetHours;

    // Calculate the total hours by adding both submitted and rejected hours
    $totalHours = $SubmittedTimesheetHours + $RejectedTimesheetHours;
    // dd($request);


    // Check if the total hours exceed the limit of 12
    if (!is_numeric($totalHours) || $totalHours > 12) {

      $output = ['msg' => 'The total hours cannot be greater than 12'];
      return redirect('timesheetreject/edit/' . $request->timesheetusersid)->with('statuss', $output);
    }


    if (!is_numeric($request->assignment_id)) {
      $assignment = Assignmentmapping::where('assignmentgenerate_id', $request->assignment_id)
        ->select('assignment_id')
        ->first();
      // ->toArray();
      // $assignment_id = $assignment[0]['assignment_id'];
      $assignment_id = $assignment->assignment_id;
      $assignmentgenerateId = $request->assignment_id;
      $oldtimesheetdata = DB::table('timesheetusers')->where('id', $request->timesheetusersid)->first();
      // update total hour 

      if (auth()->user()->role_id == 14 || auth()->user()->role_id == 15) {

        $gettotalteamhour = DB::table('assignmentmappings')
          ->leftJoin(
            'assignmentteammappings',
            'assignmentteammappings.assignmentmapping_id',
            'assignmentmappings.id',
          )
          ->where(
            'assignmentmappings.assignmentgenerate_id',
            $oldtimesheetdata->assignmentgenerate_id
          )
          ->where('assignmentteammappings.teammember_id', auth()->user()->teammember_id)
          ->select('assignmentteammappings.*')
          ->first();



        $gettotalteamhournew = DB::table('assignmentmappings')
          ->leftJoin(
            'assignmentteammappings',
            'assignmentteammappings.assignmentmapping_id',
            'assignmentmappings.id',
          )
          ->where(
            'assignmentmappings.assignmentgenerate_id',
            $request->assignment_id
          )
          ->where('assignmentteammappings.teammember_id', auth()->user()->teammember_id)
          ->select('assignmentteammappings.*')
          ->first();




        if ($gettotalteamhour) {
          if ($gettotalteamhour->teamhour == null) {
            $gettotalteamhour->teamhour = 0;
          }
          $finalresult =  $gettotalteamhour->teamhour - $request->hour;
          $totalteamhourupdate = DB::table('assignmentteammappings')
            ->where('id', $gettotalteamhour->id)
            // ->get();
            ->update(['teamhour' =>  $finalresult]);
        }
        if ($gettotalteamhournew) {
          if ($gettotalteamhournew->teamhour == null) {
            $gettotalteamhournew->teamhour = 0;
          }
          $finalresult =  $gettotalteamhournew->teamhour + $request->hour;
          $totalteamhourupdate = DB::table('assignmentteammappings')
            ->where('id', $gettotalteamhournew->id)
            // ->get();
            ->update(['teamhour' =>  $finalresult]);
        }
      }

      if (auth()->user()->role_id == 13) {
        $assignmentdata = DB::table('assignmentmappings')
          ->where('assignmentgenerate_id', $assignmentgenerateId)
          ->first();
        $assignmentdataold = DB::table('assignmentmappings')
          ->where('assignmentgenerate_id', $oldtimesheetdata->assignmentgenerate_id)
          ->first();

        // old assignment hour subtract 
        if ($assignmentdataold->leadpartner == auth()->user()->teammember_id) {
          if ($assignmentdataold->leadpartnerhour == null) {
            $assignmentdataold->leadpartnerhour = 0;
          }
          $finalresultleadpatner =  $assignmentdataold->leadpartnerhour + $oldtimesheetdata->hour;
          $totalteamhourupdate = DB::table('assignmentmappings')
            ->where('id', $assignmentdataold->id)
            // ->get();
            ->update(['leadpartnerhour' => $finalresultleadpatner]);
        }
        if ($assignmentdataold->otherpartner == auth()->user()->teammember_id) {
          if ($assignmentdataold->otherpartnerhour == null) {
            $assignmentdataold->otherpartnerhour = 0;
          }
          $finalresultotherpatner =  $assignmentdataold->otherpartnerhour - $oldtimesheetdata->hour;
          $totalteamhourupdate = DB::table('assignmentmappings')
            ->where('id', $assignmentdataold->id)
            // ->get();
            ->update(['otherpartnerhour' => $finalresultotherpatner]);
        }

        // new assignment hour add
        if ($assignmentdata->leadpartner == auth()->user()->teammember_id) {
          if ($assignmentdata->leadpartnerhour == null) {
            $assignmentdata->leadpartnerhour = 0;
          }
          $finalresultleadpatner =  $assignmentdata->leadpartnerhour + $request->hour;
          $totalteamhourupdate = DB::table('assignmentmappings')
            ->where('id', $assignmentdata->id)
            // ->get();
            ->update(['leadpartnerhour' => $finalresultleadpatner]);
        }
        if ($assignmentdata->otherpartner == auth()->user()->teammember_id) {
          if ($assignmentdata->otherpartnerhour == null) {
            $assignmentdata->otherpartnerhour = 0;
          }
          $finalresultotherpatner =  $assignmentdata->otherpartnerhour + $request->hour;
          $totalteamhourupdate = DB::table('assignmentmappings')
            ->where('id', $assignmentdata->id)
            // ->get();
            ->update(['otherpartnerhour' => $finalresultotherpatner]);
        }
      }
    }

    if (is_numeric($request->assignment_id)) {
      $assignment_id = $request->assignment_id;
      $getassignmentgenerateId = DB::table('timesheetusers')->where('id', $request->timesheetusersid)->first();
      $assignmentgenerateId = $getassignmentgenerateId->assignmentgenerate_id;

      $oldtimesheetdata = DB::table('timesheetusers')->where('id', $request->timesheetusersid)->first();
      // update total hour 
      if ($oldtimesheetdata->hour != $request->hour) {
        if (auth()->user()->role_id == 14 || auth()->user()->role_id == 15) {
          $gettotalteamhour = DB::table('assignmentmappings')
            ->leftJoin(
              'assignmentteammappings',
              'assignmentteammappings.assignmentmapping_id',
              'assignmentmappings.id',
            )
            ->where(
              'assignmentmappings.assignmentgenerate_id',
              $oldtimesheetdata->assignmentgenerate_id
            )
            ->where('assignmentteammappings.teammember_id', auth()->user()->teammember_id)
            ->select('assignmentteammappings.*')
            ->first();
          if ($gettotalteamhour) {
            $totalteamhour = $gettotalteamhour->teamhour;
            $subtractoldhour =  $totalteamhour - $oldtimesheetdata->hour;
            $finalresult =  $subtractoldhour + $request->hour;

            $totalteamhourupdate = DB::table('assignmentteammappings')
              ->where('id', $gettotalteamhour->id)
              // ->get();
              ->update(['teamhour' =>  $finalresult]);
          }
        }
        if (auth()->user()->role_id == 13) {
          $assignmentdata = DB::table('assignmentmappings')
            ->where('assignmentgenerate_id', $oldtimesheetdata->assignmentgenerate_id)
            ->first();

          if ($assignmentdata->leadpartner == auth()->user()->teammember_id) {
            $subtractoldhour =  $assignmentdata->leadpartnerhour - $oldtimesheetdata->hour;
            $finalresultleadpatner =  $subtractoldhour + $request->hour;
            $totalteamhourupdate = DB::table('assignmentmappings')
              ->where('id', $assignmentdata->id)
              // ->get();
              ->update(['leadpartnerhour' => $finalresultleadpatner]);
          }
          if ($assignmentdata->otherpartner == auth()->user()->teammember_id) {
            $subtractoldhour =  $assignmentdata->otherpartnerhour - $oldtimesheetdata->hour;
            $finalresultotherpatner =  $subtractoldhour + $request->hour;

            $totalteamhourupdate = DB::table('assignmentmappings')
              ->where('id', $assignmentdata->id)
              // ->get();
              ->update(['otherpartnerhour' => $finalresultotherpatner]);
          }
        }
      }
    }

    try {
      $timesheetdataupdate = DB::table('timesheetusers')->where('id', $request->timesheetusersid)->first();

      // dd($assignmentgenerateId);
      DB::table('timesheets')->where('id', $timesheetdataupdate->timesheetid)->update([
        'status'   =>   3,
      ]);

      DB::table('timesheetusers')->where('id', $request->timesheetusersid)->update([
        'status'   =>   3,
        'client_id'   =>  $request->client_id,
        'assignmentgenerate_id'   =>  $assignmentgenerateId,
        'assignment_id'   =>   $assignment_id,
        'partner'   =>  $request->partner,
        'workitem'   =>   $request->workitem,
        'createdby'   =>   $request->createdby,
        'location'   =>   $request->location,
        'hour'   =>   $request->hour,
      ]);

      // Attendance code start hare 
      $hdatess = Carbon::parse($request->date)->format('Y-m-d');
      $day = Carbon::parse($hdatess)->format('d');
      $month = Carbon::parse($hdatess)->format('F');
      $yeardata = Carbon::parse($hdatess)->format('Y');

      $dates = [
        '01' => 'one',
        '02' => 'two',
        '03' => 'three',
        '04' => 'four',
        '05' => 'five',
        '06' => 'six',
        '07' => 'seven',
        '08' => 'eight',
        '09' => 'nine',
        '10' => 'ten',
        '11' => 'eleven',
        '12' => 'twelve',
        '13' => 'thirteen',
        '14' => 'fourteen',
        '15' => 'fifteen',
        '16' => 'sixteen',
        '17' => 'seventeen',
        '18' => 'eighteen',
        '19' => 'ninghteen',
        '20' => 'twenty',
        '21' => 'twentyone',
        '22' => 'twentytwo',
        '23' => 'twentythree',
        '24' => 'twentyfour',
        '25' => 'twentyfive',
        '26' => 'twentysix',
        '27' => 'twentyseven',
        '28' => 'twentyeight',
        '29' => 'twentynine',
        '30' => 'thirty',
        '31' => 'thirtyone',
      ];

      $column = $dates[$day];

      // check attendenace record exist or not 
      $attendances = DB::table('attendances')
        ->where('employee_name', $request->createdby)
        ->where('month', $month)
        ->first();


      if ($attendances && property_exists($attendances, $column)) {
        $checkwording = DB::table('attendances')
          ->where('id', $attendances->id)
          ->value($column);

        if ($checkwording == 'R') {
          $client = $request->client_id;
          // $assignmentid = $request->assignment_id;
          if (is_numeric($request->assignment_id)) {
            $assignmentid = $request->assignment_id;
          } else {
            $assignmentid = $assignment_id;
          }

          // Determine update wording based on client and assignment conditions
          // $updatewording = match (true) {
          //   // Travel
          //   $client == 32 => 'T',
          //   // Off holidays
          //   $client == 33 && str_replace(['1st ', '2nd ', '3rd ', '4th ', '5th '], '', $request->workitem) == 'Saturday' => 'OH',
          //   // Other holidays from calendar
          //   $client == 33 => 'H',
          //   // Casual leave
          //   $client == 134 && $assignmentid == 215 => 'CL',
          //   // Exam leave
          //   $client == 134 && $assignmentid == 214 => 'EL',
          //     // Default presence
          //   default => 'P',
          // };


          if ($client == 32) {
            $updatewording = 'T'; // Travel
          } elseif ($client == 33 && str_replace(['1st ', '2nd ', '3rd ', '4th ', '5th '], '', $request->workitem) == 'Saturday') {
            $updatewording = 'OH'; // Off holidays
          } elseif ($client == 33) {
            $updatewording = 'H'; // Other holidays from calendar
          } elseif ($client == 134 && $assignmentid == 215) {
            $updatewording = 'CL'; // Casual leave
          } elseif ($client == 134 && $assignmentid == 214) {
            $updatewording = 'EL'; // Exam leave
          } else {
            $updatewording = 'P'; // Default presence
          }

          // Mapping for total count columns
          $totalCountMapping = [
            'P' => 'no_of_days_present',
            'CL' => 'casual_leave',
            'EL' => 'exam_leave',
            'T' => 'travel',
            'OH' => 'offholidays',
            'W' => 'sundaycount',
            'H' => 'holidays'
          ];

          // Update the total count and attendance record if applicable
          if (isset($totalCountMapping[$updatewording])) {
            $totalcountColumn = $totalCountMapping[$updatewording];
            $totalcountupdate = $attendances->$totalcountColumn + 1;
            DB::table('attendances')
              ->where('id', $attendances->id)
              ->update([
                $column => $updatewording,
                $totalcountColumn => $totalcountupdate,
              ]);
          }
        }
      }

      // dd('updated', 1);
      // Attendance code end hare 

      if ($request->status == 2) {
        DB::table('timesheetupdatelogs')->insert([
          'timesheetusers_id'   =>  $request->timesheetusersid,
          'status'   =>   3,
          'created_at' => now(),
          'updated_at' => now(),
        ]);
      }
      $output = array('msg' => 'Updated Successfully');
      // return back()->with('statuss', $output);
      return redirect()->to('rejectedlist')->with('statuss', $output);
    } catch (Exception $e) {
      DB::rollBack();
      Log::emergency("File:" . $e->getFile() . "Line:" . $e->getLine() . "Message:" . $e->getMessage());
      report($e);
      $output = array('msg' => $e->getMessage());
      return back()->withErrors($output)->withInput();
    }
  }








22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
app\Http\Controllers\TeammemberController.php

    public function update(Request $request, $id)
    {
        $request->validate([
            'team_member' => "required"
        ]);

        try {

            if ($request->leavingdate != null) {
                if ($request->rejoining_date == null) {
                    // update cross sign after exit date of users 
                    $checksavetimesheet = DB::table('timesheetusers')
                        ->where('createdby', $id)
                        ->where('date', '>', $request->leavingdate)
                        ->where('status', 0)
                        // ->delete();
                        ->first();

                    if ($checksavetimesheet) {
                        $output = array('msg' => 'Please delete save timesheet after leaving date');
                        return back()->with('statuss', $output);
                    }

                    $exitDate = Carbon::parse($request->leavingdate);
                    $exitMonth = $exitDate->format('F');
                    $exitYear = $exitDate->year;
                    $dayOfExit = $exitDate->day;
                    $totalDaysInExitMonth = $exitDate->daysInMonth;

                    // Attendance delete after leaving date 
                    // $attendencedelete = DB::table('attendances')
                    //     ->where('employee_name', $id)
                    //     ->whereDate('created_at', '>', $request->leavingdate)
                    //     ->delete();

                    // Define month order array
                    $months = [
                        'January',
                        'February',
                        'March',
                        'April',
                        'May',
                        'June',
                        'July',
                        'August',
                        'September',
                        'October',
                        'November',
                        'December'
                    ];

                    // Get the index of the exit month
                    $exitMonthIndex = array_search($exitMonth, $months);

                    // Get months after the exit month
                    $monthsAfterExitMonth = array_slice($months, $exitMonthIndex + 1);
                    // Filter attendance records where the month is after the exit month in the exit year
                    $attendencedelete = DB::table('attendances')
                        ->where('employee_name', $id)
                        ->where('year', $exitYear)
                        ->whereIn('month', $monthsAfterExitMonth)
                        // ->get();
                        ->delete();

                    // Check if the attendance record exists for the exit month
                    $exitmonthattendances = DB::table('attendances')
                        ->where('employee_name', $id)
                        ->where('month', $exitMonth)
                        ->where('year', $exitYear)
                        ->first();

                    // If not, insert a new record
                    if (!$exitmonthattendances) {
                        DB::table('attendances')->insert([
                            'employee_name' => $id,
                            'month' => $exitMonth,
                            'year' => $exitYear,
                            'fulldate' => $exitDate->format('Y-m-d'),
                            'created_at' => now(),
                            'updated_at' => now(),
                        ]);

                        // Fetch the newly inserted attendance record
                        $exitmonthattendances = DB::table('attendances')
                            ->where('employee_name', $id)
                            ->where('month', $exitMonth)
                            ->where('year', $exitYear)
                            ->first();
                    }

                    // Map day numbers to column names
                    $daysToColumns = [
                        1 => 'one',
                        2 => 'two',
                        3 => 'three',
                        4 => 'four',
                        5 => 'five',
                        6 => 'six',
                        7 => 'seven',
                        8 => 'eight',
                        9 => 'nine',
                        10 => 'ten',
                        11 => 'eleven',
                        12 => 'twelve',
                        13 => 'thirteen',
                        14 => 'fourteen',
                        15 => 'fifteen',
                        16 => 'sixteen',
                        17 => 'seventeen',
                        18 => 'eighteen',
                        19 => 'ninghteen',
                        20 => 'twenty',
                        21 => 'twentyone',
                        22 => 'twentytwo',
                        23 => 'twentythree',
                        24 => 'twentyfour',
                        25 => 'twentyfive',
                        26 => 'twentysix',
                        27 => 'twentyseven',
                        28 => 'twentyeight',
                        29 => 'twentynine',
                        30 => 'thirty',
                        31 => 'thirtyone'
                    ];

                    // Prepare the update data
                    $updateData = [];
                    foreach ($daysToColumns as $day => $column) {
                        if ($day > $dayOfExit && $day <= $totalDaysInExitMonth) {
                            $updateData[$column] = 'X';
                            // $updateData[$column] = null;
                        }
                    }

                    // Update the attendance record
                    if (!empty($updateData)) {
                        DB::table('attendances')
                            ->where('id', $exitmonthattendances->id)
                            ->update($updateData);
                    }
                    // update cross sign after exit date of users end hare 
                    $timesheetsave = DB::table('timesheetusers')
                        ->where('createdby', $id)
                        ->where('status', 0)
                        ->orderBy('date', 'ASC')
                        ->get();


                    // Chunk the $timesheetsave data for one week
                    $weeksData = $timesheetsave->chunk(6);
                    foreach ($weeksData as $weekData) {

                        foreach ($weekData as $timesheet) {
                            $startdate = Carbon::parse($timesheet->date);
                            $nextSaturday = $startdate->copy()->next(Carbon::SATURDAY);

                            $startdateformat = $startdate->format('Y-m-d');
                            $nextSaturdayformat = $nextSaturday->format('Y-m-d');

                            DB::table('timesheetusers')
                                ->where('timesheetid', $timesheet->timesheetid)
                                ->update([
                                    'status' => 1,
                                    'updated_at' => now(),
                                ]);

                            DB::table('timesheets')
                                ->where('id', $timesheet->timesheetid)
                                ->update([
                                    'status' => 1,
                                    'updated_at' => now(),
                                ]);

                            // Attendance code start hare 
                            $hdatess = Carbon::parse($timesheet->date)->format('Y-m-d');
                            $day = Carbon::parse($hdatess)->format('d');
                            $month = Carbon::parse($hdatess)->format('F');
                            $yeardata = Carbon::parse($hdatess)->format('Y');

                            $dates = [
                                '01' => 'one',
                                '02' => 'two',
                                '03' => 'three',
                                '04' => 'four',
                                '05' => 'five',
                                '06' => 'six',
                                '07' => 'seven',
                                '08' => 'eight',
                                '09' => 'nine',
                                '10' => 'ten',
                                '11' => 'eleven',
                                '12' => 'twelve',
                                '13' => 'thirteen',
                                '14' => 'fourteen',
                                '15' => 'fifteen',
                                '16' => 'sixteen',
                                '17' => 'seventeen',
                                '18' => 'eighteen',
                                '19' => 'ninghteen',
                                '20' => 'twenty',
                                '21' => 'twentyone',
                                '22' => 'twentytwo',
                                '23' => 'twentythree',
                                '24' => 'twentyfour',
                                '25' => 'twentyfive',
                                '26' => 'twentysix',
                                '27' => 'twentyseven',
                                '28' => 'twentyeight',
                                '29' => 'twentynine',
                                '30' => 'thirty',
                                '31' => 'thirtyone',
                            ];

                            $column = $dates[$day];

                            // check attendenace record exist or not 
                            $attendances = DB::table('attendances')
                                ->where('employee_name', $timesheet->createdby)
                                ->where('month', $month)
                                ->where('year', $yeardata)
                                ->first();

                            if ($attendances == null) {
                                DB::table('attendances')->insert([
                                    'employee_name' => $timesheet->createdby,
                                    'month' => $month,
                                    'year' => $yeardata,
                                    // 'dateofjoining' => $teammember->joining_date,
                                    // 'fulldate' => date('Y-m-d'),
                                    'fulldate' => $hdatess,
                                    'created_at' => date('Y-m-d H:i:s'),
                                    'updated_at' => date('Y-m-d H:i:s'),
                                ]);
                            }


                            $attendances = DB::table('attendances')
                                ->where('employee_name', $timesheet->createdby)
                                ->where('month', $month)
                                ->where('year', $yeardata)
                                ->first();

                            if ($attendances && property_exists($attendances, $column)) {

                                $client = $timesheet->client_id;
                                $assignmentid = $timesheet->assignment_id;
                                // $updatewording = match (true) {
                                //     // Travel
                                //     $client == 32 => 'T',
                                //     // Off holidays
                                //     $client == 33 && str_replace(['1st ', '2nd ', '3rd ', '4th ', '5th '], '', $timesheet->workitem) == 'Saturday' => 'OH',
                                //     // Other holidays from calendar
                                //     $client == 33 => 'H',
                                //     // Casual leave
                                //     $client == 134 && $assignmentid == 215 => 'CL',
                                //     // Exam leave
                                //     $client == 134 && $assignmentid == 214 => 'EL',
                                //         // Default presence
                                //     default => 'P',
                                // };

                                if ($client == 32) {
                                    $updatewording = 'T'; // Travel
                                } elseif ($client == 33 && str_replace(['1st ', '2nd ', '3rd ', '4th ', '5th '], '', $timesheet->workitem) == 'Saturday') {
                                    $updatewording = 'OH'; // Off holidays
                                } elseif ($client == 33) {
                                    $updatewording = 'H'; // Other holidays from calendar
                                } elseif ($client == 134 && $assignmentid == 215) {
                                    $updatewording = 'CL'; // Casual leave
                                } elseif ($client == 134 && $assignmentid == 214) {
                                    $updatewording = 'EL'; // Exam leave
                                } else {
                                    $updatewording = 'P'; // Default presence
                                }
                            }

                            $totalCountMapping = [
                                'P' => 'no_of_days_present',
                                'CL' => 'casual_leave',
                                'EL' => 'exam_leave',
                                'T' => 'travel',
                                'OH' => 'offholidays',
                                'W' => 'sundaycount',
                                'H' => 'holidays'
                            ];

                            // Update the total count and attendance record if applicable
                            // if (isset($totalCountMapping[$updatewording])) {
                            //     $totalcountColumn = $totalCountMapping[$updatewording];
                            //     $totalcountupdate = $attendances->$totalcountColumn + 1;

                            //     DB::table('attendances')
                            //         ->where('id', $attendances->id)
                            //         ->update([
                            //             $column => $updatewording,
                            //             $totalcountColumn => $totalcountupdate,
                            //         ]);
                            // }

                            if (isset($totalCountMapping[$updatewording])) {
                                $totalcountColumn = $totalCountMapping[$updatewording];
                                $totalcountupdate = $attendances->$totalcountColumn + 1;

                                if ($totalcountColumn != "exam_leave") {

                                    $iftwotimesheetinday = DB::table('attendances')
                                        ->where('id', $attendances->id)
                                        ->value($column);

                                    if ($iftwotimesheetinday == "P") {
                                        $updatewording = "P";
                                        $totalcountupdate = $attendances->$totalcountColumn + 0;
                                    } elseif ($iftwotimesheetinday == 'T') {
                                        $updatewording = "P";
                                        $totalcountupdate = $attendances->$totalcountColumn + 0;
                                    }

                                    DB::table('attendances')
                                        ->where('id', $attendances->id)
                                        ->update([
                                            $column => $updatewording,
                                            $totalcountColumn => $totalcountupdate,
                                        ]);
                                }
                            }
                            // Attendance code end hare 
                        }

                        // update sunday data in attendance
                        $prevSunday = $startdate->copy()->previous(Carbon::SUNDAY);
                        $day1 = Carbon::parse($prevSunday)->format('d');
                        $month1 = $prevSunday->format('F');
                        $yeardata = $prevSunday->format('Y');
                        $fulldate = $prevSunday->format('Y-m-d');

                        $numberWords = [
                            '1' => 'one',
                            '2' => 'two',
                            '3' => 'three',
                            '4' => 'four',
                            '5' => 'five',
                            '6' => 'six',
                            '7' => 'seven',
                            '8' => 'eight',
                            '9' => 'nine',
                            '10' => 'ten',
                            '11' => 'eleven',
                            '12' => 'twelve',
                            '13' => 'thirteen',
                            '14' => 'fourteen',
                            '15' => 'fifteen',
                            '16' => 'sixteen',
                            '17' => 'seventeen',
                            '18' => 'eighteen',
                            '19' => 'nineteen',
                            '20' => 'twenty',
                            '21' => 'twentyone',
                            '22' => 'twentytwo',
                            '23' => 'twentythree',
                            '24' => 'twentyfour',
                            '25' => 'twentyfive',
                            '26' => 'twentysix',
                            '27' => 'twentyseven',
                            '28' => 'twentyeight',
                            '29' => 'twentynine',
                            '30' => 'thirty',
                            '31' => 'thirtyone'
                        ];

                        $dayWord = $numberWords[(int)$day1];

                        $getdateformated = $prevSunday->format('Y-m-d');

                        $getholidaysss = DB::table('holidays')
                            ->where('startdate', '=', $getdateformated)
                            ->orWhere('enddate', '=', $getdateformated)
                            ->first();

                        if ($getholidaysss != null) {
                            $updateddata = 'H';
                        } else {
                            $updateddata = 'W';
                        }

                        $attendances = DB::table('attendances')
                            ->where('employee_name', $timesheet->createdby)
                            ->where('month', $month1)
                            ->where('year', $yeardata)
                            ->first();

                        if ($attendances == null) {
                            DB::table('attendances')->insert([
                                'employee_name' => $timesheet->createdby,
                                'month' => $month1,
                                'year' => $yeardata,
                                // 'dateofjoining' => $teammember->joining_date,
                                'fulldate' => $fulldate,
                                'created_at' => date('Y-m-d H:i:s'),
                                'updated_at' => date('Y-m-d H:i:s'),
                            ]);
                        }

                        $attendances = DB::table('attendances')
                            ->where('employee_name', $timesheet->createdby)
                            ->where('month', $month1)
                            ->where('year', $yeardata)
                            ->first();

                        $totalCountMapping = [
                            'P' => 'no_of_days_present',
                            'CL' => 'casual_leave',
                            'EL' => 'exam_leave',
                            'T' => 'travel',
                            'OH' => 'offholidays',
                            'W' => 'sundaycount',
                            'H' => 'holidays'
                        ];

                        $prevcheck = DB::table('attendances')
                            ->where('employee_name', $timesheet->createdby)
                            ->where('month', $month1)
                            ->where('year', $yeardata)
                            ->whereNotNull($dayWord)
                            ->first();


                        if ($prevcheck == null && isset($totalCountMapping[$updateddata])) {
                            $totalcountColumn = $totalCountMapping[$updateddata];
                            $sundaycountget = DB::table('attendances')
                                ->where('employee_name', $timesheet->createdby)
                                ->where('month', $month1)
                                ->where('year', $yeardata)
                                ->first();

                            if ($sundaycountget) {
                                $totalcountupdate = $sundaycountget->$totalcountColumn + 1;
                                DB::table('attendances')
                                    ->where('id', $sundaycountget->id)
                                    ->update([
                                        $dayWord => $updateddata,
                                        $totalcountColumn => $totalcountupdate,
                                    ]);
                                // $updateddata = $getholidaysss ? 'H' : 'W';
                            }
                        }
                        // update sunday data in attendance end hare

                        // Insert data into the timesheetreport table for the current week
                        $startdate = Carbon::parse($weekData->first()->date);
                        $nextSaturday = $startdate->copy()->next(Carbon::SATURDAY);

                        $startdateformat = $startdate->format('Y-m-d');
                        $nextSaturdayformat = $nextSaturday->format('Y-m-d');

                        $week = date('d-m-Y', strtotime($startdateformat)) . ' to ' . date('d-m-Y', strtotime($nextSaturdayformat));

                        $co = DB::table('timesheetusers')
                            ->where('createdby', $id)
                            ->whereBetween('date', [$startdateformat, $nextSaturdayformat])
                            ->select('partner', DB::raw('SUM(hour) as total_hours'), DB::raw('COUNT(DISTINCT timesheetid) as row_count'))
                            ->groupBy('partner')
                            ->get();
                        // dd($co);

                        foreach ($co as $codata) {
                            DB::table('timesheetreport')->insert([
                                'teamid'       =>     $id,
                                'week'       =>     $week,
                                'totaldays'       =>     $codata->row_count,
                                'totaltime' =>  $codata->total_hours,
                                'partnerid'  => $codata->partner,
                                'startdate'  => $startdateformat,
                                'enddate'  => $nextSaturdayformat,
                                'created_at'                =>      date('y-m-d H:i:s'),
                            ]);
                        }
                    }
                }
            }

            $data = $request->except(['_token', 'qualification', 'document_file']);
            if ($request->hasFile('cancelcheque')) {
                $file = $request->file('cancelcheque');
                $destinationPath = 'backEnd/image/teammember/cancelcheque';
                $name = time() . $file->getClientOriginalName();
                $s = $file->move($destinationPath, $name);
                //  dd($s); die;
                $data['cancelcheque'] = $name;
            }
            if ($request->hasFile('profilepic')) {
                $avatar = $request->file('profilepic');
                $filename = time() . rand(1, 100) . '.' . $avatar->getClientOriginalExtension();
                Image::make($avatar)->resize(800, 600)->save('backEnd/image/teammember/profilepic/' . $filename);
                $data['profilepic'] = $filename;
            }
            if ($request->hasFile('appointment_letter')) {
                $file = $request->file('appointment_letter');
                $extension = $file->getClientOriginalExtension();
                $filename = time() . '.' . $extension;
                $file->move('backEnd/image/teammember/appointmentletter/', $filename);
                $data['appointment_letter'] = $filename;
            }
            if ($request->hasFile('nda')) {
                $file = $request->file('nda');
                $extension = $file->getClientOriginalExtension();
                $filename = time() . '.' . $extension;
                $file->move('backEnd/image/teammember/nda/', $filename);
                $data['nda'] = $filename;
            }
            if ($request->hasFile('panupload')) {
                $file = $request->file('panupload');
                $destinationPath = 'backEnd/image/teammember/panupload';
                $name = time() . $file->getClientOriginalName();
                $s = $file->move($destinationPath, $name);
                //  dd($s); die;
                $data['panupload'] = $name;
            }
            if ($request->hasFile('addressupload')) {
                $file = $request->file('addressupload');
                $destinationPath = 'backEnd/image/teammember/addressupload';
                $name = time() . $file->getClientOriginalName();
                $s = $file->move($destinationPath, $name);
                //  dd($s); die;
                $data['addressupload'] = $name;
            }
            if ($request->hasFile('aadharupload')) {
                $file = $request->file('aadharupload');
                $destinationPath = 'backEnd/image/teammember/aadharupload';
                $name = time() . $file->getClientOriginalName();
                $s = $file->move($destinationPath, $name);
                //  dd($s); die;
                $data['aadharupload'] = $name;
            }

            // Teammember::find($id)->update($data);
            if ($request->leavingdate != null && $request->status == 1) {
                $oldstatusvalue = Teammember::find($id);
                if ($oldstatusvalue->status == 1 && $oldstatusvalue->rejoining_date == null) {
                    $data = $request->except(['_token', 'qualification', 'document_file', 'status']);
                    $emilid = $data['emailid'];
                    $data['status'] = '0';
                    Teammember::find($id)->update($data);
                    DB::table('users')->where('email', $emilid)->update([
                        'status'         =>  0,
                        'remember_token' => null
                    ]);
                } else {
                    $data = $request->except(['_token', 'qualification', 'document_file']);
                    $emilid = $data['emailid'];
                    Teammember::find($id)->update($data);
                    $oldstatususer = User::where('email', $emilid)->first();
                    if ($oldstatususer->status == 0) {
                        DB::table('users')->where('email', $emilid)->update([
                            'status'         =>  1,
                        ]);
                    }
                }
            } else {
                Teammember::find($id)->update($data);
            }

            if ($request->document_file != null) {
                $qualifications = $request->qualification;
                $documentFiles = $request->document_file;

                for ($i = 0; $i < count($qualifications); $i++) {
                    // Process each qualification and document file entry
                    $documentFile = $documentFiles[$i];
                    if ($documentFile) {
                        $documentFileName = time() . $documentFile->getClientOriginalName();
                        $documentFilePath = 'backEnd/image/teammember/document_file';
                        $documentFile->move($documentFilePath, $documentFileName);

                        DB::table('teammember_document_files')->insert([
                            'teamember_id' => $id,
                            'qualification' => $qualifications[$i],
                            'document_file' => $documentFileName,
                            'created_at' => now(),
                            'updated_at' => now(),
                        ]);
                    }
                }
            }

            DB::table('users')->where('teammember_id', $id)->update([
                'role_id'         =>  $request->role_id,
                'email'         =>  $request->emailid,
            ]);
            $actionName = class_basename($request->route()->getActionname());
            $pagename = substr($actionName, 0, strpos($actionName, "Controller"));
            $id = auth()->user()->teammember_id;
            DB::table('activitylogs')->insert([
                'user_id' => $id,
                'ip_address' => $request->ip(),
                'activitytitle' => $pagename,
                'description' => ' Team Member Data Edit' . ' ' . '( ' . $request->team_member . ' )',
                'created_at' => date('y-m-d'),
                'updated_at' => date('y-m-d')
            ]);
            $output = array('msg' => 'Updated Successfully');
            return redirect('teammember')->with('success', $output);
        } catch (Exception $e) {
            DB::rollBack();
            Log::emergency("File:" . $e->getFile() . "Line:" . $e->getLine() . "Message:" . $e->getMessage());
            report($e);
            $output = array('msg' => $e->getMessage());
            return back()->withErrors($output)->withInput();
        }
    }








22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
app\Http\Controllers\ApplyleaveController.php

    //! after attendance vsademo code Mail::send('emails.applyleaveteam', $data, function ($msg) use ($data) {  comment it 
  public function examleaverequest(Request $request, $id)
  {
    try {
      // start exam leave 
      if ($request->status == 1) {
        $team = DB::table('leaverequest')
          ->leftjoin('applyleaves', 'applyleaves.id', 'leaverequest.applyleaveid')
          ->leftjoin('leavetypes', 'leavetypes.id', 'applyleaves.leavetype')
          ->leftjoin('teammembers', 'teammembers.id', 'applyleaves.createdby')
          ->leftjoin('roles', 'roles.id', 'teammembers.role_id')
          ->where('leaverequest.id', $id)
          ->select('applyleaves.*', 'teammembers.emailid', 'teammembers.team_member', 'roles.rolename', 'leavetypes.name', 'leavetypes.holiday', 'leaverequest.id as examrequestId', 'leaverequest.from_date')
          ->first();

        if ($team->name == 'Exam Leave') {
          $from = Carbon::createFromFormat('Y-m-d', $team->from);
          $to = Carbon::createFromFormat('Y-m-d', $team->to ?? '');
          // came during exam leave
          $camefromexam = Carbon::createFromFormat('Y-m-d', $team->from_date);

          $removedays = $to->diffInDays($camefromexam) + 1;

          $nowtotalleave = $from->diffInDays($camefromexam);
          // it si only serching data from dtabase 
          $finddatafromleaverequest = $to->diffInDays($from) + 1;

          // Update date in to  column in applyleaves table 
          $updatedcamedate = $camefromexam->copy()->subDay()->format('Y-m-d');

          // dd($updatedcamedate);
          if ($nowtotalleave == 0) {
            DB::table('applyleaves')
              ->where('from', $team->from)
              ->where('to', $team->to)
              ->where('createdby', $team->createdby)
              ->delete();

            DB::table('leaverequest')
              ->where('id', $team->examrequestId)
              ->delete();

            DB::table('leaveapprove')
              ->where('teammemberid', $team->createdby)
              ->where('totaldays', $finddatafromleaverequest)
              ->latest()
              ->delete();
          } else {
            DB::table('applyleaves')
              ->where('from', $team->from)
              ->where('to', $team->to)
              ->where('createdby', $team->createdby)
              ->update([
                'to' => $updatedcamedate,
              ]);

            // for approved
            DB::table('leaverequest')
              ->where('id', $team->examrequestId)
              ->update([
                'status' => 1,
              ]);

            // update total leave after came during exam
            DB::table('leaveapprove')
              ->where('teammemberid', $team->createdby)
              ->where('totaldays', $finddatafromleaverequest)
              ->latest()
              ->update([
                'totaldays' => $nowtotalleave,
                'updated_at' => now(),
              ]);
          }
          // get date
          $period = CarbonPeriod::create($team->from_date, $team->to);

          $datess = [];
          foreach ($period as $date) {
            $datess[] = $date->format('Y-m-d');

            $deletedIds = DB::table('timesheets')
              ->where('created_by', $team->createdby)
              ->whereIn('date', $datess)
              ->pluck('id');

            DB::table('timesheets')
              ->where('created_by', $team->createdby)
              ->whereIn('date', $datess)
              ->delete();

            $a = DB::table('timesheetusers')
              ->whereIn('timesheetid', $deletedIds)
              ->delete();
          }

          // Attendance code start hare 
          $el_leave = $datess;
          $lstatus = null;

          foreach ($el_leave as $cl_leave) {
            $cl_leave_day = date('d', strtotime($cl_leave));
            $cl_leave_month = date('F', strtotime($cl_leave));

            // if ($cl_leave_day >= 26 && $cl_leave_day <= 31) {
            //   $cl_leave_month = date('F', strtotime($cl_leave . ' +1 month'));
            // }

            $attendances = DB::table('attendances')->where('employee_name', $team->createdby)
              ->where('month', $cl_leave_month)->first();
            $examleavecount = $attendances->exam_leave;
            $examleavecountupdate = $attendances->exam_leave -= 1;

            $column = '';
            switch ($cl_leave_day) {
              case '26':
                $column = 'twentysix';
                break;
              case '27':
                $column = 'twentyseven';
                break;
              case '28':
                $column = 'twentyeight';
                break;
              case '29':
                $column = 'twentynine';
                break;
              case '30':
                $column = 'thirty';
                break;
              case '31':
                $column = 'thirtyone';
                break;
              case '01':
                $column = 'one';
                break;
              case '02':
                $column = 'two';
                break;
              case '03':
                $column = 'three';
                break;
              case '04':
                $column = 'four';
                break;
              case '05':
                $column = 'five';
                break;
              case '06':
                $column = 'six';
                break;
              case '07':
                $column = 'seven';
                break;
              case '08':
                $column = 'eight';
                break;
              case '09':
                $column = 'nine';
                break;
              case '10':
                $column = 'ten';
                break;
              case '11':
                $column = 'eleven';
                break;
              case '12':
                $column = 'twelve';
                break;
              case '13':
                $column = 'thirteen';
                break;
              case '14':
                $column = 'fourteen';
                break;
              case '15':
                $column = 'fifteen';
                break;
              case '16':
                $column = 'sixteen';
                break;
              case '17':
                $column = 'seventeen';
                break;
              case '18':
                $column = 'eighteen';
                break;
              case '19':
                $column = 'ninghteen';
                break;
              case '20':
                $column = 'twenty';
                break;
              case '21':
                $column = 'twentyone';
                break;
              case '22':
                $column = 'twentytwo';
                break;
              case '23':
                $column = 'twentythree';
                break;
              case '24':
                $column = 'twentyfour';
                break;
              case '25':
                $column = 'twentyfive';
                break;
            }

            // if (!empty($column)) {
            //   if ($nowtotalleave == 0) {
            //     DB::table('attendances')
            //       ->where('employee_name', $team->createdby)
            //       ->where('month', $cl_leave_month)
            //       ->update([
            //         $column => $lstatus,
            //         'exam_leave' => $examleavecountupdate,
            //       ]);
            //   } else {
            //     DB::table('attendances')
            //       ->where('employee_name', $team->createdby)
            //       ->where('month', $cl_leave_month)
            //       ->update([
            //         $column => $lstatus,
            //         'exam_leave' => $examleavecountupdate,
            //       ]);
            //   }
            // }

            if (!empty($column)) {
              $getHoliday = DB::table('holidays')
                ->where('startdate', $cl_leave)
                ->orWhere('enddate', $cl_leave)
                ->exists();

              $holidaysColumn = 'holidays';
              $totalcountupdate = $attendances->$holidaysColumn - 1;

              // Build the common update data
              $updateData = [
                $column => $lstatus,
                // 'exam_leave' => $examleavecountupdate,
              ];

              // If there's a holiday, add 'holidays' to the update data
              if ($getHoliday) {
                $updateData['holidays'] = $totalcountupdate;
              } else {
                $updateData['exam_leave'] = $examleavecountupdate;
              }

              // Separate the update logic based on $nowtotalleave == 0
              if ($nowtotalleave == 0) {
                DB::table('attendances')
                  ->where('employee_name', $team->createdby)
                  ->where('month', $cl_leave_month)
                  ->update($updateData);
              } else {
                DB::table('attendances')
                  ->where('employee_name', $team->createdby)
                  ->where('month', $cl_leave_month)
                  ->update($updateData);
              }
            }
          }
          // Attendance code start hare 
        }
        if ($team->name == 'Casual Leave') {
          $from = Carbon::createFromFormat('Y-m-d', $team->from);
          $to = Carbon::createFromFormat('Y-m-d', $team->to ?? '');
          // came during exam leave
          $camefromexam = Carbon::createFromFormat('Y-m-d', $team->from_date);

          $removedays = $to->diffInDays($camefromexam) + 1;

          $nowtotalleave = $from->diffInDays($camefromexam);
          // it si only serching data from dtabase 
          $finddatafromleaverequest = $to->diffInDays($from) + 1;

          // Update date in to  column in applyleaves table 
          $updatedcamedate = $camefromexam->copy()->subDay()->format('Y-m-d');
          // $updatedcamedate = $camefromexam->copy()->format('Y-m-d');
          if ($nowtotalleave == 0) {
            DB::table('applyleaves')
              ->where('from', $team->from)
              ->where('to', $team->to)
              ->where('createdby', $team->createdby)
              ->delete();

            DB::table('leaverequest')
              ->where('id', $team->examrequestId)
              ->delete();

            DB::table('leaveapprove')
              ->where('teammemberid', $team->createdby)
              ->where('totaldays', $finddatafromleaverequest)
              ->latest()
              ->delete();
          } else {
            DB::table('applyleaves')
              ->where('from', $team->from)
              ->where('to', $team->to)
              ->where('createdby', $team->createdby)
              ->update([
                'to' => $updatedcamedate,
              ]);

            // DB::table('applyleaves')
            // ->where('id', $team->id)
            // ->update([
            //   'to' => $team->from_date,
            // ]);


            // for approved
            DB::table('leaverequest')
              ->where('id', $team->examrequestId)
              ->update([
                'status' => 1,
              ]);

            // update total leave after came during exam
            DB::table('leaveapprove')
              ->where('teammemberid', $team->createdby)
              ->where('totaldays', $finddatafromleaverequest)
              ->latest()
              ->update([
                'totaldays' => $nowtotalleave,
                'updated_at' => now(),
              ]);
          }
          // get date
          $period = CarbonPeriod::create($team->from_date, $team->to);

          $datess = [];
          foreach ($period as $date) {
            $datess[] = $date->format('Y-m-d');

            $deletedIds = DB::table('timesheets')
              ->where('created_by', $team->createdby)
              ->whereIn('date', $datess)
              ->pluck('id');

            DB::table('timesheets')
              ->where('created_by', $team->createdby)
              ->whereIn('date', $datess)
              ->delete();

            $a = DB::table('timesheetusers')
              ->whereIn('timesheetid', $deletedIds)
              ->delete();
          }
          // Attendance code start hare 
          $el_leave = $datess;
          $lstatus = null;

          foreach ($el_leave as $cl_leave) {
            $cl_leave_day = date('d', strtotime($cl_leave));
            $cl_leave_month = date('F', strtotime($cl_leave));

            $attendances = DB::table('attendances')->where('employee_name', $team->createdby)
              ->where('month', $cl_leave_month)->first();

            $casulaleavecount = $attendances->casual_leave;
            $casualleavecountupdate = $attendances->casual_leave -= 1;


            $column = '';
            switch ($cl_leave_day) {
              case '26':
                $column = 'twentysix';
                break;
              case '27':
                $column = 'twentyseven';
                break;
              case '28':
                $column = 'twentyeight';
                break;
              case '29':
                $column = 'twentynine';
                break;
              case '30':
                $column = 'thirty';
                break;
              case '31':
                $column = 'thirtyone';
                break;
              case '01':
                $column = 'one';
                break;
              case '02':
                $column = 'two';
                break;
              case '03':
                $column = 'three';
                break;
              case '04':
                $column = 'four';
                break;
              case '05':
                $column = 'five';
                break;
              case '06':
                $column = 'six';
                break;
              case '07':
                $column = 'seven';
                break;
              case '08':
                $column = 'eight';
                break;
              case '09':
                $column = 'nine';
                break;
              case '10':
                $column = 'ten';
                break;
              case '11':
                $column = 'eleven';
                break;
              case '12':
                $column = 'twelve';
                break;
              case '13':
                $column = 'thirteen';
                break;
              case '14':
                $column = 'fourteen';
                break;
              case '15':
                $column = 'fifteen';
                break;
              case '16':
                $column = 'sixteen';
                break;
              case '17':
                $column = 'seventeen';
                break;
              case '18':
                $column = 'eighteen';
                break;
              case '19':
                $column = 'ninghteen';
                break;
              case '20':
                $column = 'twenty';
                break;
              case '21':
                $column = 'twentyone';
                break;
              case '22':
                $column = 'twentytwo';
                break;
              case '23':
                $column = 'twentythree';
                break;
              case '24':
                $column = 'twentyfour';
                break;
              case '25':
                $column = 'twentyfive';
                break;
            }
            // if (!empty($column)) {
            //   if ($nowtotalleave == 0) {
            //     DB::table('attendances')
            //       ->where('employee_name', $team->createdby)
            //       ->where('month', $cl_leave_month)
            //       ->update([
            //         $column => $lstatus,
            //         'casual_leave' => $casualleavecountupdate,
            //       ]);
            //   } else {

            //     DB::table('attendances')
            //       ->where('employee_name', $team->createdby)
            //       ->where('month', $cl_leave_month)
            //       ->update([
            //         $column => $lstatus,
            //         'casual_leave' => $casualleavecountupdate,
            //       ]);
            //   }
            // }
          }
          // Attendance code end hare 
        }
        // pxpx

        // For approving mail
        // $applyleaveteam = DB::table('leaverequest')
        //   ->leftjoin('applyleaves', 'applyleaves.id', 'leaverequest.applyleaveid')
        //   ->leftjoin('leavetypes', 'leavetypes.id', 'applyleaves.leavetype')
        //   ->leftjoin('teammembers', 'teammembers.id', 'applyleaves.createdby')
        //   ->leftjoin('roles', 'roles.id', 'teammembers.role_id')
        //   ->where('leaverequest.id', $id)
        //   ->select('applyleaves.*', 'teammembers.emailid', 'teammembers.team_member', 'roles.rolename', 'leavetypes.name', 'leavetypes.holiday', 'leaverequest.id as examrequestId', 'leaverequest.from_date')
        //   ->get();

        // if ($applyleaveteam != null) {
        //   foreach ($applyleaveteam as $applyleaveteammail) {
        //     $data = array(
        //       'emailid' =>  $applyleaveteammail->emailid,
        //       'team_member' =>  $team->team_member,
        //       'from' =>  $team->from,
        //       'to' =>  $team->to,
        //     );

        //     Mail::send('emails.applyleaveteam', $data, function ($msg) use ($data) {
        //       $msg->to($data['emailid']);
        //       $msg->subject('VSA Leave Approved');
        //     });
        //   }
        // }

        $data = array(
          'emailid' =>  $team->emailid,
          'id' =>  $id,
          'from' =>  $team->from,
          'to' =>  $team->to,
        );
        // Exam Leave mail
        if ($team->name == 'Exam Leave') {
          Mail::send('emails.duringexamleavestatus', $data, function ($msg) use ($data) {
            $msg->to($data['emailid']);
            $msg->subject('VSA Exam Leave request Approved');
          });
        }
        // Casual leave mail
        else {
          Mail::send('emails.duringexamleavestatus', $data, function ($msg) use ($data) {
            $msg->to($data['emailid']);
            $msg->subject('VSA Casual leave request Approved');
          });
        }
      }
      if ($request->status == 2) {
        $team = DB::table('leaverequest')
          ->leftjoin('applyleaves', 'applyleaves.id', 'leaverequest.applyleaveid')
          ->leftjoin('leavetypes', 'leavetypes.id', 'applyleaves.leavetype')
          ->leftjoin('teammembers', 'teammembers.id', 'applyleaves.createdby')
          ->leftjoin('roles', 'roles.id', 'teammembers.role_id')
          ->where('leaverequest.id', $id)
          ->select('applyleaves.*', 'teammembers.emailid', 'teammembers.team_member', 'roles.rolename', 'leavetypes.name', 'leavetypes.holiday', 'leaverequest.id as examrequestId', 'leaverequest.from_date')
          ->first();

        DB::table('leaverequest')
          ->where('id', $team->examrequestId)
          ->update([
            'status' => 2,
          ]);

        $data = array(
          'emailid' =>  $team->emailid,
          'id' =>  $id,
          'from' =>  $team->from,
          'to' =>  $team->to,
        );

        // Exam Leave mail
        if ($team->name == 'Exam Leave') {
          Mail::send('emails.duringexamleavereject', $data, function ($msg) use ($data) {
            $msg->to($data['emailid']);
            // $msg->cc('priyankasharma@kgsomani.com');
            $msg->subject('VSA Exam Leave Request Reject');
          });
        }
        // Casual leave mail
        else {
          Mail::send('emails.duringexamleavereject', $data, function ($msg) use ($data) {
            $msg->to($data['emailid']);
            // $msg->cc('priyankasharma@kgsomani.com');
            $msg->subject('VSA Casual leave Request Reject');
          });
        }
      }

      $output = array('msg' => 'Updated Successfully');
      return redirect('examleaverequestlist')->with('success', $output);
    } catch (Exception $e) {
      DB::rollBack();
      Log::emergency("File:" . $e->getFile() . "Line:" . $e->getLine() . "Message:" . $e->getMessage());
      report($e);
      $output = array('msg' => $e->getMessage());
      return back()->withErrors($output)->withInput();
    }
  }












22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
app\Http\Controllers\ApplyleaveController.php
 public function examleaverequest(Request $request, $id)
       if ($team->name == 'Exam Leave') {
	   
	   
            if (!empty($column)) {
              $getHoliday = DB::table('holidays')
                ->where('startdate', $cl_leave)
                ->orWhere('enddate', $cl_leave)
                ->exists();

              $holidaysColumn = 'holidays';
              $totalcountupdate = $attendances->$holidaysColumn - 1;

              // Build the common update data
              $updateData = [
                $column => $lstatus,
                // 'exam_leave' => $examleavecountupdate,
              ];

              // If there's a holiday, add 'holidays' to the update data
              if ($getHoliday) {
                $updateData['holidays'] = $totalcountupdate;
              } else {
                $updateData['exam_leave'] = $examleavecountupdate;
              }

              // Separate the update logic based on $nowtotalleave == 0
              if ($nowtotalleave == 0) {
                DB::table('attendances')
                  ->where('employee_name', $team->createdby)
                  ->where('month', $cl_leave_month)
                  ->update($updateData);
              } else {
                DB::table('attendances')
                  ->where('employee_name', $team->createdby)
                  ->where('month', $cl_leave_month)
                  ->update($updateData);
              }
            } 







22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
app\Http\Controllers\TeammemberController.php
->whereDate('created_at', '>', $request->leavingdate)



                     $exitDate = Carbon::parse($request->leavingdate);
                    $exitMonth = $exitDate->format('F');
                    $exitYear = $exitDate->year;
                    $dayOfExit = $exitDate->day;
                    $totalDaysInExitMonth = $exitDate->daysInMonth;

                    // Attendance delete after leaving date 
                    // $attendencedelete = DB::table('attendances')
                    //     ->where('employee_name', $id)
                    //     ->whereDate('created_at', '>', $request->leavingdate)
                    //     ->delete();

                    // Define month order array
                    $months = [
                        'January',
                        'February',
                        'March',
                        'April',
                        'May',
                        'June',
                        'July',
                        'August',
                        'September',
                        'October',
                        'November',
                        'December'
                    ];

                    // Get the index of the exit month
                    $exitMonthIndex = array_search($exitMonth, $months);

                    // Get months after the exit month
                    $monthsAfterExitMonth = array_slice($months, $exitMonthIndex + 1);
                    // Filter attendance records where the month is after the exit month in the exit year
                    $attendencedelete = DB::table('attendances')
                        ->where('employee_name', $id)
                        ->where('year', $exitYear)
                        ->whereIn('month', $monthsAfterExitMonth)
                        // ->get();
                        ->delete();





22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
app\Http\Controllers\TeammemberController.php
in update function

   if ($attendances && property_exists($attendances, $column)) {
   
   
   
                               if (isset($totalCountMapping[$updatewording])) {
                                $totalcountColumn = $totalCountMapping[$updatewording];
                                $totalcountupdate = $attendances->$totalcountColumn + 1;

                                if ($totalcountColumn != "exam_leave") {

                                    $iftwotimesheetinday = DB::table('attendances')
                                        ->where('id', $attendances->id)
                                        ->value($column);

                                    if ($iftwotimesheetinday == "P") {
                                        $updatewording = "P";
                                        $totalcountupdate = $attendances->$totalcountColumn + 0;
                                    } elseif ($iftwotimesheetinday == 'T') {
                                        $updatewording = "P";
                                        $totalcountupdate = $attendances->$totalcountColumn + 0;
                                    }

                                    DB::table('attendances')
                                        ->where('id', $attendances->id)
                                        ->update([
                                            $column => $updatewording,
                                            $totalcountColumn => $totalcountupdate,
                                        ]);
                                }
                            }






updated on vsademo, vsalocal, vsalive all above code updated
22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
serch  'fulldate'  for update fuldates
this code update on vsademo,vsalocal,and vsalive per only fulldate updated and only year wla baki hai 

   'fulldate' => $hdatess,
   
   
search 'fulldate' for update year 

    ->where('year', $currentYear)
	
 $year1 = $prevSunday->format('Y');





bugs done vsademo, vsalocal
222222222222222222222222222222222222222222222222222222222222222222
resources\views\backEnd\attendance\teamindex.blade.php
find text  for="teammemberId"
replace    <div class="form-group">

                            <div class="form-group">
                                <strong><label for="teammemberId">Employee Name <span
                                            class="text-danger">*</span></label></strong>
                                <select required class="language form-control" id="teammemberId" name="teammemberId">
                                    <option value="">Please Select One</option>
                                    @php
                                        $displayedValues = [];
                                    @endphp
                                    @foreach ($teammembers as $teammember)
                                        @if (!in_array($teammember->staffcode, $displayedValues))
                                            <option value="{{ $teammember->id }}"
                                                {{ old('teammemberId') == $teammember->id ? 'selected' : '' }}>
                                                {{ $teammember->team_member }}
                                                ({{ $teammember->newstaff_code ?? ($teammember->staffcode ?? '') }})
                                            </option>
                                            @php
                                                $displayedValues[] = $teammember->staffcode;
                                            @endphp
                                        @endif
                                    @endforeach
                                </select>
                            </div>



bugs  done vsademo,vsalocal
222222222222222222222222222222222222222222222222222222222222222222
resources\views\backEnd\attendance\teamattendance.blade.php
find text  for="teammemberId"
replace     <div class="form-group">

                                <div class="form-group">
                                    <strong><label for="teammemberId">Employee Name <span
                                                class="text-danger">*</span></label></strong>
                                    <select required class="language form-control" id="teammemberId" name="teammemberId">
                                        <option value="">Please Select One</option>
                                        @php
                                            $displayedValues = [];
                                        @endphp
                                        @foreach ($teammembers as $teammember)
                                            @if (!in_array($teammember->staffcode, $displayedValues))
                                                <option value="{{ $teammember->id }}"
                                                    {{ old('teammemberId') == $teammember->id ? 'selected' : '' }}>
                                                    {{ $teammember->team_member }}
                                                    ({{ $teammember->newstaff_code ?? ($teammember->staffcode ?? '') }})
                                                </option>
                                                @php
                                                    $displayedValues[] = $teammember->staffcode;
                                                @endphp
                                            @endif
                                        @endforeach
                                    </select>
                                </div>                                   



222222222222222222222222222222222222222222222222222222222222222222
resources\views\backEnd\attendance\teamattendance.blade.php


25-11-24  vsalocal done
222222222222222222222222222222222222222222222222222222222222222222
app\Http\Controllers\TimesheetController.php

  public function timesheet_mylist()
  {

    if (auth()->user()->role_id == 13) {
      // die;
      $client = Client::select('id', 'client_name')->get();
      // $getauth =  DB::table('timesheetusers')
      //   ->where('createdby', auth()->user()->teammember_id)
      //   ->where('status', '0')
      //   ->orderby('id', 'desc')->first();

      // $getauth =  DB::table('timesheetusers')
      //   ->where('createdby', auth()->user()->teammember_id)
      //   ->where('status', '1')
      //   ->orderby('id', 'desc')->first();

      $getauth =  DB::table('timesheetusers')
        ->where('createdby', auth()->user()->teammember_id)
        ->where('status', '1')
        // Sort by date in descending order to get the most recent date
        ->orderBy('date', 'desc')
        ->first();

      $dropdownYears = DB::table('timesheets')
        ->where('created_by', auth()->user()->teammember_id)
        ->select(DB::raw('YEAR(date) as year'))
        ->distinct()->orderBy('year', 'DESC')->pluck('year');

      $dropdownYears = DB::table('timesheets')
        ->where('created_by', auth()->user()->teammember_id)
        ->select(DB::raw('YEAR(date) as year'))
        ->distinct()->orderBy('year', 'DESC')->pluck('year');


      $dropdownMonths = DB::table('timesheets')
        ->where('created_by', auth()->user()->teammember_id)
        ->distinct()
        ->pluck('month');

      $partner = Teammember::where('role_id', '=', 11)->whereNotIn('id', [447])->where('status', '=', 1)->where('team_member', '!=', 'Partner')->with('title')->get();
      // $partner = Teammember::where('role_id', '=', 11)->where('status', '=', 1)->where('team_member', '!=', 'Partner')->with('title')->get();

      $currentDate = now();


      $month = $currentDate->format('F');
      $year = $currentDate->format('Y');

      //	  $time =  DB::table('timesheets')->get();
      // foreach ($time as $value) {
      //dd(date('F', strtotime($value->date)));
      //      DB::table('timesheets')->where('id',$value->id)->update([	
      //          'month'         =>     date('F', strtotime($value->date)),
      //           ]);
      // }
      $teammember = DB::table('timesheets')
        ->leftjoin('timesheetusers', 'timesheetusers.timesheetid', 'timesheets.id')
        ->leftjoin('teammembers', 'teammembers.id', 'timesheets.created_by')
        ->leftjoin('roles', 'roles.id', 'teammembers.role_id')
        ->where('timesheetusers.partner', auth()->user()->teammember_id)
        ->select('teammembers.id', 'teammembers.team_member', 'roles.rolename')->distinct()->get();
      //  dd($teammember);
      $month = DB::table('timesheets')
        ->select('timesheets.month')->distinct()->get();

      $result = DB::table('timesheetusers')->select(DB::raw('YEAR(date) as year'))
        ->distinct()->orderBy('year', 'DESC')->limit(5)->get();

      $years = $result->pluck('year');

      $timesheetData = DB::table('timesheetusers')
        ->leftjoin('teammembers', 'teammembers.id', 'timesheetusers.createdby')
        ->leftjoin('assignmentbudgetings', 'assignmentbudgetings.assignmentgenerate_id', 'timesheetusers.assignmentgenerate_id')
        ->where('timesheetusers.createdby', auth()->user()->teammember_id)
        ->where('timesheetusers.status', 0)
        ->select('timesheetusers.*', 'teammembers.team_member', 'assignmentbudgetings.assignmentname', 'assignmentbudgetings.created_at as assignmentcreated')->orderBy('date', 'ASC')
        ->paginate(14);
      // dd($timesheetData);
      $getauthh =  DB::table('timesheetusers')
        ->where('createdby', auth()->user()->teammember_id)
        ->orderby('id', 'desc')->first();


      $timesheetrequest = DB::table('timesheetrequests')->where('createdby', auth()->user()->teammember_id)->orderBy('id', 'DESC')->first();
      // dd($timesheetrequest, 2);
      if ($getauthh  == null) {
        return view('backEnd.timesheet.firstindex', compact('timesheetData', 'getauth', 'client', 'partner'));
      } else {
        return view('backEnd.timesheet.index', compact('timesheetrequest', 'partner', 'client', 'getauth', 'dropdownMonths', 'timesheetData', 'year', 'dropdownYears', 'month', 'teammember', 'month', 'years'));
      }
    } else {

      // Get year like 2023.2024,2025
      $dropdownYears = DB::table('timesheets')
        ->where('created_by', auth()->user()->teammember_id)
        ->select(DB::raw('YEAR(date) as year'))
        ->distinct()->orderBy('year', 'DESC')->pluck('year');

      // Get months like january to december
      $dropdownMonths = DB::table('timesheets')
        ->where('created_by', auth()->user()->teammember_id)
        ->distinct()
        ->pluck('month');

      $currentDate = now();
      $month = $currentDate->format('F');
      $year = $currentDate->format('Y');

      $getauths =  DB::table('timesheetusers')
        ->where('createdby', auth()->user()->teammember_id)
        ->where('status', '1')
        ->orderby('id', 'desc')->first();


      if ($getauths != null) {
        $currentDate = now();
        $currentDateformate = $currentDate->format('Y-m-d');
        // this gatauth goes to backEnd.timesheet.index file
        // $getauth =  DB::table('timesheetusers')
        //   ->where('createdby', auth()->user()->teammember_id)
        //   ->where('date', '<=', $currentDateformate)
        //   ->where('status', '1')
        //   ->orderby('id', 'desc')->first();

        $getauth = DB::table('timesheetusers')
          ->where('createdby', auth()->user()->teammember_id)
          ->where('date', '<=', $currentDateformate)
          ->where('status', '1')
          // Sort by date in descending order to get the most recent date
          ->orderBy('date', 'desc')
          ->first();
      } else {

        // this gatauth goes to backEnd.timesheet.index file
        // $getauth =  DB::table('timesheetusers')
        //   ->where('createdby', auth()->user()->teammember_id)
        //   ->where('status', '0')
        //   ->orderby('id', 'desc')->first();

        $getauth =  DB::table('timesheetusers')
          ->where('createdby', auth()->user()->teammember_id)
          ->where('status', '0')
          ->orderBy('date', 'desc')
          ->first();
      }

      $getauthh =  DB::table('timesheetusers')
        ->where('createdby', auth()->user()->teammember_id)
        ->orderby('id', 'desc')->first();

      $client = Client::select('id', 'client_name')->get();
      $timesheetData = DB::table('timesheetusers')
        ->leftjoin('teammembers', 'teammembers.id', 'timesheetusers.createdby')
        ->leftjoin('assignmentbudgetings', 'assignmentbudgetings.assignmentgenerate_id', 'timesheetusers.assignmentgenerate_id')
        ->where('timesheetusers.createdby', auth()->user()->teammember_id)
        ->where('timesheetusers.status', 0)
        //   ->where('timesheets.month', $month)
        //  ->whereRaw('YEAR(timesheetusers.date) = ?', [$year])
        ->select('timesheetusers.*', 'teammembers.team_member', 'assignmentbudgetings.assignmentname', 'assignmentbudgetings.created_at as assignmentcreated')->orderBy('date', 'ASC')
        ->paginate(14);

      $partner = Teammember::whereNotIn('id', [887, 663, 841, 836, 843, 447])->where('role_id', '=', 13)->where('status', '=', 1)->with('title')
        ->orderBy('team_member', 'asc')->get();

      // $partner = Teammember::where('role_id', '=', 13)->where('status', '=', 1)->with('title')
      //   ->orderBy('team_member', 'asc')->get();

      $timesheetrequest = DB::table('timesheetrequests')->where('createdby', auth()->user()->teammember_id)->orderBy('id', 'DESC')->first();

      if ($getauthh  == null) {
        return view('backEnd.timesheet.firstindex', compact('timesheetData', 'getauth', 'client', 'partner'));
      } else {
        return view('backEnd.timesheet.index', compact(
          'timesheetData',
          'getauth',
          'client',
          'partner',
          'timesheetrequest',
          'dropdownYears',
          'dropdownMonths',
          'month',
          'year',
        ));
      }
    }
  }




2222222222222222222222222222222222222222222222222222222

resources\views\backEnd\timesheet\index.blade.php


@extends('backEnd.layouts.layout') @section('backEnd_content')
    <!--Content Header (Page header)-->
    <div class="content-header row align-items-center m-0">
        <nav aria-label="breadcrumb" class="col-sm-5 order-sm-last mb-3 mb-sm-0 p-0 ">
            {{-- <ol class="breadcrumb d-inline-flex font-weight-600 fs-13 bg-white mb-0 float-sm-right">
                @php
                    // Get current Date
                    $currentdate = date('Y-m-d');
                    if ($getauth == null) {
                        $getdate = date('Y-m-d');
                    } else {
                        $getdate = $getauth->date;
                    }

                    $to = Carbon\Carbon::createFromFormat('Y-m-d', $getdate ?? '');
                    $from = Carbon\Carbon::createFromFormat('Y-m-d', $currentdate);
                    // Diffrence between latest save timesheet and todays date in count / timesheet gap date count
                    $diff_in_days = $to->diffInDays($from);
                    $getmondaydate = DB::table('timesheetday')->first();

                    $timesheetcount = DB::table('timesheets')
                        ->where('status', '0')
                        ->where('created_by', auth()->user()->teammember_id)
                        ->where('date', '<', $getmondaydate->date)
                        ->count();
                    //! no uses
                    $too = Carbon\Carbon::createFromFormat('Y-m-d', $getmondaydate->date ?? '');
                    $froms = Carbon\Carbon::createFromFormat('Y-m-d', $currentdate);
                    $diff_in_daysformonday = $too->diffInDays($froms);
                    //! no uses
                    $teamusers = DB::table('teammembers')
                        ->where('id', auth()->user()->teammember_id)
                        ->first();
                @endphp
                @if ($diff_in_days > 14)
                    @if ($timesheetrequest == null)
                        <li class="breadcrumb-item"><a data-toggle="modal" data-target="#exampleModal21">Add Timesheet
                                Request</a> </li>
                    @else
                        @if ($currentdate < $timesheetrequest->validate)
                            <li class="breadcrumb-item"><a class="btn btn-primary-soft btn-sm"
                                    href="{{ url('timesheet/create') }}">Add Timesheet</a>
                            </li>
                            @if (now()->isSunday() || now()->isMonday() || now()->isTuesday() || now()->isWednesday() || now()->isThursday() || now()->isFriday() || now()->isSaturday())
                                @if ($timesheetcount >= 6)
                                    <li class="breadcrumb-item"><a class="btn btn-primary-soft btn-sm"
                                            onclick="return confirm('Are you sure you want to submit this timesheet for last week?');"
                                            href="{{ url('timesheetsubmission') }}">Submit Timesheet for Week</a>
                                    </li>
                                @endif
                            @endif
                        @elseif ($currentdate > $timesheetrequest->validate && $timesheetrequest->validate != null)
                            <li class="breadcrumb-item"><a data-toggle="modal" data-target="#exampleModal21">Add
                                    Timesheet
                                    Request</a>
                            </li>
                        @else
                            @if ($timesheetrequest && $timesheetrequest->status == 0)
                                @php
                                    $latestrequesthour = Carbon\Carbon::parse($timesheetrequest->created_at);
                                    $currentDateTime = Carbon\Carbon::now();
                                @endphp
                                @if ($latestrequesthour->diffInHours($currentDateTime) > 24)
                                    <li class="breadcrumb-item">
                                        <a data-toggle="modal" data-target="#exampleModal21">Add Timesheet Request</a>
                                    </li>
                                @else
                                    <li class="breadcrumb-item"><a>Requested Done</a>
                                    </li>
                                @endif
                            @else
                                <li class="breadcrumb-item"><a data-toggle="modal" data-target="#exampleModal21">Add
                                        Timesheet Request</a> </li>
                            @endif
                        @endif
                    @endif
                @elseif(15 < 16)
                    <li class="breadcrumb-item"><a class="btn btn-info-soft btn-sm" href="{{ url('timesheet/create') }}">Add
                            Timesheet @if ($timesheetcount < 7)
                                for last week
                            @endif
                        </a>
                    </li>

                    @if (now()->isSunday() || now()->isMonday() || now()->isTuesday() || now()->isWednesday() || now()->isThursday() || now()->isFriday() || now()->isSaturday())
                        @if ($timesheetcount >= 6)
                            <li class="breadcrumb-item"><a class="btn btn-primary-soft btn-sm"
                                    onclick="return confirm('Are you sure you want to submit this timesheet for last week?');"
                                    href="{{ url('timesheetsubmission') }}">Submit Timesheet for Week</a>
                            </li>
                        @endif
                    @endif
                @endif
            </ol> --}}
            <ol class="breadcrumb d-inline-flex font-weight-600 fs-13 bg-white mb-0 float-sm-right">
                @php
                    // Get current Date
                    $currentdate = date('Y-m-d');
                    // $currentdate = '2024-10-08';
                    if ($getauth == null) {
                        $getdate = date('Y-m-d');
                    } else {
                        $getdate = $getauth->date;
                        // $currentdate = '2024-09-17';
                    }

                    $to = Carbon\Carbon::createFromFormat('Y-m-d', $getdate ?? '');
                    $nextmonday = $to->copy()->next(Carbon\Carbon::MONDAY);
                    $from = Carbon\Carbon::createFromFormat('Y-m-d', $currentdate);
                    // Diffrence between latest save timesheet and todays date in count / timesheet gap date count
                    $diff_in_days = $nextmonday->diffInDays($from);

                    $getmondaydate = DB::table('timesheetday')->first();

                    // i have faced some problem hare so i have done new code when current week running and monday not update for current week then submit button not came
                    // $timesheetcount = DB::table('timesheets')
                    //     ->where('status', '0')
                    //     ->where('created_by', auth()->user()->teammember_id)
                    //     ->where('date', '<', $getmondaydate->date)
                    //     ->count();

                    // $timesheetcount = DB::table('timesheets')
                    //     ->where('status', '0')
                    //     ->where('created_by', auth()->user()->teammember_id)
                    //     ->where('date', '<', $currentdate)
                    //     ->count();

                    $timesheetsaved = DB::table('timesheets')
                        ->where('status', '0')
                        ->where('created_by', auth()->user()->teammember_id)
                        ->orderBy('date', 'asc')
                        ->first();

                    $timesheetcount = 0;

                    if ($timesheetsaved) {
                        $startdateofdata = Carbon\Carbon::createFromFormat('Y-m-d', $timesheetsaved->date ?? '');
                        $enddateofdata = $startdateofdata->copy()->next(Carbon\Carbon::SATURDAY);

                        $timesheetcount = DB::table('timesheets')
                            ->where('status', '0')
                            ->where('created_by', auth()->user()->teammember_id)
                            ->whereBetween('date', [$startdateofdata->format('Y-m-d'), $enddateofdata->format('Y-m-d')])
                            ->count();
                    }
                    // dd($timesheetcount);

                    //! no uses
                    $too = Carbon\Carbon::createFromFormat('Y-m-d', $getmondaydate->date ?? '');
                    $froms = Carbon\Carbon::createFromFormat('Y-m-d', $currentdate);
                    $diff_in_daysformonday = $too->diffInDays($froms);
                    //! no uses
                    $teamusers = DB::table('teammembers')
                        ->where('id', auth()->user()->teammember_id)
                        ->first();
                @endphp

                {{-- <li class="breadcrumb-item"><a class="btn btn-primary-soft btn-sm" href="{{ url('timesheet/create') }}">Add
                        Timesheet</a>
                </li>
                <li class="breadcrumb-item"><a data-toggle="modal" data-target="#exampleModal21">Add Timesheet
                        Request</a> </li>

                <li class="breadcrumb-item"><a class="btn btn-primary-soft btn-sm"
                        onclick="return confirm('Are you sure you want to submit this timesheet for last week?');"
                        href="{{ url('timesheetsubmission') }}">Submit Timesheet for Week</a>
                </li> --}}

                {{-- Tuesday closed timesheet clent said user can submit timesheet on monday after comming sunday leave --}}
                @if ($diff_in_days >= 15)
                    @if ($timesheetrequest == null)
                        <li class="breadcrumb-item"><a data-toggle="modal" data-target="#exampleModal21">Add Timesheet
                                Request</a> </li>
                    @else
                        @if ($currentdate < $timesheetrequest->validate)
                            <li class="breadcrumb-item"><a class="btn btn-primary-soft btn-sm"
                                    href="{{ url('timesheet/create') }}">Add Timesheet</a>
                            </li>
                            @if (now()->isSunday() ||
                                    now()->isMonday() ||
                                    now()->isTuesday() ||
                                    now()->isWednesday() ||
                                    now()->isThursday() ||
                                    now()->isFriday() ||
                                    now()->isSaturday())
                                @if ($timesheetcount >= 6)
                                    <li class="breadcrumb-item"><a class="btn btn-primary-soft btn-sm"
                                            onclick="return confirm('Are you sure you want to submit this timesheet for last week?');"
                                            href="{{ url('timesheetsubmission') }}">Submit Timesheet for Week</a>
                                    </li>
                                @endif
                            @endif
                        @elseif ($currentdate > $timesheetrequest->validate && $timesheetrequest->validate != null)
                            <li class="breadcrumb-item"><a data-toggle="modal" data-target="#exampleModal21">Add
                                    Timesheet
                                    Request</a>
                            </li>
                        @else
                            @if ($timesheetrequest && $timesheetrequest->status == 0)
                                @php
                                    $latestrequesthour = Carbon\Carbon::parse($timesheetrequest->created_at);
                                    $currentDateTime = Carbon\Carbon::now();
                                @endphp
                                @if ($latestrequesthour->diffInHours($currentDateTime) > 24)
                                    <li class="breadcrumb-item">
                                        <a data-toggle="modal" data-target="#exampleModal21">Add Timesheet Request</a>
                                    </li>
                                @else
                                    <li class="breadcrumb-item"><a>Requested Done</a>
                                    </li>
                                @endif
                            @else
                                <li class="breadcrumb-item"><a data-toggle="modal" data-target="#exampleModal21">Add
                                        Timesheet Request</a> </li>
                            @endif
                        @endif
                    @endif
                @elseif(15 < 16)
                    <li class="breadcrumb-item"><a class="btn btn-info-soft btn-sm" href="{{ url('timesheet/create') }}">Add
                            Timesheet @if ($timesheetcount < 7)
                                for last week
                            @endif
                        </a>
                    </li>

                    @if (now()->isSunday() ||
                            now()->isMonday() ||
                            now()->isTuesday() ||
                            now()->isWednesday() ||
                            now()->isThursday() ||
                            now()->isFriday() ||
                            now()->isSaturday())
                        @if ($timesheetcount >= 6)
                            <li class="breadcrumb-item"><a class="btn btn-primary-soft btn-sm"
                                    onclick="return confirm('Are you sure you want to submit this timesheet for last week?');"
                                    href="{{ url('timesheetsubmission') }}">Submit Timesheet for Week</a>
                            </li>
                        @endif
                    @endif
                @endif
            </ol>
        </nav>




        <div class="col-sm-7 header-title p-0">
            <div class="media">
                <div class="header-icon text-success mr-3"><i class="typcn typcn-puzzle-outline"></i></div>
                <div class="media-body">
                    <h1 class="font-weight-bold">My Timesheet</h1>
                    <small>Time sheet List</small>
                </div>
            </div>
        </div>
    </div>
    <!--/.Content Header (Page header)-->
    <div class="body-content">
        <div class="card mb-4">

            <div class="card-body">
                @component('backEnd.components.alert')
                @endcomponent
                <form method="post">
                    @csrf
                    <div class="table-responsive">


                        <table id="examplee" class="display nowrap">
                            <thead>

                                <tr>
                                    <th style="display: none;">id</th>
                                    <!--	@if (
                                        (now()->isSaturday() && now()->hour >= 18) ||
                                            now()->isSunday() ||
                                            now()->isMonday() ||
                                            (now()->isTuesday() && now()->hour <= 18))
    <th><button type="submit"
onclick="return confirm('Are you sure you want to submit this item?');"
formaction="timesheetsubmits" class="btn btn-danger-soft btn-sm">Submit</button>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 <input type="checkbox" id="chkAll">
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               <i class="os-icon os-icon-trash"></i></th>
    @endif -->
                                    <th>Status</th>
                                    <th>Date</th>
                                    <th>Day</th>
                                    <th>Client Name</th>
                                    <th>Client Code</th>
                                    <th>Assignment Name</th>
                                    <th>Assignment Id</th>
                                    <th>Work Item</th>
                                    <th>Location</th>
                                    <th>Partner</th>
                                    <th>Partner Code</th>
                                    <th>Hour</th>
                                    <th>Total Hour</th>
                                    <th>Action</th>

                                </tr>
                            </thead>
                            <tbody>
                                @foreach ($timesheetData as $timesheetDatas)
                                    <tr>
                                        @php

                                            $timeid = DB::table('timesheetusers')
                                                ->where('timesheetusers.id', $timesheetDatas->id)
                                                ->first();

                                            // $client_id = DB::table('timesheetusers')
                                            //     ->leftjoin('clients', 'clients.id', 'timesheetusers.client_id')
                                            //     ->leftjoin(
                                            //         'assignmentbudgetings',
                                            //         'assignmentbudgetings.assignment_id',
                                            //         'timesheetusers.assignment_id',
                                            //     )
                                            //     ->leftjoin(
                                            //         'assignments',
                                            //         'assignments.id',
                                            //         'timesheetusers.assignment_id',
                                            //     )
                                            //     ->leftjoin('teammembers', 'teammembers.id', 'timesheetusers.partner')
                                            //     ->leftJoin('teamrolehistory', function ($join) {
                                            //         $join
                                            //             ->on('teamrolehistory.teammember_id', '=', 'teammembers.id')
                                            //             ->on(
                                            //                 'teamrolehistory.created_at',
                                            //                 '<',
                                            //                 'timesheetusers.created_at',
                                            //             );
                                            //     })
                                            //     ->where('timesheetusers.id', $timesheetDatas->id)
                                            //     ->select(
                                            //         'clients.client_name',
                                            //         'clients.client_code',
                                            //         'timesheetusers.hour',
                                            //         'timesheetusers.location',
                                            //         'timesheetusers.status',
                                            //         'assignments.assignment_name',
                                            //         'billable_status',
                                            //         'workitem',
                                            //         'teammembers.team_member',
                                            //         'teammembers.staffcode',
                                            //         'teamrolehistory.newstaff_code',
                                            //         'assignmentbudgetings.assignmentname',
                                            //         'assignmentbudgetings.assignmentgenerate_id',
                                            //     )
                                            //     ->first();

                                            $client_id = DB::table('timesheetusers')
                                                ->leftjoin('clients', 'clients.id', 'timesheetusers.client_id')
                                                ->leftjoin(
                                                    'assignmentbudgetings',
                                                    'assignmentbudgetings.assignment_id',
                                                    'timesheetusers.assignment_id',
                                                )
                                                ->leftjoin(
                                                    'assignments',
                                                    'assignments.id',
                                                    'timesheetusers.assignment_id',
                                                )
                                                ->leftjoin('teammembers', 'teammembers.id', 'timesheetusers.partner')
                                                ->where('timesheetusers.id', $timesheetDatas->id)
                                                ->select(
                                                    'clients.client_name',
                                                    'clients.client_code',
                                                    'timesheetusers.hour',
                                                    'timesheetusers.location',
                                                    'timesheetusers.status',
                                                    'assignments.assignment_name',
                                                    'billable_status',
                                                    'workitem',
                                                    'teammembers.team_member',
                                                    'teammembers.staffcode',
                                                    'assignmentbudgetings.assignmentname',
                                                )
                                                ->first();

                                            $permotioncheck = null;
                                            $datadate = $timesheetDatas->assignmentcreated
                                                ? Carbon\Carbon::createFromFormat(
                                                    'Y-m-d H:i:s',
                                                    $timesheetDatas->assignmentcreated,
                                                )
                                                : null;
                                            $permotiondate = null;

                                            if (
                                                auth()->user()->role_id == 13 ||
                                                auth()->user()->role_id == 11 ||
                                                auth()->user()->role_id == 14
                                            ) {
                                                $permotioncheck = DB::table('teamrolehistory')
                                                    ->where('teammember_id', auth()->user()->teammember_id)
                                                    ->first();

                                                if ($permotioncheck) {
                                                    $permotiondate = Carbon\Carbon::createFromFormat(
                                                        'Y-m-d H:i:s',
                                                        $permotioncheck->created_at,
                                                    );
                                                }
                                            }

                                            $total = DB::table('timesheetusers')

                                                ->where('timesheetusers.timesheetid', $timesheetDatas->timesheetid)
                                                ->sum('hour');
                                            //	dd($total);
                                            $dates = date('l', strtotime($timesheetDatas->date));

                                        @endphp
                                        <td style="display: none;">{{ $timesheetDatas->id }}</td>
                                        <td>
                                            @if ($client_id->status == 0)
                                                <span class="badge badge-pill badge-warning">saved</span>
                                            @else
                                                <span class="badge badge-pill badge-danger">submit</span>
                                            @endif
                                        </td>

                                        @php

                                            $date = $timesheetDatas->date;

                                            $leaves = DB::table('applyleaves')
                                                ->where('applyleaves.createdby', auth()->user()->teammember_id)
                                                ->where('status', '!=', 2)
                                                ->select('applyleaves.from', 'applyleaves.to')
                                                ->get();

                                            $leavesWithinRange = $leaves->filter(function ($leave) use ($date) {
                                                return $leave->from <= $date && $leave->to >= $date;
                                            });

                                            //dd($leavesWithinRange);

                                        @endphp

                                        <td> <span style="display: none;">
                                                {{ date('Y-m-d', strtotime($timesheetDatas->date)) }}</span>{{ date('d-m-Y', strtotime($timesheetDatas->date)) }}
                                        </td>

                                        <td>
                                            @if ($timesheetDatas->date != null)
                                                {{ $dates ?? '' }}
                                            @endif
                                        </td>


                                        <td>
                                            {{ $client_id->client_name ?? '' }}
                                            @if (count((array) $client_id->client_name) > 1)
                                                ,
                                            @endif
                                        </td>
                                        <td>
                                            {{ $client_id->client_code ?? '' }}
                                            @if (count((array) $client_id->client_code) > 1)
                                                ,
                                            @endif
                                        </td>

                                        <td>
                                            {{ $client_id->assignment_name ?? '' }}
                                            @if ($timesheetDatas->assignmentname != null)
                                                ({{ $timesheetDatas->assignmentname ?? '' }})
                                            @endif
                                            @if (count((array) $client_id->assignment_name) > 1)
                                                ,
                                            @endif
                                        </td>
                                        <td>
                                            {{ $timesheetDatas->assignmentgenerate_id ?? '' }}
                                        </td>
                                        <td>
                                            {{ $client_id->workitem ?? '' }}
                                            @if (count((array) $client_id->workitem) > 1)
                                                ,
                                            @endif
                                        </td>

                                        <td>
                                            {{ $client_id->location ?? '' }}
                                            @if (count((array) $client_id->location) > 1)
                                                ,
                                            @endif
                                        </td>

                                        {{-- <td>
                                        {{ $client_id->team_member ?? '' }} (
                                        {{ $client_id->newstaff_code ?? ($client_id->staffcode ?? '') }})
                                        @if (count((array) $client_id->team_member) > 1)
                                            ,
                                        @endif
                                    </td> --}}





                                        <td>
                                            {{ $client_id->team_member ?? '' }}
                                            @if (count((array) $client_id->team_member) > 1)
                                                ,
                                            @endif
                                        </td>

                                        <td>
                                            @if ($permotioncheck && $datadate && $datadate->greaterThan($permotiondate))
                                                {{ $permotioncheck->newstaff_code }}
                                            @else
                                                {{ $client_id->staffcode ?? '' }}
                                            @endif
                                            @if (count((array) $client_id->team_member) > 1)
                                                ,
                                            @endif
                                        </td>
                                        <td>
                                            {{ $client_id->hour ?? '' }}
                                            @if (count((array) $client_id->hour) > 1)
                                                ,
                                            @endif
                                        </td>
                                        <td>{{ $total }}</td>
                                        <td>
                                            @if ($client_id->status == 0)
                                                @if ($leavesWithinRange->isEmpty())
                                                    <a href="{{ url('/timesheet/destroy/' . $timesheetDatas->timesheetid) }}"
                                                        onclick="return confirm('Are you sure you want to delete this item?');"
                                                        class="btn btn-danger-soft btn-sm"><i
                                                            class="far fa-trash-alt"></i></a>
                                                @endif
                                            @else
                                                delete blocked
                                            @endif
                                        </td>
                                    </tr>
                                @endforeach
                            </tbody>
                        </table>


                    </div>
                </form>
            </div>
        </div>

    </div>
    <!--/.body content-->
    <!-- Modal -->
    <div class="modal fade" id="exampleModal1" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel4"
        aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <form id="detailsForm" method="post" action="{{ url('timesheetexcel/store') }}"
                    enctype="multipart/form-data">
                    @csrf
                    <div class="modal-header" style="background: #37A000">
                        <h5 style="color:white;" class="modal-title font-weight-600" id="exampleModalLabel4">Add Excel</h5>
                        <div>
                            <ul>
                                @foreach ($errors->all() as $e)
                                    <li style="color:red;">{{ $e }}</li>
                                @endforeach
                            </ul>
                        </div>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body">

                        <div class="details-form-field form-group row">
                            <label for="name" class="col-sm-3 col-form-label font-weight-600">Upload Excel:</label>
                            <div class="col-sm-9">
                                <input id="name" class="form-control" name="file" type="file">
                                <input hidden value="{{ $clientid->client_id ?? '' }}" class="form-control"
                                    name="client_id" type="text">
                                <input hidden value="{{ $id ?? '' }}" class="form-control" name="ilrfolder_id"
                                    type="text">
                            </div>

                        </div>

                        <div class="details-form-field form-group row">
                            <label for="address" class="col-sm-3 col-form-label font-weight-600">Sample Excel:</label>
                            <div class="col-sm-9">
                                <a href="{{ url('backEnd/timesheetformats.xlsx') }}"
                                    class="btn btn-success btn">Download<i class="fas fa-file-excel"
                                        style="margin-left: 3px;font-size: 20px;"></i></a>

                            </div>
                        </div>
                        <div class="details-form-field form-group row">
                            <label for="address" class="col-sm-3 col-form-label font-weight-600">Instruction <span
                                    style="color:red;">*</span></label>
                            <div class="col-sm-9" style="  margin-top: 10px; ">

                                <span>
                                    Please note the Client Name (click <a target="blank"
                                        href="{{ url('clientassignmentlist') }}"> here</a> to see clients), Assignment
                                    Name (click <a target="blank" href="{{ url('clientassignmentlist') }}"> here</a> to
                                    see assignments) and Partner Name (click <a target="blank"
                                        href="{{ url('clientassignmentlist') }}"> here</a> to
                                    see Partner) should be as same as it is updated on Portal (KGS Capitall). Date (M/D/Y) ,
                                    Hour
                                    format should be as same as mentioned
                                    in the Timesheet Format. If you have not worked on non working day (holiday/2nd or 4th
                                    Sat/Sunday, please skip/do not mention those dates in your excel sheet when uploading
                                    the
                                    excel sheet. </span>


                            </div>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>
                        <button type="submit" class="btn btn-success">Save</button>
                    </div>
                </form>
            </div>
        </div>
    </div>


    <div class="modal fade" id="exampleModal21" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel4"
        aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <form id="timesheetrequest" method="post" action="{{ url('timesheetrequest/store') }}"
                    enctype="multipart/form-data">
                    @csrf
                    <div class="modal-header" style="background: #37A000">
                        <h5 style="color:white;" class="modal-title font-weight-600" id="exampleModalLabel4">Add Request
                        </h5>
                        {{-- <div>
                        <ul>
                            @foreach ($errors->all() as $e)
                                <li style="color:red;">{{ $e }}</li>
                            @endforeach
                        </ul>
                    </div> --}}
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body">
                        <div class="error-container1 text-center">
                        </div>
                        <div class="success-container1 text-center" style="background-color: #dcecf5">
                        </div>
                        <div class="details-form-field form-group row">
                            <label for="name" class="col-sm-3 col-form-label font-weight-600">Admin : <span
                                    class="text-danger">*</span></label>
                            <div class="col-sm-9">
                                <select class="language form-control" required id="category" name="partner">
                                    <option value="">Please Select One</option>
                                    @foreach ($partner as $teammemberData)
                                        <option value="{{ $teammemberData->id }}">
                                            {{ $teammemberData->team_member }}</option>
                                    @endforeach
                                </select>

                            </div>

                        </div>
                        <div class="details-form-field form-group row">
                            <label for="name" class="col-sm-3 col-form-label font-weight-600">Reason : <span
                                    class="text-danger">*</span></label>
                            <div class="col-sm-9">
                                <textarea rows="4" name="reason" required class="form-control" placeholder="Enter Reason"></textarea>

                            </div>

                        </div>

                        <div class="details-form-field form-group row">
                            <label for="file" class="col-sm-3 col-form-label font-weight-600">Attachment :</label>
                            <div class="col-sm-9">
                                <input type="file" name="file" id="file-1" class="custom-input-file">
                                <label for="file-1" id="file-label">
                                    <i class="fa fa-upload"></i>
                                    <span>Choose a file…</span>
                                </label>
                                <span class="text-danger" style="font-weight: 300">File types: png, pdf, jpeg, jpg. Max
                                    size: 5
                                    MB</span>
                            </div>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>
                        <button type="submit" class="btn btn-success">Save</button>
                    </div>
                </form>
            </div>
        </div>
    </div>



    <!-- Modal -->
    <div class="modal fade" id="exampleModal12" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel4"
        aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <form id="detailsForm" method="post" action="{{ url('/timesheet/submit') }}"
                    enctype="multipart/form-data">
                    @csrf
                    <div class="modal-header" style="background:#37A000;color:white;">
                        <h5 class="modal-title font-weight-600" id="exampleModalLabel4">Update Timesheet</h5>
                        <div>
                            <ul>
                                @foreach ($errors->all() as $e)
                                    <li style="color:red;">{{ $e }}</li>
                                @endforeach
                            </ul>
                        </div>
                        <button style="color: white" type="button" class="close" data-dismiss="modal"
                            aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body">

                        <div class="row row-sm">
                            {{-- <label for="name" class="col-sm-3 col-form-label font-weight-600">Name :</label> --}}
                            <div class="col-sm-12">
                                <input type="text" readonly id="teamname" class="form-control"
                                    placeholder="Enter Name">
                                <input hidden class="form-control" id="timesheetid" name="timesheetid" type="text">


                            </div>
                        </div>

                        <br>
                        @php
                            $clientlist = DB::table('clients')->select('clients.client_name', 'clients.id')->get();
                            $partner = DB::table('teammembers')
                                ->select('teammembers.team_member', 'teammembers.id')
                                ->get();
                            $assignmentlist = DB::table('assignments')
                                ->select('assignments.assignment_name', 'assignments.id')
                                ->get();
                        @endphp
                        <br>
                        <div class="row row-sm">
                            <div class="col-sm-12">
                                <input required type="date" name="date" id="date" class="form-control"
                                    placeholder="Enter Name">


                            </div>
                        </div>
                        <br>
                        <div class="row row-sm">
                            {{-- <label for="name" class="col-sm-3 col-form-label font-weight-600">Name :</label> --}}
                            <div class="col-sm-12">
                                <select class="form-control" name="client_id" id="client_id">
                                    <option value="">Select Client</option>
                                    @foreach ($clientlist as $city)
                                        <option value="{{ $city->id }}">{{ $city->client_name }}</option>
                                    @endforeach
                                </select>
                            </div>
                        </div>

                        <br>
                        <div class="row row-sm">
                            {{-- <label for="name" class="col-sm-3 col-form-label font-weight-600">Name :</label> --}}
                            <div class="col-sm-12">
                                <select class="form-control" name="assignment_id" id="assignment_id">
                                    <option value="">Select Assignment</option>
                                    @foreach ($assignmentlist as $assignmentlistData)
                                        <option value="{{ $assignmentlistData->id }}">
                                            {{ $assignmentlistData->assignment_name }}</option>
                                    @endforeach
                                </select>
                            </div>
                        </div>
                        <br>
                        <div class="row row-sm">
                            {{-- <label for="name" class="col-sm-3 col-form-label font-weight-600">Name :</label> --}}
                            <div class="col-sm-12">
                                <select class="form-control" name="partner" id="partner">
                                    <option value="">Select Partner</option>
                                    @foreach ($partner as $partnerData)
                                        <option value="{{ $partnerData->id }}">{{ $partnerData->team_member }}</option>
                                    @endforeach
                                </select>
                            </div>
                        </div>
                        <br>
                        <div class="row row-sm">
                            <div class="col-sm-12">
                                <input required type="text" name="workitem" id="workitem" class="form-control"
                                    placeholder="Enter Name">


                            </div>
                        </div>
                        <br>
                        <div class="row row-sm">
                            <div class="col-sm-12">
                                <input required type="text" name="location" id="location" class="form-control"
                                    placeholder="Enter Location">


                            </div>
                        </div>
                        <br>
                        <div class="row row-sm">
                            <div class="col-sm-12">
                                <input required type="text" name="totalhour" id="totalhour" class="form-control"
                                    placeholder="Enter Name">


                            </div>
                        </div>

                        <div class="modal-footer">
                            <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>
                            <button type="submit" class="btn btn-success">Submit</button>
                        </div>
                </form>

            </div>
        </div>
    </div>

    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
    <script>
        $(function() {
            $('#client').on('change', function() {
                var cid = $(this).val();
                // alert(category_id);
                $.ajax({
                    type: "get",
                    url: "{{ url('timesheet/create') }}",
                    data: "cid=" + cid,
                    success: function(res) {
                        $('#assignment').html(res);
                    },
                    error: function() {},
                });
            });
        });
    </script>



    <script type="text/javascript">
        $(function() {
            $("#chkAll").click(function() {
                $("input[name='ids[]']").attr("checked", this.checked);
            });
            $('#example11').DataTable({});
        });
    </script>
    <script type="text/javascript">
        $.('.selectall').click(function() {
            $.('selecselectboxtbox').prop('checked', $(this).prop('checked'));
        })
        $('.selectbox').change(function() {
            var total = $.('.selectbox').length;
            var number = $.('.selecbox:checked').length;
            if (total == number) {
                $('.selectall').prop('checked', true);
            } else
                $('.selectall').prop('checked', false);

        });
    </script>

    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js"></script>
    <script>
        $(function() {
            $('body').on('click', '#editCompany', function(event) {
                //        debugger;
                var id = $(this).data('id');
                debugger;
                $.ajax({
                    type: "GET",

                    url: "{{ url('timesheetupdatesubmit') }}",
                    data: "id=" + id,
                    success: function(response) {
                        debugger;
                        $("#timesheetid").val(response.id);
                        $("#date").val(response.date);
                        $("#teamname").val(response.team_member);
                        $("#workitem").val(response.workitem);
                        $("#location").val(response.location);
                        $("#client_id").val(response.client_id);
                        $("#assignment_id").val(response.assignment_id);
                        $("#partner").val(response.partner);
                        $("#totalhour").val(response.totalhour);
                        debugger;

                    },
                    error: function() {

                    },
                });
            });
        });
    </script>
@endsection




