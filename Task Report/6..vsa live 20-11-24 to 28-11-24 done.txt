
22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
20-11-24  to 27-11-24

# Admin and partner can create an assignment without selecting staff and team leader.
1.1. When the admin or partner checks the "Name" checkbox, the "Name" and "Type" fields will be disabled.
1.2. The plus icon will be hidden.
1.3. If the admin or partner has already clicked the plus icon and then clicks the "Name" checkbox, all "Name" and "Type" fields will be disabled, and both the plus and minus icons will be hidden.


The 'Submit Timesheet for Week' button will be displayed if one week of data exists on the Timesheet Save Listing page.
Users can edit saved timesheets.
Users cannot delete or edit saved timesheets dated before their joining date.
Users cannot delete or edit exam leave and casual leave saved timesheets on the Timesheet Save Listing page.
When an assignment is created, an email will be sent to the partner. The date format in the email will be: dd-mm-yyyy (e.g., 01-01-1999).

Rejected timesheet data is not showing for the user's ID.
Attendance records have been fixed for all exit users from 01-09-2024 to 25-11-2024. Please verify the attendance records for these users (September to November).



2.Assignment creating page for check box removed by bahadur sir.
22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
app\Http\Controllers\AssignmentmappingController.php


    public function create(Request $request)
    {

        // $partner = Teammember::where('role_id', '=', 13)->where('status', '=', 1)->with('title')
        //     ->orderBy('team_member', 'asc')->get();
        // dd($partner);

        $partner = Teammember::where('role_id', '=', 13)
            ->where('status', '=', 1)
            ->leftJoin('teamrolehistory', 'teamrolehistory.teammember_id', '=', 'teammembers.id')
            ->with('title')
            ->orderBy('team_member', 'asc')
            ->select('teammembers.*', 'teamrolehistory.newstaff_code')
            ->get();

        $teammember = Teammember::where('status', '1')->whereIn('role_id', [14, 15])->with('title', 'role')
            ->orderBy('team_member', 'asc')->get();
        //dd($teammember);
        if ($request->ajax()) {


            if (isset($request->category_id)) {
                echo "<option>Please Select One</option>";

                $assignments = Assignment::leftJoin('assignmentbudgetings', function ($join) {
                    $join->on('assignments.id', '=', 'assignmentbudgetings.assignment_id');
                })->leftJoin('assignmentmappings', function ($join) {
                    $join->on('assignmentbudgetings.assignmentgenerate_id', '=', 'assignmentmappings.assignmentgenerate_id');
                })
                    ->where('assignmentbudgetings.client_id', $request->category_id)
                    // get data only that is not matches assignmentmappings.assignmentgenerate_id from assignmentbudgetings table
                    ->whereNull('assignmentmappings.assignmentgenerate_id')
                    ->select('assignments.*', 'assignmentbudgetings.assignmentgenerate_id', 'assignmentbudgetings.duedate', 'assignmentbudgetings.assignmentname')
                    ->get();

                foreach ($assignments as $sub) {
                    echo "<option value='" . $sub->assignmentgenerate_id . "'>" . $sub->assignment_name  . '( ' . $sub->assignmentgenerate_id . ' )' . '( ' . $sub->assignmentname . ' )' . "</option>";
                }
            }
        } else {
            if (auth()->user()->role_id == 11 || auth()->user()->role_id == 12) {
                $client = Client::where('status', 1)->latest()->get();

                $assignment = Assignment::where('status', '1')
                    ->whereNotIn('id',  [214, 215])->orderBy('assignment_name')->get();

                $clientss = Client::activeClient()->orderBy('client_name')->orWhere('clients.leadpartner', auth()->user()->teammember_id)->orWhere('clients.createdbyadmin_id', auth()->user()->id)->orWhere('clients.updatedbyadmin_id', auth()->user()->id)->select('clients.*')->get();

                return view('backEnd.assignmentmapping.create', compact('client', 'teammember', 'partner', 'assignment', 'clientss'));
            } else {

                $client = DB::table('assignmentbudgetings')
                    ->leftjoin('clients', 'clients.id', 'assignmentbudgetings.client_id')
                    ->Where('assignmentbudgetings.created_by', auth()->user()->id)
                    ->select('clients.client_name', 'clients.id')
                    ->distinct()->get();


                $assignment = Assignment::where('status', '1')
                    ->whereNotIn('id',  [214, 215])->orderBy('assignment_name')->get();

                $clientss = Client::activeClient()->orderBy('client_name')->orWhere('clients.leadpartner', auth()->user()->teammember_id)->orWhere('clients.createdbyadmin_id', auth()->user()->id)->orWhere('clients.updatedbyadmin_id', auth()->user()->id)->select('clients.*')->get();

                //	DB::table('clients')->
                //  orWhere('clients.leadpartner',auth()->user()->teammember_id)->
                //  orWhere('clients.createdbyadmin_id',auth()->user()->id)->
                //	 orWhere('clients.updatedbyadmin_id',auth()->user()->id)->
                //   select('clients.client_name','clients.id')->get();

                return view('backEnd.assignmentmapping.create', compact('client', 'teammember', 'partner', 'assignment', 'clientss'));
            }
        }
    }







22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
resources\views\backEnd\assignmentmapping\create.blade.php

  <script type="text/javascript">
      $(document).ready(function() {
          var maxField = 60; // Input fields increment limitation
          var addButton = $('.add_buttonn'); // Add button selector
          var wrapper = $('.field_wrapper'); // Input field wrapper
          var x = 1; // Initial field counter

          // Store team member names for easy lookup
          var teamMembers = {};
          @foreach ($teammember as $teammemberData)
              teamMembers['{{ $teammemberData->id }}'] =
                  '{{ $teammemberData->team_member }} ({{ $teammemberData->role->rolename }}) ({{ $teammemberData->staffcode }})';
          @endforeach

          // Function to update options based on selected team members
          function updateDropdowns() {
              var selectedValues = [];

              // Get all selected team member IDs
              $('.language').each(function() {
                  var selectedValue = $(this).val();
                  if (selectedValue) {
                      selectedValues.push(selectedValue);
                  }
              });

              // Update each dropdown's options
              $('.language').each(function() {
                  var dropdown = $(this);
                  var currentValue = dropdown.val();

                  dropdown.find('option').each(function() {
                      var optionValue = $(this).val();

                      // If optionValue is selected in another dropdown, remove it from this dropdown
                      if (optionValue && selectedValues.includes(optionValue) && optionValue !==
                          currentValue) {
                          $(this).remove(); // Remove selected option
                      }
                  });
              });
          }

          // Initialize Select2 for the first select box
          $('.language').select2();

          // Update dropdowns on page load
          updateDropdowns();

          // Trigger update when any dropdown changes
          $(wrapper).on('change', '.language', function() {
              updateDropdowns();
          });

          // Once add button is clicked
          $(addButton).click(function() {
              if (x < maxField) {
                  x++; // Increment field counter

                  var fieldHTML = '<div class="row row-sm"><div class="col-6"><div class="form-group">' +
                      '<label class="font-weight-600">Name *</label>' +
                      '<select required class="language form-control enablefalse" id="teammember_' + x +
                      '" name="teammember_id[]">' +
                      '<option value="">Please Select One</option>' +
                      '@foreach ($teammember as $teammemberData)' +
                      '<option value="{{ $teammemberData->id }}">' +
                      '{{ $teammemberData->team_member }} ({{ $teammemberData->role->rolename }}) ({{ $teammemberData->staffcode }})</option>' +
                      '@endforeach</select></div></div>' +
                      '<div class="col-5"><div class="form-group">' +
                      '<label class="font-weight-600">Type *</label>' +
                      '<select required class="form-control key enablefalse" name="type[]" id="type_' +
                      x + '">' +
                      '<option value="">Please Select One</option>' +
                      '<option value="0">Team Leader</option>' +
                      '<option value="2">Staff</option></select></div></div>' +
                      '<a style="margin-top: 36px;" href="javascript:void(0);" class="remove_button">' +
                      '<img src="{{ url('backEnd/image/remove-icon.png') }}" /></a></div></div>';

                  $(wrapper).append(fieldHTML); // Add field html

                  // Initialize Select2 for the newly added select box
                  $('#teammember_' + x).select2();

                  // Update dropdowns after adding a new one
                  updateDropdowns();
              }
          });

          // Once remove button is clicked
          $(wrapper).on('click', '.remove_button', function(e) {
              e.preventDefault();

              // Get the selected value of the dropdown being removed
              var removedValue = $(this).closest('.row').find('.language').val();

              // Remove field html
              $(this).closest('.row').remove();
              x--; // Decrement field counter

              // Re-add the removed value to all dropdowns if it was selected
              if (removedValue) {
                  $('.language').each(function() {
                      var dropdown = $(this);
                      // Check if option already exists
                      if (!dropdown.find('option[value="' + removedValue + '"]').length) {
                          dropdown.append('<option value="' + removedValue + '">' + teamMembers[
                              removedValue] + '</option>');
                      }
                  });
              }

              // Update dropdowns after removing the field
              updateDropdowns();
          });
      });
  </script>








22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
resources\views\backEnd\assignmentmapping\form.blade.php
replace all code 


{{-- Assignment budgetting start --}}
<div class="row row-sm">
    <div class="col-3">
        <div class="form-group">
            <label class="font-weight-600">Client *</label>
            <select required class="language form-control" id="exampleFormControlSelect1" name="client_id"
                @if (Request::is('assignmentmapping/*/edit')) > <option disabled style="display:block">Please Select One
                </option>
                @foreach ($clientss as $clientData)
                <option value="{{ $clientData->id }}"
                    {{ $assignmentbudgeting->client->id == $clientData->id ?? '' ? 'selected="selected"' : '' }}>
                    {{ $clientData->client_name }}</option>
                @endforeach
                @else
                <option></option>
                <option value="">Please Select One</option>
                @foreach ($clientss as $clientData)
                <option value="{{ $clientData->id }}">
                    {{ $clientData->client_name }} </option>

                @endforeach @endif
                </select>
        </div>
    </div>
    <div class="col-3">
        <div class="form-group">
            <label class="font-weight-600">Assignment *</label>
            <select required class="form-control" id="exampleFormControlSelect1" name="assignment_id"
                @if (Request::is('assignmentmapping/*/edit')) > <option disabled style="display:block">Please Select One
                </option>

                @foreach ($assignment as $assignmentData)
                <option value="{{ $assignmentData->id }}"
                    {{ $assignmentbudgeting->assignment->id == $assignmentData->id ?? '' ? 'selected="selected"' : '' }}>
                    {{ $assignmentData->assignment_name }}</option>
                @endforeach


                @else
                <option></option>
                <option value="">Please Select One</option>
                @foreach ($assignment as $assignmentData)
                <option value="{{ $assignmentData->id }}">
                    {{ $assignmentData->assignment_name }}</option>

                @endforeach @endif
                </select>
        </div>
    </div>
    <div class="col-3">
        <div class="form-group">
            <label class="font-weight-600">Assignment Name</label>
            <input required type="text" name="assignmentname"
                value="{{ $assignmentbudgeting->assignmentname ?? '' }}" class=" form-control"
                placeholder="Enter Assignment Name">
        </div>
    </div>
    <div class="col-3">
        <div class="form-group">
            <label class="font-weight-600">Due Date</label>
            <input type="date" required id="example-date-input" name="duedate"
                value="{{ $assignmentbudgeting->date ?? '' }}" class=" form-control leaveDate" placeholder="Enter Date"
                required>
        </div>
    </div>
</div>
<div class="form-group">
    {{-- <button type="submit" class="btn btn-success" style="float:right"> Submit</button> --}}
    {{-- <a class="btn btn-secondary" href="{{ url('assignmentbudgeting') }}">
        Back</a> --}}

</div>
<div class="row row-sm">
    <div class="col-4">
        <div class="form-group">
            <label class="font-weight-600"> Period Start</label>
            <input type="date" name="periodstart" id="startDate" value="{{ $assignmentmapping->periodstart ?? '' }}"
                class=" form-control" placeholder="Enter Period start">
        </div>
    </div>

    <div class="col-4">
        <div class="form-group">
            <label class="font-weight-600">Period End</label>
            <input type="date" required name="periodend" id="endDate"
                value="{{ $assignmentmapping->periodend ?? '' }}" class=" form-control" placeholder="Enter Perio End">
        </div>
    </div>
    <div class="col-4">
        <div class="form-group">
            <label class="font-weight-600">Is Role Over Assignment</label>
            <select class="form-control" id="exampleFormControlSelect1" name="roleassignment">
                <option value="1">No</option>
                <option value="2">Yes</option>

            </select>
        </div>
    </div>
</div>
<div class="row row-sm">

    <div class="col-4">
        <div class="form-group">
            <label class="font-weight-600">Est Hours</label>
            <input type="text" required name="esthours" value="{{ $assignmentmapping->esthours ?? '' }}"
                class=" form-control" placeholder="Enter Est Hours">
        </div>
    </div>
    <div class="col-4">
        <div class="form-group">
            <label class="font-weight-600">Std Cost</label>
            <input type="text" required name="stdcost" value="{{ $assignmentmapping->stdcost ?? '' }}"
                class=" form-control" placeholder="Enter Std Cost">
        </div>
    </div>
    <div class="col-4">
        <div class="form-group">
            <label class="font-weight-600">Est Cost</label>
            <input type="text" required name="estcost" value="{{ $assignmentmapping->estcost ?? '' }}"
                class=" form-control" placeholder="Enter Est Cost">
        </div>
    </div>

</div>
<div class="row row-sm">

    <div class="col-4">
        <div class="form-group">
            <label class="font-weight-600">Fees of The Asignment</label>
            <input type="number" required name="fees" value="{{ $assignmentmapping->fees ?? '' }}"
                class=" form-control" placeholder="Enter Fees of The Asignment">
        </div>
    </div>
</div>

<div class="row row-sm">
    <div class="col-6">

        <div class="form-group">
            <label class="font-weight-600">Lead Partner *</label>
            <select required class="language form-control" id="category" name="leadpartner"
                @if (Request::is('client/*/edit')) > <option disabled
            style="display:block">Please Select One</option>

            @foreach ($partner as $teammemberData)
            <option value="{{ $teammemberData->id }}"
            @if ($client->leadpartner == $teammemberData->id) selected @endif>
                {{ $teammemberData->team_member }}</option>
                @endforeach
            @else
                <option></option>
                <option value="">Please Select One</option>
                @foreach ($partner as $teammemberData)
                    <option value="{{ $teammemberData->id }}">
                        {{ $teammemberData->team_member }} (
                        {{ $teammemberData->newstaff_code ?? ($teammemberData->staffcode ?? '') }} )</option>
                @endforeach
                @endif
            </select>
        </div>
    </div>
    <div class="col-6">
        <div class="form-group">
            <label class="font-weight-600">Other Partner </label>
            <select class="language form-control" name="otherpartner"
                @if (Request::is('client/*/edit')) > <option disabled
            style="display:block">Please Select One</option>

            @foreach ($partner as $teammemberData)
            <option value="{{ $teammemberData->id }}"
            @if ($client->leadpartner == $teammemberData->id) selected @endif>
                {{ $teammemberData->team_member }}</option>
                @endforeach
            @else
                <option></option>
                <option value="">Please Select One</option>
                @foreach ($partner as $teammemberData)
                    <option value="{{ $teammemberData->id }}">
                        {{ $teammemberData->team_member }} (
                        {{ $teammemberData->newstaff_code ?? ($teammemberData->staffcode ?? '') }} )</option>

                @endforeach
                @endif
            </select>
        </div>
    </div>
</div>

<div class="field_wrapper">
    <div class="row row-sm">

        <div class="col-6">
            <div class="form-group">
                <label class="font-weight-600">Name *</label>
                <input type="checkbox" data-toggle="tooltip" id="enablebox" style="margin-left: 10px;"
                    title="You want to submit without teammember, please click on check box">
                <select required class="language form-control enablefalse" id="key" name="teammember_id[]">
                    <option value="">Please Select One</option>
                    @foreach ($teammember as $teammemberData)
                        <option value="{{ $teammemberData->id }}" @if (!empty($store->financial) && $store->financial == $teammemberData->id) selected @endif>
                            {{ $teammemberData->team_member }} ( {{ $teammemberData->role->rolename }} ) (
                            {{ $teammemberData->staffcode }} )</option>
                    @endforeach
                </select>
            </div>
        </div>


        <div class="col-5">
            <div class="form-group">
                <label class="font-weight-600">Type *</label>
                <select required class="form-control key enablefalse" id="key" name="type[]">
                    <option value="">Please Select One</option>
                    <option value="0">Team Leader</option>
                    <option value="2">Staff</option>
                </select>
            </div>
        </div>

        <div class="col-1">
            <div class="form-group" style="margin-top: 36px;">
                <a href="javascript:void(0);" class="add_buttonn" title="Add field"><img
                        src="{{ url('backEnd/image/add-icon.png') }}" /></a>
            </div>
        </div>
    </div>
</div>
<div class="form-group">
    <button type="submit" id="submitButton" class="btn btn-success" style="float:right"> Submit</button>
    <a class="btn btn-secondary" href="{{ url('assignmentmapping') }}">
        Back</a>

</div>

{{-- validation for date --}}
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
    $(document).ready(function() {
        var startDateInput = $('#startDate');
        var endDateInput = $('#endDate');

        function compareDates() {
            var startDate = new Date(startDateInput.val());
            var endDate = new Date(endDateInput.val());

            if (startDate > endDate) {
                alert('End date should be greater than or equal to the Start date');
                endDateInput.val(''); // Clear the end date input
            }
        }

        startDateInput.on('input', compareDates);
        endDateInput.on('blur', compareDates);
    });
</script>

{{-- validation for year --}}
<script>
    $(document).ready(function() {
        $('#startDate').on('change', function() {
            var startclear = $('#startDate');
            var startDateInput1 = $('#startDate').val();
            var startDate = new Date(startDateInput1);
            var startyear = startDate.getFullYear();
            var yearLength = startyear.toString().length;
            if (yearLength > 4) {
                alert('Enter four digits for the year');
                startclear.val('');
            }
        });
        $('#endDate').on('change', function() {
            var endclear = $('#endDate');
            var endDateInput1 = $('#endDate').val();
            var endtDate = new Date(endDateInput1);
            var endyear = endtDate.getFullYear();
            var endyearLength = endyear.toString().length;
            if (endyearLength > 4) {
                alert('Enter four digits for the year');
                endclear.val('');
            }
        });
    });
</script>

<script>
    $(document).ready(function() {
        $('.leaveDate').on('change', function() {
            var leaveDate = $('.leaveDate');
            var leaveDateValue = $('.leaveDate').val();
            console.log(leaveDateValue);
            var leaveDateGet = new Date(leaveDateValue);
            var leaveyear = leaveDateGet.getFullYear();
            // console.log(startyear);
            var leaveyearLength = leaveyear.toString().length;
            if (leaveyearLength > 4) {
                alert('Enter four digits for the year');
                leaveDate.val('');
            }
        });
    });
</script>
<script>
    const dateInput = document.querySelector('.dateInput'); // Select the element with the class 'dateInput'
    dateInput.addEventListener('change', function() {
        const selectedDate = new Date(this.value);
        const formattedDate =
            `${selectedDate.getDate()}-${selectedDate.getMonth() + 1}-${selectedDate.getFullYear()}`;
        this.value = formattedDate;
    });
</script>


{{-- <script>
    $(document).ready(function() {
        $('#enablebox').on('change', function() {
            $('.enablefalse').prop('disabled', this.checked);
        });
    });
</script> --}}

<script>
    $(document).ready(function() {
        $('#enablebox').on('change', function() {
            $('.enablefalse').prop('disabled', this.checked);
            if (this.checked) {
                $('.add_buttonn, .remove_button').addClass('d-none');
            } else {
                $('.add_buttonn, .remove_button').removeClass('d-none');
            }
        });
    });
</script>
<script>
    document.getElementById('Myform').addEventListener('submit', function(event) {
        // Get the submit button
        const submitButton = document.getElementById('submitButton');

        // Disable the submit button to prevent multiple submissions
        submitButton.disabled = true;
        submitButton.textContent = "Submitting..."; // Optional: change the button text

        // Allow the form to submit
        // The form will automatically be submitted due to the 'action' attribute in the form tag
    });
</script>








22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
app\Http\Controllers\AssignmentmappingController.php

    public function store(Request $request)
    {

        $request->validate([
            'client_id' => "required",
            'assignment_id' => "required",
            'teammember_id.*' => "required",
            'assignmentname' => "required",
            'type.*' => "required"
        ]);

        $client_id = $request->input('client_id');
        $assignment_id = $request->input('assignment_id');
        $assignmentname = $request->input('assignmentname');

        if ($client_id && $assignment_id && $assignmentname) {

            $data = $request->except(['_token', 'periodstart', 'periodend', 'roleassignment', 'esthours', 'stdcost', 'estcost', 'fees', 'leadpartner', 'otherpartner', 'teammember_id', 'type']);
            $data['created_by'] = auth()->user()->id;

            $clientcode = DB::table('clients')->where('id', $client_id)->value('client_name');
            $assignmentgenerateid = strtoupper(substr($clientcode, 0, 3));

            // Generate unique assignment number
            $assignmentnumbers = DB::table('assignmentbudgetings')->max('assignmentnumber');

            $assignmentnumbers = $assignmentnumbers ? $assignmentnumbers + 1 : 100001;

            $assignmentgenerate = $assignmentgenerateid . $assignmentnumbers;


            if (DB::table('assignmentmappings')->where('assignmentgenerate_id', $assignmentgenerate)->exists()) {
                return back()->with('success', ['msg' => 'You have already created assignment.']);
            }

            // comment it on vsalocal before run
            Storage::disk('s3')->makeDirectory($assignmentgenerate);

            // Insert into assignmentbudgetings
            DB::table('assignmentbudgetings')->insert([
                'client_id' => $client_id,
                'assignment_id' => $assignment_id,
                'assignmentname' => $assignmentname,
                'duedate' => $data['duedate'],
                'created_by' => $data['created_by'],
                'assignmentgenerate_id' => $assignmentgenerate,
                'assignmentnumber' => $assignmentnumbers,
                'created_at' => now(),
                'updated_at' => now()
            ]);

            // Insert into assignmentmappings
            $id = DB::table('assignmentmappings')->insertGetId([
                'assignmentgenerate_id' => $assignmentgenerate,
                'periodstart' => $request->periodstart,
                'periodend' => $request->periodend,
                'year' => Carbon::parse($request->periodend)->year,
                'roleassignment' => $request->roleassignment,
                'assignment_id' => $assignment_id,
                'esthours' => $request->esthours,
                'independenceform' => 2,
                'leadpartner' => $request->leadpartner,
                'otherpartner' => $request->otherpartner,
                'stdcost' => $request->stdcost,
                'estcost' => $request->estcost,
                'filecreationdate' => now()->format('Y-m-d'),
                'modifieddate' => now()->format('Y-m-d'),
                'auditcompletiondate' => now()->format('Y-m-d'),
                'documentationdate' => now()->format('Y-m-d'),
                'created_at' => now(),
                'updated_at' => now()
            ]);

            $assignment_name = Assignment::where('id', $request->assignment_id)->select('assignment_name')->pluck('assignment_name')->first();

            $assignmentbudgetingDatas = DB::table('assignmentmappings')
                ->where('assignmentgenerate_id', $assignmentgenerate)
                ->select(
                    'assignmentmappings.*',
                )
                ->first();

            if (!empty($request->teammember_id) && $request->teammember_id != '0') {
                $teammemberIds = $request->teammember_id;
                if (is_array($teammemberIds) && count($teammemberIds) > 0) {
                    foreach ($teammemberIds as $index => $teammemberId) {
                        DB::table('assignmentteammappings')->insert([
                            'assignmentmapping_id' => $id,
                            'type'                 => $request->type[$index],
                            'teammember_id'        => $teammemberId,
                            'created_at'           => date('Y-m-d'),
                            'updated_at'           => date('Y-m-d'),
                        ]);
                    }
                }

                $clientname = Client::where('id', $request->client_id)
                    ->select('client_name', 'client_code')
                    ->first();

                $teamemailpartner = DB::table('teammembers')
                    ->where('id', $request->leadpartner)
                    ->select('emailid', 'team_member', 'staffcode')
                    ->first();

                $teamemailotherpartner = DB::table('teammembers')
                    ->where('id', $request->otherpartner)
                    ->select('emailid', 'team_member', 'staffcode')
                    ->first();

                $teamleader = DB::table('assignmentteammappings')
                    ->where('assignmentmapping_id', $id)
                    ->leftJoin('teammembers', 'teammembers.id', '=', 'assignmentteammappings.teammember_id')
                    ->select('teammembers.team_member', 'teammembers.staffcode')
                    ->get();

                if (!empty($teammemberIds)) {
                    $teamemails = DB::table('teammembers')
                        ->whereIn('id', $teammemberIds)
                        ->pluck('emailid');

                    // Mail for employee
                    foreach ($teamemails as $teammemberEmail) {
                        $data = [
                            'assignmentid'      => $assignmentgenerate,
                            'clientname'        => $clientname->client_name,
                            'clientcode'        => $clientname->client_code,
                            'assignmentname'    => $request->assignmentname,
                            'assignment_name'   => $assignment_name,
                            'emailid'           => $teammemberEmail,
                            'otherpatner'       => $teamemailotherpartner,
                            'assignmentpartner' => $teamemailpartner,
                            'teamleader'        => $teamleader,
                            'periodend' => $assignmentbudgetingDatas->periodend,
                            'assignmentgenerate' => $assignmentgenerate,
                        ];

                        $this->sendAssignmentEmail($data);
                    }
                }

                // Mail for leadpartner
                if (!empty($request->leadpartner)) {
                    $data = [
                        'assignmentid'      => $assignmentgenerate,
                        'clientname'        => $clientname->client_name,
                        'clientcode'        => $clientname->client_code,
                        'assignmentname'    => $request->assignmentname,
                        'assignment_name'   => $assignment_name,
                        'emailid'           => $teamemailpartner->emailid,
                        'otherpatner'       => $teamemailotherpartner,
                        'assignmentpartner' => $teamemailpartner,
                        'teamleader'        => $teamleader,
                        'periodend' => $assignmentbudgetingDatas->periodend,
                        'assignmentgenerate' => $assignmentgenerate,
                    ];

                    $this->sendAssignmentEmail($data);
                }

                // Mail for otherpartner
                if (!empty($request->otherpartner)) {
                    $data = [
                        'assignmentid'      => $assignmentgenerate,
                        'clientname'        => $clientname->client_name,
                        'clientcode'        => $clientname->client_code,
                        'assignmentname'    => $request->assignmentname,
                        'assignment_name'   => $assignment_name,
                        'emailid'           => $teamemailotherpartner->emailid,
                        'otherpatner'       => $teamemailotherpartner,
                        'assignmentpartner' => $teamemailpartner,
                        'teamleader'        => $teamleader,
                        'periodend' => $assignmentbudgetingDatas->periodend,
                        'assignmentgenerate' => $assignmentgenerate,
                    ];

                    $this->sendAssignmentEmail($data);
                }
            } else {
                $clientname = Client::where('id', $request->client_id)
                    ->select('client_name', 'client_code')
                    ->first();

                $teamemailpartner = DB::table('teammembers')
                    ->where('id', $request->leadpartner)
                    ->select('emailid', 'team_member', 'staffcode')
                    ->first();

                $teamemailotherpartner = DB::table('teammembers')
                    ->where('id', $request->otherpartner)
                    ->select('emailid', 'team_member', 'staffcode')
                    ->first();


                // Mail for leadpartner
                if (!empty($request->leadpartner)) {
                    $data = [
                        'assignmentid'      => $assignmentgenerate,
                        'clientname'        => $clientname->client_name,
                        'clientcode'        => $clientname->client_code,
                        'assignmentname'    => $request->assignmentname,
                        'assignment_name'   => $assignment_name,
                        'emailid'           => $teamemailpartner->emailid,
                        'otherpatner'       => $teamemailotherpartner,
                        'assignmentpartner' => $teamemailpartner,
                        'periodend' => $assignmentbudgetingDatas->periodend,
                        'assignmentgenerate' => $assignmentgenerate,
                    ];

                    $this->sendAssignmentEmail($data);
                }

                // Mail for otherpartner
                if (!empty($request->otherpartner)) {
                    $data = [
                        'assignmentid'      => $assignmentgenerate,
                        'clientname'        => $clientname->client_name,
                        'clientcode'        => $clientname->client_code,
                        'assignmentname'    => $request->assignmentname,
                        'assignment_name'   => $assignment_name,
                        'emailid'           => $teamemailotherpartner->emailid,
                        'otherpatner'       => $teamemailotherpartner,
                        'assignmentpartner' => $teamemailpartner,
                        'periodend' => $assignmentbudgetingDatas->periodend,
                        'assignmentgenerate' => $assignmentgenerate,
                    ];

                    $this->sendAssignmentEmail($data);
                }
            }
            // Log activity
            $actionName = class_basename($request->route()->getActionName());
            $pagename = substr($actionName, 0, strpos($actionName, "Controller"));
            $id = auth()->user()->teammember_id;

            DB::table('activitylogs')->insert([
                'user_id' => $id,
                'ip_address' => $request->ip(),
                'activitytitle' => $pagename,
                'description' => 'New Assignment Mapping Added ( ' . Assignment::where('id', $assignment_id)->value('assignment_name') . ' )',
                'created_at' => now(),
                'updated_at' => now()
            ]);

            $output = [
                'msg' => "Created Successfully <strong>Client Name:</strong> {$clientname->client_name} <strong>Assignment:</strong> {$assignment_name} <strong>Assignment Name:</strong> {$assignmentname} <strong>Assignment Id:</strong> {$assignmentgenerate}"
            ];
            return redirect('assignmentbudgeting')->with('success', $output);
        }
    }







22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
resources\views\emails\assignmentassign.blade.php


<h3>
    Dear Sir/Madam,</h3>
<br>
<br>

<p>This is to inform you that you have been allocated to a new assignment. The details are given here under:</p>


<p><b>Client Name :</b> {{ $clientname ?? '' }} (
    {{ $clientcode ?? '' }} )</p>
<p><b>Assignment Name :</b> <a href="{{ url('assignmentmapping') }}">
        {{ $assignment_name }} ({{ $assignmentname }}) ({{ $assignmentid }})</a></p>
<p><b>Assignment Partner :</b> {{ $assignmentpartner->team_member ?? '' }}
    ({{ $assignmentpartner->staffcode ?? '' }})</p>
<p><b>Other Partner :</b> {{ $otherpatner->team_member ?? 'N/A' }}
    @if ($otherpatner != null)
        ({{ $otherpatner->staffcode ?? '' }})
    @endif
</p>

@if (!empty($teamleader) && $teamleader->isNotEmpty())
    <p><b>Team Leader :</b>
        @foreach ($teamleader as $teamleaderDatas)
            {{ $teamleaderDatas->team_member ?? '' }} ({{ $teamleaderDatas->staffcode ?? '' }}),
        @endforeach
    </p>
@endif
<p><b>Period End :</b> {{ date('d-m-Y', strtotime($periodend)) }}</p>
<p>In reference to the assignment allocated, kindly <b>click on “Click here” button below </b> to acknowledge and e-sign
    the
    <b>Independence</b> for the assignment.
    Please note that an individual should be independent of the <b>client</b>.
</p>
<br>
<p><a href="{{ url('/independence/create/' . $assignmentgenerate) }}">Click here </a> to acknowledge and e-sign your
    <b>Independence</b>.
</p>
<br>
<p>Any matter impacting the <b>independence</b> of an individual with respect to the <b>client</b> shall be reported to
    the Engagement Partner immediately.
</p><br>
<p>Thanks!</p>








1.The 'Submit Timesheet for Week' button will be displayed if one week of data exists on the Timesheet Save Listing page.
22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
resources\views\backEnd\timesheet\index.blade.php


@extends('backEnd.layouts.layout') @section('backEnd_content')
    <!--Content Header (Page header)-->
    <div class="content-header row align-items-center m-0">
        <nav aria-label="breadcrumb" class="col-sm-5 order-sm-last mb-3 mb-sm-0 p-0 ">
            {{-- <ol class="breadcrumb d-inline-flex font-weight-600 fs-13 bg-white mb-0 float-sm-right">
                @php
                    // Get current Date
                    $currentdate = date('Y-m-d');
                    if ($getauth == null) {
                        $getdate = date('Y-m-d');
                    } else {
                        $getdate = $getauth->date;
                    }

                    $to = Carbon\Carbon::createFromFormat('Y-m-d', $getdate ?? '');
                    $from = Carbon\Carbon::createFromFormat('Y-m-d', $currentdate);
                    // Diffrence between latest save timesheet and todays date in count / timesheet gap date count
                    $diff_in_days = $to->diffInDays($from);
                    $getmondaydate = DB::table('timesheetday')->first();

                    $timesheetcount = DB::table('timesheets')
                        ->where('status', '0')
                        ->where('created_by', auth()->user()->teammember_id)
                        ->where('date', '<', $getmondaydate->date)
                        ->count();
                    //! no uses
                    $too = Carbon\Carbon::createFromFormat('Y-m-d', $getmondaydate->date ?? '');
                    $froms = Carbon\Carbon::createFromFormat('Y-m-d', $currentdate);
                    $diff_in_daysformonday = $too->diffInDays($froms);
                    //! no uses
                    $teamusers = DB::table('teammembers')
                        ->where('id', auth()->user()->teammember_id)
                        ->first();
                @endphp
                @if ($diff_in_days > 14)
                    @if ($timesheetrequest == null)
                        <li class="breadcrumb-item"><a data-toggle="modal" data-target="#exampleModal21">Add Timesheet
                                Request</a> </li>
                    @else
                        @if ($currentdate < $timesheetrequest->validate)
                            <li class="breadcrumb-item"><a class="btn btn-primary-soft btn-sm"
                                    href="{{ url('timesheet/create') }}">Add Timesheet</a>
                            </li>
                            @if (now()->isSunday() || now()->isMonday() || now()->isTuesday() || now()->isWednesday() || now()->isThursday() || now()->isFriday() || now()->isSaturday())
                                @if ($timesheetcount >= 6)
                                    <li class="breadcrumb-item"><a class="btn btn-primary-soft btn-sm"
                                            onclick="return confirm('Are you sure you want to submit this timesheet for last week?');"
                                            href="{{ url('timesheetsubmission') }}">Submit Timesheet for Week</a>
                                    </li>
                                @endif
                            @endif
                        @elseif ($currentdate > $timesheetrequest->validate && $timesheetrequest->validate != null)
                            <li class="breadcrumb-item"><a data-toggle="modal" data-target="#exampleModal21">Add
                                    Timesheet
                                    Request</a>
                            </li>
                        @else
                            @if ($timesheetrequest && $timesheetrequest->status == 0)
                                @php
                                    $latestrequesthour = Carbon\Carbon::parse($timesheetrequest->created_at);
                                    $currentDateTime = Carbon\Carbon::now();
                                @endphp
                                @if ($latestrequesthour->diffInHours($currentDateTime) > 24)
                                    <li class="breadcrumb-item">
                                        <a data-toggle="modal" data-target="#exampleModal21">Add Timesheet Request</a>
                                    </li>
                                @else
                                    <li class="breadcrumb-item"><a>Requested Done</a>
                                    </li>
                                @endif
                            @else
                                <li class="breadcrumb-item"><a data-toggle="modal" data-target="#exampleModal21">Add
                                        Timesheet Request</a> </li>
                            @endif
                        @endif
                    @endif
                @elseif(15 < 16)
                    <li class="breadcrumb-item"><a class="btn btn-info-soft btn-sm" href="{{ url('timesheet/create') }}">Add
                            Timesheet @if ($timesheetcount < 7)
                                for last week
                            @endif
                        </a>
                    </li>

                    @if (now()->isSunday() || now()->isMonday() || now()->isTuesday() || now()->isWednesday() || now()->isThursday() || now()->isFriday() || now()->isSaturday())
                        @if ($timesheetcount >= 6)
                            <li class="breadcrumb-item"><a class="btn btn-primary-soft btn-sm"
                                    onclick="return confirm('Are you sure you want to submit this timesheet for last week?');"
                                    href="{{ url('timesheetsubmission') }}">Submit Timesheet for Week</a>
                            </li>
                        @endif
                    @endif
                @endif
            </ol> --}}
            <ol class="breadcrumb d-inline-flex font-weight-600 fs-13 bg-white mb-0 float-sm-right">
                @php
                    // Get current Date
                    $currentdate = date('Y-m-d');
                    // $currentdate = '2024-10-08';
                    if ($getauth == null) {
                        $getdate = date('Y-m-d');
                    } else {
                        $getdate = $getauth->date;
                        // $currentdate = '2024-09-17';
                    }

                    $to = Carbon\Carbon::createFromFormat('Y-m-d', $getdate ?? '');
                    $nextmonday = $to->copy()->next(Carbon\Carbon::MONDAY);
                    $from = Carbon\Carbon::createFromFormat('Y-m-d', $currentdate);
                    // Diffrence between latest save timesheet and todays date in count / timesheet gap date count
                    $diff_in_days = $nextmonday->diffInDays($from);

                    $getmondaydate = DB::table('timesheetday')->first();

                    // i have faced some problem hare so i have done new code when current week running and monday not update for current week then submit button not came
                    // $timesheetcount = DB::table('timesheets')
                    //     ->where('status', '0')
                    //     ->where('created_by', auth()->user()->teammember_id)
                    //     ->where('date', '<', $getmondaydate->date)
                    //     ->count();

                    // $timesheetcount = DB::table('timesheets')
                    //     ->where('status', '0')
                    //     ->where('created_by', auth()->user()->teammember_id)
                    //     ->where('date', '<', $currentdate)
                    //     ->count();

                    $timesheetsaved = DB::table('timesheets')
                        ->where('status', '0')
                        ->where('created_by', auth()->user()->teammember_id)
                        ->orderBy('date', 'asc')
                        ->first();

                    $timesheetcount = 0;

                    if ($timesheetsaved) {
                        $startdateofdata = Carbon\Carbon::createFromFormat('Y-m-d', $timesheetsaved->date ?? '');
                        $enddateofdata = $startdateofdata->copy()->next(Carbon\Carbon::SATURDAY);

                        $timesheetcount = DB::table('timesheets')
                            ->where('status', '0')
                            ->where('created_by', auth()->user()->teammember_id)
                            ->whereBetween('date', [$startdateofdata->format('Y-m-d'), $enddateofdata->format('Y-m-d')])
                            ->count();
                    }
                    // dd($timesheetcount);

                    //! no uses
                    $too = Carbon\Carbon::createFromFormat('Y-m-d', $getmondaydate->date ?? '');
                    $froms = Carbon\Carbon::createFromFormat('Y-m-d', $currentdate);
                    $diff_in_daysformonday = $too->diffInDays($froms);
                    //! no uses
                    $teamusers = DB::table('teammembers')
                        ->where('id', auth()->user()->teammember_id)
                        ->first();
                @endphp

                {{-- <li class="breadcrumb-item"><a class="btn btn-primary-soft btn-sm" href="{{ url('timesheet/create') }}">Add
                        Timesheet</a>
                </li>
                <li class="breadcrumb-item"><a data-toggle="modal" data-target="#exampleModal21">Add Timesheet
                        Request</a> </li>

                <li class="breadcrumb-item"><a class="btn btn-primary-soft btn-sm"
                        onclick="return confirm('Are you sure you want to submit this timesheet for last week?');"
                        href="{{ url('timesheetsubmission') }}">Submit Timesheet for Week</a>
                </li> --}}

                {{-- Tuesday closed timesheet clent said user can submit timesheet on monday after comming sunday leave --}}
                @if ($diff_in_days >= 15)
                    @if ($timesheetrequest == null)
                        <li class="breadcrumb-item"><a data-toggle="modal" data-target="#exampleModal21">Add Timesheet
                                Request</a> </li>
                    @else
                        @if ($currentdate < $timesheetrequest->validate)
                            <li class="breadcrumb-item"><a class="btn btn-primary-soft btn-sm"
                                    href="{{ url('timesheet/create') }}">Add Timesheet</a>
                            </li>
                            @if (now()->isSunday() ||
                                    now()->isMonday() ||
                                    now()->isTuesday() ||
                                    now()->isWednesday() ||
                                    now()->isThursday() ||
                                    now()->isFriday() ||
                                    now()->isSaturday())
                                @if ($timesheetcount >= 6)
                                    <li class="breadcrumb-item"><a class="btn btn-primary-soft btn-sm"
                                            onclick="return confirm('Are you sure you want to submit this timesheet for last week?');"
                                            href="{{ url('timesheetsubmission') }}">Submit Timesheet for Week</a>
                                    </li>
                                @endif
                            @endif
                        @elseif ($currentdate > $timesheetrequest->validate && $timesheetrequest->validate != null)
                            <li class="breadcrumb-item"><a data-toggle="modal" data-target="#exampleModal21">Add
                                    Timesheet
                                    Request</a>
                            </li>
                        @else
                            @if ($timesheetrequest && $timesheetrequest->status == 0)
                                @php
                                    $latestrequesthour = Carbon\Carbon::parse($timesheetrequest->created_at);
                                    $currentDateTime = Carbon\Carbon::now();
                                @endphp
                                @if ($latestrequesthour->diffInHours($currentDateTime) > 24)
                                    <li class="breadcrumb-item">
                                        <a data-toggle="modal" data-target="#exampleModal21">Add Timesheet Request</a>
                                    </li>
                                @else
                                    <li class="breadcrumb-item"><a>Requested Done</a>
                                    </li>
                                @endif
                            @else
                                <li class="breadcrumb-item"><a data-toggle="modal" data-target="#exampleModal21">Add
                                        Timesheet Request</a> </li>
                            @endif
                        @endif
                    @endif
                @elseif(15 < 16)
                    <li class="breadcrumb-item"><a class="btn btn-info-soft btn-sm" href="{{ url('timesheet/create') }}">Add
                            Timesheet @if ($timesheetcount > 7)
                                for last week
                            @endif
                        </a>
                    </li>

                    @if (now()->isSunday() ||
                            now()->isMonday() ||
                            now()->isTuesday() ||
                            now()->isWednesday() ||
                            now()->isThursday() ||
                            now()->isFriday() ||
                            now()->isSaturday())
                        @if ($timesheetcount >= 6)
                            <li class="breadcrumb-item"><a class="btn btn-primary-soft btn-sm"
                                    onclick="return confirm('Are you sure you want to submit this timesheet for last week?');"
                                    href="{{ url('timesheetsubmission') }}">Submit Timesheet for Week</a>
                            </li>
                        @endif
                    @endif
                @endif
            </ol>
        </nav>




        <div class="col-sm-7 header-title p-0">
            <div class="media">
                <div class="header-icon text-success mr-3"><i class="typcn typcn-puzzle-outline"></i></div>
                <div class="media-body">
                    <h1 class="font-weight-bold">My Timesheet</h1>
                    <small>Time sheet List</small>
                </div>
            </div>
        </div>
    </div>
    <!--/.Content Header (Page header)-->
    <div class="body-content">
        <div class="card mb-4">

            <div class="card-body">
                @component('backEnd.components.alert')
                @endcomponent
                <form method="post">
                    @csrf
                    <div class="table-responsive">


                        <table id="examplee" class="display nowrap">
                            <thead>

                                <tr>
                                    <th style="display: none;">id</th>
                                    <!--	@if (
                                        (now()->isSaturday() && now()->hour >= 18) ||
                                            now()->isSunday() ||
                                            now()->isMonday() ||
                                            (now()->isTuesday() && now()->hour <= 18))
    <th><button type="submit"
onclick="return confirm('Are you sure you want to submit this item?');"
formaction="timesheetsubmits" class="btn btn-danger-soft btn-sm">Submit</button>
input type="checkbox" id="chkAll">
i class="os-icon os-icon-trash"></i></th>
    @endif -->
                                    <th>Status</th>
                                    <th>Date</th>
                                    <th>Day</th>
                                    <th>Client Name</th>
                                    <th>Client Code</th>
                                    <th>Assignment Name</th>
                                    <th>Assignment Id</th>
                                    <th>Work Item</th>
                                    <th>Location</th>
                                    <th>Partner</th>
                                    <th>Partner Code</th>
                                    <th>Hour</th>
                                    <th>Total Hour</th>
                                    <th>Action</th>

                                </tr>
                            </thead>
                            <tbody>
                                @foreach ($timesheetData as $timesheetDatas)
                                    <tr>
                                        @php

                                            $timeid = DB::table('timesheetusers')
                                                ->where('timesheetusers.id', $timesheetDatas->id)
                                                ->first();

                                            // $client_id = DB::table('timesheetusers')
                                            //     ->leftjoin('clients', 'clients.id', 'timesheetusers.client_id')
                                            //     ->leftjoin(
                                            //         'assignmentbudgetings',
                                            //         'assignmentbudgetings.assignment_id',
                                            //         'timesheetusers.assignment_id',
                                            //     )
                                            //     ->leftjoin(
                                            //         'assignments',
                                            //         'assignments.id',
                                            //         'timesheetusers.assignment_id',
                                            //     )
                                            //     ->leftjoin('teammembers', 'teammembers.id', 'timesheetusers.partner')
                                            //     ->leftJoin('teamrolehistory', function ($join) {
                                            //         $join
                                            //             ->on('teamrolehistory.teammember_id', '=', 'teammembers.id')
                                            //             ->on(
                                            //                 'teamrolehistory.created_at',
                                            //                 '<',
                                            //                 'timesheetusers.created_at',
                                            //             );
                                            //     })
                                            //     ->where('timesheetusers.id', $timesheetDatas->id)
                                            //     ->select(
                                            //         'clients.client_name',
                                            //         'clients.client_code',
                                            //         'timesheetusers.hour',
                                            //         'timesheetusers.location',
                                            //         'timesheetusers.status',
                                            //         'assignments.assignment_name',
                                            //         'billable_status',
                                            //         'workitem',
                                            //         'teammembers.team_member',
                                            //         'teammembers.staffcode',
                                            //         'teamrolehistory.newstaff_code',
                                            //         'assignmentbudgetings.assignmentname',
                                            //         'assignmentbudgetings.assignmentgenerate_id',
                                            //     )
                                            //     ->first();

                                            $client_id = DB::table('timesheetusers')
                                                ->leftjoin('clients', 'clients.id', 'timesheetusers.client_id')
                                                ->leftjoin(
                                                    'assignmentbudgetings',
                                                    'assignmentbudgetings.assignment_id',
                                                    'timesheetusers.assignment_id',
                                                )
                                                ->leftjoin(
                                                    'assignments',
                                                    'assignments.id',
                                                    'timesheetusers.assignment_id',
                                                )
                                                ->leftjoin('teammembers', 'teammembers.id', 'timesheetusers.partner')
                                                ->where('timesheetusers.id', $timesheetDatas->id)
                                                ->select(
                                                    'clients.client_name',
                                                    'clients.client_code',
                                                    'timesheetusers.hour',
                                                    'timesheetusers.location',
                                                    'timesheetusers.status',
                                                    'assignments.assignment_name',
                                                    'billable_status',
                                                    'workitem',
                                                    'teammembers.team_member',
                                                    'teammembers.staffcode',
                                                    'assignmentbudgetings.assignmentname',
                                                )
                                                ->first();

                                            $permotioncheck = null;
                                            $datadate = $timesheetDatas->assignmentcreated
                                                ? Carbon\Carbon::createFromFormat(
                                                    'Y-m-d H:i:s',
                                                    $timesheetDatas->assignmentcreated,
                                                )
                                                : null;
                                            $permotiondate = null;

                                            if (
                                                auth()->user()->role_id == 13 ||
                                                auth()->user()->role_id == 11 ||
                                                auth()->user()->role_id == 14
                                            ) {
                                                $permotioncheck = DB::table('teamrolehistory')
                                                    ->where('teammember_id', auth()->user()->teammember_id)
                                                    ->first();

                                                if ($permotioncheck) {
                                                    $permotiondate = Carbon\Carbon::createFromFormat(
                                                        'Y-m-d H:i:s',
                                                        $permotioncheck->created_at,
                                                    );
                                                }
                                            }

                                            $total = DB::table('timesheetusers')

                                                ->where('timesheetusers.timesheetid', $timesheetDatas->timesheetid)
                                                ->sum('hour');
                                            //	dd($total);
                                            $dates = date('l', strtotime($timesheetDatas->date));

                                        @endphp
                                        <td style="display: none;">{{ $timesheetDatas->id }}</td>
                                        <td>
                                            @if ($client_id->status == 0)
                                                <span class="badge badge-pill badge-warning">saved</span>
                                            @else
                                                <span class="badge badge-pill badge-danger">submit</span>
                                            @endif
                                        </td>

                                        @php

                                            $date = $timesheetDatas->date;

                                            $leaves = DB::table('applyleaves')
                                                ->where('applyleaves.createdby', auth()->user()->teammember_id)
                                                ->where('status', '!=', 2)
                                                ->select('applyleaves.from', 'applyleaves.to')
                                                ->get();

                                            $leavesWithinRange = $leaves->filter(function ($leave) use ($date) {
                                                return $leave->from <= $date && $leave->to >= $date;
                                            });

                                            //dd($leavesWithinRange);

                                        @endphp

                                        <td> <span style="display: none;">
                                                {{ date('Y-m-d', strtotime($timesheetDatas->date)) }}</span>{{ date('d-m-Y', strtotime($timesheetDatas->date)) }}
                                        </td>

                                        <td>
                                            @if ($timesheetDatas->date != null)
                                                {{ $dates ?? '' }}
                                            @endif
                                        </td>


                                        <td>
                                            {{ $client_id->client_name ?? '' }}
                                            @if (count((array) $client_id->client_name) > 1)
                                                ,
                                            @endif
                                        </td>
                                        <td>
                                            {{ $client_id->client_code ?? '' }}
                                            @if (count((array) $client_id->client_code) > 1)
                                                ,
                                            @endif
                                        </td>

                                        <td>
                                            {{ $client_id->assignment_name ?? '' }}
                                            @if ($timesheetDatas->assignmentname != null)
                                                ({{ $timesheetDatas->assignmentname ?? '' }})
                                            @endif
                                            @if (count((array) $client_id->assignment_name) > 1)
                                                ,
                                            @endif
                                        </td>
                                        <td>
                                            {{ $timesheetDatas->assignmentgenerate_id ?? '' }}
                                        </td>
                                        <td>
                                            {{ $client_id->workitem ?? '' }}
                                            @if (count((array) $client_id->workitem) > 1)
                                                ,
                                            @endif
                                        </td>

                                        <td>
                                            {{ $client_id->location ?? '' }}
                                            @if (count((array) $client_id->location) > 1)
                                                ,
                                            @endif
                                        </td>

                                        {{-- <td>
                                        {{ $client_id->team_member ?? '' }} (
                                        {{ $client_id->newstaff_code ?? ($client_id->staffcode ?? '') }})
                                        @if (count((array) $client_id->team_member) > 1)
                                            ,
                                        @endif
                                    </td> --}}





                                        <td>
                                            {{ $client_id->team_member ?? '' }}
                                            @if (count((array) $client_id->team_member) > 1)
                                                ,
                                            @endif
                                        </td>

                                        <td>
                                            @if ($permotioncheck && $datadate && $datadate->greaterThan($permotiondate))
                                                {{ $permotioncheck->newstaff_code }}
                                            @else
                                                {{ $client_id->staffcode ?? '' }}
                                            @endif
                                            @if (count((array) $client_id->team_member) > 1)
                                                ,
                                            @endif
                                        </td>
                                        <td>
                                            {{ $client_id->hour ?? '' }}
                                            @if (count((array) $client_id->hour) > 1)
                                                ,
                                            @endif
                                        </td>
                                        <td>{{ $total }}</td>
                                        <td>
                                            @if ($client_id->status == 0)
                                                @if ($leavesWithinRange->isEmpty())
                                                    <a href="{{ url('/timesheet/destroy/' . $timesheetDatas->timesheetid) }}"
                                                        onclick="return confirm('Are you sure you want to delete this item?');"
                                                        class="btn btn-danger-soft btn-sm"><i
                                                            class="far fa-trash-alt"></i></a>
                                                    <a href="{{ url('/savedtimesheet/edit/' . $timesheetDatas->id) }}"
                                                        class="btn btn-info-soft btn-sm"><i class="far fa-edit"></i></a>
                                                @endif
                                            @else
                                                delete blocked
                                            @endif
                                        </td>

                                    </tr>
                                @endforeach
                            </tbody>
                        </table>


                    </div>
                </form>
            </div>
        </div>

    </div>
    <!--/.body content-->
    <!-- Modal -->
    <div class="modal fade" id="exampleModal1" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel4"
        aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <form id="detailsForm" method="post" action="{{ url('timesheetexcel/store') }}"
                    enctype="multipart/form-data">
                    @csrf
                    <div class="modal-header" style="background: #37A000">
                        <h5 style="color:white;" class="modal-title font-weight-600" id="exampleModalLabel4">Add Excel</h5>
                        <div>
                            <ul>
                                @foreach ($errors->all() as $e)
                                    <li style="color:red;">{{ $e }}</li>
                                @endforeach
                            </ul>
                        </div>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body">

                        <div class="details-form-field form-group row">
                            <label for="name" class="col-sm-3 col-form-label font-weight-600">Upload Excel:</label>
                            <div class="col-sm-9">
                                <input id="name" class="form-control" name="file" type="file">
                                <input hidden value="{{ $clientid->client_id ?? '' }}" class="form-control"
                                    name="client_id" type="text">
                                <input hidden value="{{ $id ?? '' }}" class="form-control" name="ilrfolder_id"
                                    type="text">
                            </div>

                        </div>

                        <div class="details-form-field form-group row">
                            <label for="address" class="col-sm-3 col-form-label font-weight-600">Sample Excel:</label>
                            <div class="col-sm-9">
                                <a href="{{ url('backEnd/timesheetformats.xlsx') }}"
                                    class="btn btn-success btn">Download<i class="fas fa-file-excel"
                                        style="margin-left: 3px;font-size: 20px;"></i></a>

                            </div>
                        </div>
                        <div class="details-form-field form-group row">
                            <label for="address" class="col-sm-3 col-form-label font-weight-600">Instruction <span
                                    style="color:red;">*</span></label>
                            <div class="col-sm-9" style="  margin-top: 10px; ">

                                <span>
                                    Please note the Client Name (click <a target="blank"
                                        href="{{ url('clientassignmentlist') }}"> here</a> to see clients), Assignment
                                    Name (click <a target="blank" href="{{ url('clientassignmentlist') }}"> here</a> to
                                    see assignments) and Partner Name (click <a target="blank"
                                        href="{{ url('clientassignmentlist') }}"> here</a> to
                                    see Partner) should be as same as it is updated on Portal (KGS Capitall). Date (M/D/Y) ,
                                    Hour
                                    format should be as same as mentioned
                                    in the Timesheet Format. If you have not worked on non working day (holiday/2nd or 4th
                                    Sat/Sunday, please skip/do not mention those dates in your excel sheet when uploading
                                    the
                                    excel sheet. </span>


                            </div>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>
                        <button type="submit" class="btn btn-success">Save</button>
                    </div>
                </form>
            </div>
        </div>
    </div>


    <div class="modal fade" id="exampleModal21" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel4"
        aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <form id="timesheetrequest" method="post" action="{{ url('timesheetrequest/store') }}"
                    enctype="multipart/form-data">
                    @csrf
                    <div class="modal-header" style="background: #37A000">
                        <h5 style="color:white;" class="modal-title font-weight-600" id="exampleModalLabel4">Add Request
                        </h5>
                        {{-- <div>
                        <ul>
                            @foreach ($errors->all() as $e)
                                <li style="color:red;">{{ $e }}</li>
                            @endforeach
                        </ul>
                    </div> --}}
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body">
                        <div class="error-container1 text-center">
                        </div>
                        <div class="success-container1 text-center" style="background-color: #dcecf5">
                        </div>
                        <div class="details-form-field form-group row">
                            <label for="name" class="col-sm-3 col-form-label font-weight-600">Admin : <span
                                    class="text-danger">*</span></label>
                            <div class="col-sm-9">
                                <select class="language form-control" required id="category" name="partner">
                                    <option value="">Please Select One</option>
                                    @foreach ($partner as $teammemberData)
                                        <option value="{{ $teammemberData->id }}">
                                            {{ $teammemberData->team_member }}</option>
                                    @endforeach
                                </select>

                            </div>

                        </div>
                        <div class="details-form-field form-group row">
                            <label for="name" class="col-sm-3 col-form-label font-weight-600">Reason : <span
                                    class="text-danger">*</span></label>
                            <div class="col-sm-9">
                                <textarea rows="4" name="reason" required class="form-control" placeholder="Enter Reason"></textarea>

                            </div>

                        </div>

                        <div class="details-form-field form-group row">
                            <label for="file" class="col-sm-3 col-form-label font-weight-600">Attachment :</label>
                            <div class="col-sm-9">
                                <input type="file" name="file" id="file-1" class="custom-input-file">
                                <label for="file-1" id="file-label">
                                    <i class="fa fa-upload"></i>
                                    <span>Choose a file…</span>
                                </label>
                                <span class="text-danger" style="font-weight: 300">File types: png, pdf, jpeg, jpg. Max
                                    size: 5
                                    MB</span>
                            </div>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>
                        <button type="submit" class="btn btn-success">Save</button>
                    </div>
                </form>
            </div>
        </div>
    </div>



    <!-- Modal -->
    <div class="modal fade" id="exampleModal12" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel4"
        aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <form id="detailsForm" method="post" action="{{ url('/timesheet/submit') }}"
                    enctype="multipart/form-data">
                    @csrf
                    <div class="modal-header" style="background:#37A000;color:white;">
                        <h5 class="modal-title font-weight-600" id="exampleModalLabel4">Update Timesheet</h5>
                        <div>
                            <ul>
                                @foreach ($errors->all() as $e)
                                    <li style="color:red;">{{ $e }}</li>
                                @endforeach
                            </ul>
                        </div>
                        <button style="color: white" type="button" class="close" data-dismiss="modal"
                            aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body">

                        <div class="row row-sm">
                            {{-- <label for="name" class="col-sm-3 col-form-label font-weight-600">Name :</label> --}}
                            <div class="col-sm-12">
                                <input type="text" readonly id="teamname" class="form-control"
                                    placeholder="Enter Name">
                                <input hidden class="form-control" id="timesheetid" name="timesheetid" type="text">


                            </div>
                        </div>

                        <br>
                        @php
                            $clientlist = DB::table('clients')->select('clients.client_name', 'clients.id')->get();
                            $partner = DB::table('teammembers')
                                ->select('teammembers.team_member', 'teammembers.id')
                                ->get();
                            $assignmentlist = DB::table('assignments')
                                ->select('assignments.assignment_name', 'assignments.id')
                                ->get();
                        @endphp
                        <br>
                        <div class="row row-sm">
                            <div class="col-sm-12">
                                <input required type="date" name="date" id="date" class="form-control"
                                    placeholder="Enter Name">


                            </div>
                        </div>
                        <br>
                        <div class="row row-sm">
                            {{-- <label for="name" class="col-sm-3 col-form-label font-weight-600">Name :</label> --}}
                            <div class="col-sm-12">
                                <select class="form-control" name="client_id" id="client_id">
                                    <option value="">Select Client</option>
                                    @foreach ($clientlist as $city)
                                        <option value="{{ $city->id }}">{{ $city->client_name }}</option>
                                    @endforeach
                                </select>
                            </div>
                        </div>

                        <br>
                        <div class="row row-sm">
                            {{-- <label for="name" class="col-sm-3 col-form-label font-weight-600">Name :</label> --}}
                            <div class="col-sm-12">
                                <select class="form-control" name="assignment_id" id="assignment_id">
                                    <option value="">Select Assignment</option>
                                    @foreach ($assignmentlist as $assignmentlistData)
                                        <option value="{{ $assignmentlistData->id }}">
                                            {{ $assignmentlistData->assignment_name }}</option>
                                    @endforeach
                                </select>
                            </div>
                        </div>
                        <br>
                        <div class="row row-sm">
                            {{-- <label for="name" class="col-sm-3 col-form-label font-weight-600">Name :</label> --}}
                            <div class="col-sm-12">
                                <select class="form-control" name="partner" id="partner">
                                    <option value="">Select Partner</option>
                                    @foreach ($partner as $partnerData)
                                        <option value="{{ $partnerData->id }}">{{ $partnerData->team_member }}</option>
                                    @endforeach
                                </select>
                            </div>
                        </div>
                        <br>
                        <div class="row row-sm">
                            <div class="col-sm-12">
                                <input required type="text" name="workitem" id="workitem" class="form-control"
                                    placeholder="Enter Name">


                            </div>
                        </div>
                        <br>
                        <div class="row row-sm">
                            <div class="col-sm-12">
                                <input required type="text" name="location" id="location" class="form-control"
                                    placeholder="Enter Location">


                            </div>
                        </div>
                        <br>
                        <div class="row row-sm">
                            <div class="col-sm-12">
                                <input required type="text" name="totalhour" id="totalhour" class="form-control"
                                    placeholder="Enter Name">


                            </div>
                        </div>

                        <div class="modal-footer">
                            <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>
                            <button type="submit" class="btn btn-success">Submit</button>
                        </div>
                </form>

            </div>
        </div>
    </div>

    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
    <script>
        $(function() {
            $('#client').on('change', function() {
                var cid = $(this).val();
                // alert(category_id);
                $.ajax({
                    type: "get",
                    url: "{{ url('timesheet/create') }}",
                    data: "cid=" + cid,
                    success: function(res) {
                        $('#assignment').html(res);
                    },
                    error: function() {},
                });
            });
        });
    </script>



    <script type="text/javascript">
        $(function() {
            $("#chkAll").click(function() {
                $("input[name='ids[]']").attr("checked", this.checked);
            });
            $('#example11').DataTable({});
        });
    </script>
    <script type="text/javascript">
        $.('.selectall').click(function() {
            $.('selecselectboxtbox').prop('checked', $(this).prop('checked'));
        })
        $('.selectbox').change(function() {
            var total = $.('.selectbox').length;
            var number = $.('.selecbox:checked').length;
            if (total == number) {
                $('.selectall').prop('checked', true);
            } else
                $('.selectall').prop('checked', false);

        });
    </script>

    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js"></script>
    <script>
        $(function() {
            $('body').on('click', '#editCompany', function(event) {
                //        debugger;
                var id = $(this).data('id');
                debugger;
                $.ajax({
                    type: "GET",

                    url: "{{ url('timesheetupdatesubmit') }}",
                    data: "id=" + id,
                    success: function(response) {
                        debugger;
                        $("#timesheetid").val(response.id);
                        $("#date").val(response.date);
                        $("#teamname").val(response.team_member);
                        $("#workitem").val(response.workitem);
                        $("#location").val(response.location);
                        $("#client_id").val(response.client_id);
                        $("#assignment_id").val(response.assignment_id);
                        $("#partner").val(response.partner);
                        $("#totalhour").val(response.totalhour);
                        debugger;

                    },
                    error: function() {

                    },
                });
            });
        });
    </script>
@endsection









1.Edit functionality on save timesheet
22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
Route::get('/savedtimesheet/edit/{id}',  [TimesheetController::class, 'savedtimesheetEdit']);







22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
app\Http\Controllers\TimesheetController.php

  public function savedtimesheetEdit(Request $request, $id)
  {
    $timesheetedit = DB::table('timesheetusers')
      ->leftjoin('clients', 'clients.id', 'timesheetusers.client_id')
      ->leftjoin('assignments', 'assignments.id', 'timesheetusers.assignment_id')
      ->leftjoin('teammembers', 'teammembers.id', 'timesheetusers.createdby')
      // ->where('timesheetusers.timesheetid', $id)
      ->where('timesheetusers.id', $id)
      ->select('timesheetusers.*', 'clients.client_name', 'assignments.assignment_name', 'teammembers.team_member')
      ->first();

    // $timesheetedit = DB::table('assignmentbudgetings')->where('client_id', $id)
    //   ->leftjoin('assignments', 'assignments.id', 'assignmentbudgetings.assignment_id')
    //   ->orderBy('assignment_name')->get();
    // dd($timesheetedit);

    // client of particular partner
    $partner = Teammember::where('role_id', '=', 13)->where('status', '=', 1)->with('title')->get();
    $teammember = Teammember::where('role_id', '!=', 11)->with('title', 'role')->get();
    if (auth()->user()->role_id == 11) {
      $client = Client::where('status', 1)->select('id', 'client_name')->orderBy('client_name', 'ASC')->get();
    } elseif (auth()->user()->role_id == 13) {
      $selectedDate = \DateTime::createFromFormat('Y-m-d', $timesheetedit->date);
      $selectedDate1 = \DateTime::createFromFormat('Y-m-d', $timesheetedit->date);

      $clientss = DB::table('assignmentmappings')
        ->leftjoin('assignmentbudgetings', 'assignmentbudgetings.assignmentgenerate_id', 'assignmentmappings.assignmentgenerate_id')
        ->leftjoin('clients', 'clients.id', 'assignmentbudgetings.client_id')
        ->where(function ($query) {
          $query->where('assignmentmappings.leadpartner', auth()->user()->teammember_id)
            ->orWhere('assignmentmappings.otherpartner', auth()->user()->teammember_id);
        })
        ->where(function ($query) use ($selectedDate) {
          $query->whereNull('otpverifydate')
            ->orWhere('otpverifydate', '>=', $selectedDate->modify('-1 day'));
        })
        // ->whereNotNull('clients.client_name')
        ->select('clients.client_name', 'clients.id', 'clients.client_code')
        ->orderBy('client_name', 'ASC')
        ->distinct()->get();

      // // done default $clients in ajax if need then $clientss add in ajax target $request->cid == 29 || $request->cid == 32 || $request->cid == 33 || $request->cid == 34
      // $clients = DB::table('clients')
      //   ->whereIn('id', [29, 32, 33, 34])
      //   ->select('clients.client_name', 'clients.id', 'clients.client_code')
      //   ->orderBy('client_name', 'ASC')
      //   ->distinct()->get();

      // if you selected sturday date then offholydays client will be show otherwise not

      $formattedDate = $selectedDate1->format('Y-m-d');
      $holidaydatecheck = DB::table('holidays')->where('startdate', $formattedDate)->select('holidayname')->first();

      if ($holidaydatecheck) {
        $clientIds = [29, 32, 33, 34];
      } else {
        // if not holidays then go hare
        $dayOfWeek = $selectedDate1->format('w');
        if ($selectedDate1->format('l') == 'Saturday') {
          $dayOfMonth = $selectedDate1->format('j');
          // Calculate which Saturday of the month it is
          $saturdayNumber = ceil($dayOfMonth / 7);
          // offholiday client name will be show on 2nd and 4rth sturday
          if ($saturdayNumber == 2.0 || $saturdayNumber == 4.0) {
            $clientIds = [29, 32, 33, 34];
          } else {
            $clientIds = [29, 32, 34];
          }
        } else {
          $clientIds = [29, 32, 34];
        }
      }
      $clients = DB::table('clients')
        ->whereIn('id', $clientIds)
        ->select('clients.client_name', 'clients.id', 'clients.client_code')
        ->orderBy('client_name', 'ASC')
        ->distinct()
        ->get();

      $client = $clientss->merge($clients);
    } else {

      $selectedDate = \DateTime::createFromFormat('Y-m-d', $timesheetedit->date);
      $selectedDate1 = \DateTime::createFromFormat('Y-m-d', $timesheetedit->date);

      $clientss = DB::table('assignmentteammappings')
        ->leftjoin('assignmentmappings', 'assignmentmappings.id', 'assignmentteammappings.assignmentmapping_id')
        ->leftjoin('assignmentbudgetings', 'assignmentbudgetings.assignmentgenerate_id', 'assignmentmappings.assignmentgenerate_id')
        ->leftjoin('clients', 'clients.id', 'assignmentbudgetings.client_id')
        ->orwhere('assignmentteammappings.teammember_id', auth()->user()->teammember_id)
        ->whereNotIn('assignmentbudgetings.assignmentname', ['Unallocated', 'Official Travel', 'Off/Holiday', 'Seminar/Conference/Post Qualification Course'])
        ->where(function ($query) use ($selectedDate) {
          $query->whereNull('otpverifydate')
            ->orWhere('otpverifydate', '>=', $selectedDate->modify('-1 day'));
        })
        ->select('clients.client_name', 'clients.id', 'clients.client_code')
        ->orderBy('client_name', 'ASC')
        ->distinct()->get();

      $formattedDate = $selectedDate1->format('Y-m-d');
      $holidaydatecheck = DB::table('holidays')->where('startdate', $formattedDate)->select('holidayname')->first();

      if ($holidaydatecheck) {
        $clientIds = [29, 32, 33, 34];
      } else {
        // if not holidays then go hare
        $dayOfWeek = $selectedDate1->format('w');
        if ($selectedDate1->format('l') == 'Saturday') {
          $dayOfMonth = $selectedDate1->format('j');
          // Calculate which Saturday of the month it is
          $saturdayNumber = ceil($dayOfMonth / 7);
          // offholiday client name will be show on 2nd and 4rth sturday
          if (auth()->user()->role_id == 14) {
            if ($saturdayNumber == 2.0 || $saturdayNumber == 4.0) {
              $clientIds = [29, 32, 33, 34];
            } else {
              $clientIds = [29, 32, 34];
            }
          } else {
            if ($saturdayNumber == 1.0 || $saturdayNumber == 2.0 || $saturdayNumber == 3.0 || $saturdayNumber == 4.0 || $saturdayNumber == 5.0) {
              $clientIds = [29, 32, 33, 34];
            }
          }
        } else {
          $clientIds = [29, 32, 34];
        }
      }
      $clients = DB::table('clients')
        ->whereIn('id', $clientIds)
        ->select('clients.client_name', 'clients.id', 'clients.client_code')
        ->orderBy('client_name', 'ASC')
        ->distinct()
        ->get();

      $client = $clientss->merge($clients);
    }
    $assignment = Assignment::select('id', 'assignment_name')->get();
    return view('backEnd.timesheet.savedtimesheetedit', compact('client', 'teammember', 'assignment', 'partner', 'timesheetedit'));
  }









22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
resources\views\backEnd\timesheet\savedtimesheetedit.blade.php

{{-- library  --}}
<link href="{{ url('backEnd/plugins/select2/dist/css/select2.min.css') }}" rel="stylesheet">
<link href="{{ url('backEnd/plugins/select2-bootstrap4/dist/select2-bootstrap4.min.css') }}" rel="stylesheet">
<link href="{{ url('backEnd/plugins/jquery.sumoselect/sumoselect.min.css') }}" rel="stylesheet">


@extends('backEnd.layouts.layout')

@section('backEnd_content')
    <div class="body-content">
        <div class="row">
            <div class="col-md-12 col-lg-12">
                <div class="card mb-4">
                    <div class="card-header" style="background:#37A000">
                        <div class="d-flex justify-content-between align-items-center">
                            <div>
                                <h6 style="color:white" class="fs-17 font-weight-600 mb-0">Update Saved Timesheet</h6>
                            </div>
                        </div>
                    </div>
                    <div class="card-body">
                        @component('backEnd.components.alert')
                        @endcomponent
                        <form method="post" action="{{ url('/savedtimesheet/update') }}" enctype="multipart/form-data"
                            id="detailsForm" style="margin-bottom: 0px;">
                            @csrf

                            <div class="row row-sm">
                                <div class="col-6">
                                    {{-- @php
                                        dd($timesheetedit);
                                    @endphp --}}
                                    <div class="form-group">
                                        <label class="font-weight-600">Client Name *</label>
                                        <select required class="language form-control" name="client_id" id="client"
                                            @if (Request::is('timesheet/*/edit')) > <option disabled style="display:block">Select
                                                Client
                                                </option>
                            
                                                @foreach ($client as $clientData)
                                                <option value="{{ $clientData->id }}">
                                                    {{ $clientData->client_name }}</option>
                                                @endforeach
                                                
                            
                                                @else
                                                <option></option>
                                                <option value="">Select Client</option>
                                                @foreach ($client as $clientData)
                                                <option value="{{ $clientData->id }}"{{ $timesheetedit->client_id == $clientData->id ?? '' ? 'selected="selected"' : '' }}>
                                                    {{ $clientData->client_name }}</option>
                            
                                                @endforeach @endif
                                            </select>
                                    </div>
                                </div>
                                <div class="col-6">
                                    <div class="form-group">
                                        <label class="font-weight-600">Assignment Name *</label>
                                        @php
                                            $assignment = app('App\Models\Assignment')
                                                ->where('id', $timesheetedit->assignment_id)
                                                ->first();

                                        @endphp
                                        <select class="form-control key assignmentvalue" name="assignment_id"
                                            id="assignment">

                                            @if (!empty($timesheetedit->assignment_id))
                                                @php
                                                    $assignment = app('App\Models\Assignment')
                                                        ->where('id', $timesheetedit->assignment_id)
                                                        ->first();
                                                @endphp
                                                @if ($assignment)
                                                    <option value="{{ $assignment->id }}">
                                                        {{ $assignment->assignment_name }}
                                                    </option>
                                                @endif
                                            @endif
                                            @if (!empty($timesheet->assignment_id))
                                                <option value="{{ $assignment->id }}"
                                                    {{ $timesheetedit->assignment_id == $assignment->id ? 'selected' : '' }}>
                                                    {{ App / Models / Assignment::where('id', $timesheet->assignment_id)->first()->assignment_name ?? '' }}
                                                </option>
                                            @endif
                                        </select>

                                    </div>
                                </div>
                            </div>
                            <div class="row row-sm">
                                <div class="col-6">
                                    <div class="form-group">
                                        <label class="font-weight-600">Partner *</label>

                                        <select class="language form-control partnervalue" id="partner" name="partner">
                                            @if (!empty($timesheetedit->partner))
                                                @php
                                                    $assignment = app('App\Models\Teammember')
                                                        ->where('id', $timesheetedit->partner)
                                                        ->first();
                                                @endphp
                                                @if ($assignment)
                                                    <option value="{{ $timesheetedit->partner }}">
                                                        {{ $assignment->team_member }}
                                                    </option>
                                                @endif
                                            @endif
                                        </select>
                                    </div>
                                </div>
                                <div class="col-sm-6">
                                    <label for="">Employee Name</label>
                                    <input required type="text" name="teammember" class="form-control"
                                        value="{{ $timesheetedit->team_member }}" placeholder="Enter Employee Name"
                                        readonly>
                                </div>

                            </div>
                            <div class="row row-sm">
                                <div class="col-6">
                                    <div class="form-group">
                                        <label class="font-weight-600" style="width:100px;">Location *</label>
                                        <input required type="text" name="location" id="location"
                                            value="{{ $timesheetedit->location }}" class="form-control locationvalue"
                                            placeholder="Enter Location">
                                    </div>
                                </div>
                                <div class="col-6">
                                    <div class="form-group">
                                        <label class="font-weight-600" style="width:100px;">Work Item *</label>
                                        <input required type="text" name="workitem"
                                            value="{{ $timesheetedit->workitem }}" class="form-control workitemnvalue"
                                            placeholder="Enter Name">
                                    </div>
                                    <div class="col-sm-2">
                                        <input type="hidden" name="status" value="{{ $timesheetedit->status }}"
                                            class="form-control" placeholder="Enter Location">
                                    </div>
                                    <div class="col-sm-2">
                                        <input type="hidden" name="timesheetusersid" value="{{ $timesheetedit->id }}"
                                            class="form-control" placeholder="Enter Location">
                                    </div>
                                    <div class="col-sm-2">
                                        <input type="hidden" name="timesheetid" value="{{ $timesheetedit->timesheetid }}"
                                            class="form-control" placeholder="Enter Location">
                                    </div>
                                    <div class="col-sm-2">
                                        <input type="hidden" name="createdby" value="{{ $timesheetedit->createdby }}"
                                            class="form-control" placeholder="Enter Location">
                                    </div>
                                    <div class="col-sm-2">
                                        <input type="hidden" name="date" id="date1" class="form-control"
                                            value=" {{ date('d-m-Y', strtotime($timesheetedit->date ?? '')) }}"
                                            placeholder="Enter Date" readonly>
                                    </div>
                                </div>
                            </div>
                            <div class="row row-sm">
                                <div class="col-6">
                                    <div class="form-group">
                                        <label class="font-weight-600">Hour *</label>
                                        <input required type="text" name="hour" id="hour"
                                            value="{{ $timesheetedit->hour }}" class="form-control"
                                            placeholder="Enter Location">

                                        <span style="font-size: 10px;margin-left: 10px;"></span>
                                    </div>
                                </div>
                            </div>

                            <hr>

                            <div class="form-group">
                                <button type="submit" class="btn btn-success" style="float:right">Submit</button>
                                <a class="btn btn-secondary" href="{{ url('timesheet/mylist') }}">
                                    Back</a>
                            </div>

                        </form>
                        <hr class="my-4">
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!--/.body content-->
@endsection



<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
<script>
    function calculateTotal() {
        var hour1 = parseInt(document.getElementById("hour1").value) || 0;
        var hour2 = parseInt(document.getElementById("hour2").value) || 0;
        var hour3 = parseInt(document.getElementById("hour3").value) || 0;
        var hour4 = parseInt(document.getElementById("hour4").value) || 0;
        var hour5 = parseInt(document.getElementById("hour5").value) || 0;

        var totalSum = hour1 + hour2 + hour3 + hour4 + hour5;

        document.getElementById("totalhours").value = totalSum;
    }


    function validateTimeInput(inputId, maxTime) {
        const timeInput = document.getElementById(inputId);

        timeInput.addEventListener('input', function() {
            const inputTime = this.value;

            if (inputTime > maxTime) {
                this.setCustomValidity('The time entered exceeds the maximum of 24 hours');
            } else {
                this.setCustomValidity('');
            }
        });
    }
</script>

<script type="text/javascript">
    function sum() {

        var hour1 = document.getElementById('hour1').value;
        // alert(hour1);
        var hour2 = document.getElementById('hour2').value;
        var hour3 = document.getElementById('hour3').value;
        var hour4 = document.getElementById('hour4').value;
        var hour5 = document.getElementById('hour5').value;
        //  alert(hour2);
        var result = parseFloat(hour1) + parseFloat(hour2) + parseFloat(hour3) + parseFloat(hour4) + parseFloat(
            hour5);
        //alert(result);
        if (!isNaN(result)) {
            document.getElementById('totalhours').value = result;
        }
    }
</script>

{{-- select box validation for timesheet create --}}
<script>
    $(function() {
        // select client 1
        $('#detailsForm').on('submit', function(e) {
            var clientvalue = $('#client').val();
            var assmentvalue = $('#assignment').val();
            var partnervalue = $('#partner').val();

            if (clientvalue != "" || clientvalue != "Select Client") {
                if (assmentvalue == "Select Assignment" || assmentvalue == "") {
                    alert("Please select a assignment");
                    e.preventDefault();
                    $('#assignment1').focus();
                } else if (partnervalue == "Select Partner" || partnervalue == "") {
                    alert("Please select a partner");
                    e.preventDefault();
                    $('#partner1').focus();
                }
            }
        });

    });
</script>


<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
<script>
    $(document).ready(function() {
        // Function to handle change event for client select
        function handleClientChange(clientId) {
            $('#' + clientId).on('change', function() {
                var cid = $(this).val();
                var datepickers = $('#date1').val();
                var selectedworkitem = $('.locationvalue').val();
                var clientNumber = parseInt(clientId.replace('client', ''));

                if (cid == 33) {
                    $.ajax({
                        type: "get",
                        url: "{{ url('holidaysselect') }}",
                        data: {
                            cid: cid,
                            datepickers: datepickers
                        },
                        success: function(response) {
                            var location = 'N/A';
                            var time = 0;
                            var holidayName = response.holidayName;
                            var saturday = response.saturday;
                            if (holidayName == 'null') {
                                var workitem = saturday;
                            } else if (saturday == 'null') {
                                var workitem = holidayName;
                            } else {
                                var workitem = holidayName;
                            }
                            // alert(holidayName);
                            if (isNaN(clientNumber)) {
                                // console.log(response)
                                var assignmentSelect = $('.assignmentvalue');
                                assignmentSelect.empty();
                                assignmentSelect.append($('<option>', {
                                    value: response.assignmentgenerate_id,
                                    text: response.assignment_name + ' (' +
                                        response
                                        .assignmentname + '/' + response
                                        .assignmentgenerate_id + ')'
                                }));

                                var assignmentSelect = $('.partnervalue');
                                assignmentSelect.empty();
                                assignmentSelect.append($('<option>', {
                                    value: response.team_memberid,
                                    text: response.team_member
                                }));

                                $('.workitemnvalue').val(workitem).prop('readonly',
                                    true);
                                $('.locationvalue').val(location).prop('readonly',
                                    true);
                                $('#hour').val(time).prop("readonly", true);
                            }
                        },
                        error: function() {
                            alert('Error occurred while fetching assignments');
                        }
                    });
                } else {
                    $.ajax({
                        type: "get",
                        url: "{{ url('timesheetedit/ajax') }}",
                        data: {
                            cid: cid,
                            datepickers: datepickers
                        },
                        success: function(res) {
                            // clear previous data 
                            if (isNaN(clientNumber)) {
                                $('.assignmentvalue').empty();
                                $('.partnervalue').empty();
                                if (selectedworkitem == 'N/A') {
                                    $('.workitemnvalue').val('').prop('readonly', false);
                                    $('.locationvalue').val('').prop('readonly', false);
                                    $("#hour").prop("readonly", false);
                                }
                            }

                            $('#' + clientId.replace('client', 'assignment')).html(res);

                        },
                        error: function() {
                            alert('Error occurred while fetching assignments');
                        },
                    });
                }
            });
        }

        // // Function to handle change event for assignment select
        function handleAssignmentChange(assignmentId) {
            $('#' + assignmentId).on('change', function() {
                var assignment = $(this).val();

                $.ajax({
                    type: "get",
                    url: "{{ url('timesheetedit/ajax') }}",
                    data: "assignment=" + assignment,
                    success: function(res) {
                        $('#' + assignmentId.replace('assignment', 'partner')).html(res);
                    },
                    error: function() {
                        alert('Error occurred while fetching assignments');
                    },
                });
            });
        }

        handleClientChange('client');
        handleAssignmentChange('assignment');
    });
</script>

{{-- validation on hour --}}
<script>
    $(function() {
        $('#hour').on('change', function(e) {
            var hourvalue = $('#hour').val();
            if (hourvalue > 12) {
                alert('Hour cannot fill greater than 12.');
            }
        });
    });
</script>



<script>
    $(function() {
        $('input[name="daterange"]').daterangepicker({
            opens: 'left'
        }, function(start, end, label) {
            console.log("A new date selection was made: " + start.format('DD-MM-YYYY') + ' to ' + end
                .format('DD-MM-YYYY'));
        });
    });
</script>


<!--Page Active Scripts(used by this page)-->
<script src="{{ url('backEnd/dist/js/pages/forms-basic.active.js') }}"></script>
<!--Page Scripts(used by all page)-->
<script src="{{ url('backEnd/dist/js/sidebar.js') }}"></script>








22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
Route::post('/savedtimesheet/update',  [TimesheetController::class, 'savedtimesheeteditstore']);







22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
app\Http\Controllers\TimesheetController.php



  public function savedtimesheeteditstore(Request $request)
  {
    $oldtimesheetsubmiteddata = DB::table('timesheetusers')
      ->where('timesheetid', $request->timesheetid)
      ->where('createdby', $request->createdby)
      ->get();

    $SubmittedTimesheetHours = 0;
    if ($oldtimesheetsubmiteddata->count() >= 2) {
      $filteredData = $oldtimesheetsubmiteddata->reject(function ($item) use ($request) {
        return $item->id == $request->timesheetusersid;
      });

      $SubmittedTimesheetHours = $filteredData->whereIn('status', [0])->sum('hour');
    }

    $RejectedTimesheetHours = $request->input('hour');
    $RejectedTimesheetHours = (int)$RejectedTimesheetHours;
    $totalHours = $SubmittedTimesheetHours + $RejectedTimesheetHours;
    // Check if the total hours exceed the limit of 12
    if (!is_numeric($totalHours) || $totalHours > 12) {
      $output = ['msg' => 'The total hours cannot be greater than 12'];
      return back()->with('statuss', $output);
    }

    if (!is_numeric($request->assignment_id)) {
      $assignment = Assignmentmapping::where('assignmentgenerate_id', $request->assignment_id)
        ->select('assignment_id')
        ->first();
      // dd('hi');
      // ->toArray();
      // $assignment_id = $assignment[0]['assignment_id'];
      $assignment_id = $assignment->assignment_id;
      $assignmentgenerateId = $request->assignment_id;
      $oldtimesheetdata = DB::table('timesheetusers')->where('id', $request->timesheetusersid)->first();
      // update total hour 

      if (auth()->user()->role_id == 14 || auth()->user()->role_id == 15) {

        $gettotalteamhour = DB::table('assignmentmappings')
          ->leftJoin(
            'assignmentteammappings',
            'assignmentteammappings.assignmentmapping_id',
            'assignmentmappings.id',
          )
          ->where(
            'assignmentmappings.assignmentgenerate_id',
            $oldtimesheetdata->assignmentgenerate_id
          )
          ->where('assignmentteammappings.teammember_id', auth()->user()->teammember_id)
          ->select('assignmentteammappings.*')
          ->first();



        $gettotalteamhournew = DB::table('assignmentmappings')
          ->leftJoin(
            'assignmentteammappings',
            'assignmentteammappings.assignmentmapping_id',
            'assignmentmappings.id',
          )
          ->where(
            'assignmentmappings.assignmentgenerate_id',
            $request->assignment_id
          )
          ->where('assignmentteammappings.teammember_id', auth()->user()->teammember_id)
          ->select('assignmentteammappings.*')
          ->first();




        if ($gettotalteamhour) {
          if ($gettotalteamhour->teamhour == null) {
            $gettotalteamhour->teamhour = 0;
          }
          $finalresult =  $gettotalteamhour->teamhour - $request->hour;
          $totalteamhourupdate = DB::table('assignmentteammappings')
            ->where('id', $gettotalteamhour->id)
            // ->get();
            ->update(['teamhour' =>  $finalresult]);
        }
        if ($gettotalteamhournew) {
          if ($gettotalteamhournew->teamhour == null) {
            $gettotalteamhournew->teamhour = 0;
          }
          $finalresult =  $gettotalteamhournew->teamhour + $request->hour;
          $totalteamhourupdate = DB::table('assignmentteammappings')
            ->where('id', $gettotalteamhournew->id)
            // ->get();
            ->update(['teamhour' =>  $finalresult]);
        }
      }

      if (auth()->user()->role_id == 13) {
        $assignmentdata = DB::table('assignmentmappings')
          ->where('assignmentgenerate_id', $assignmentgenerateId)
          ->first();
        $assignmentdataold = DB::table('assignmentmappings')
          ->where('assignmentgenerate_id', $oldtimesheetdata->assignmentgenerate_id)
          ->first();

        // old assignment hour subtract 
        if ($assignmentdataold->leadpartner == auth()->user()->teammember_id) {
          if ($assignmentdataold->leadpartnerhour == null) {
            $assignmentdataold->leadpartnerhour = 0;
          }
          $finalresultleadpatner =  $assignmentdataold->leadpartnerhour - $oldtimesheetdata->hour;
          $totalteamhourupdate = DB::table('assignmentmappings')
            ->where('id', $assignmentdataold->id)
            // ->get();
            ->update(['leadpartnerhour' => $finalresultleadpatner]);
        }
        if ($assignmentdataold->otherpartner == auth()->user()->teammember_id) {
          if ($assignmentdataold->otherpartnerhour == null) {
            $assignmentdataold->otherpartnerhour = 0;
          }
          $finalresultotherpatner =  $assignmentdataold->otherpartnerhour - $oldtimesheetdata->hour;
          $totalteamhourupdate = DB::table('assignmentmappings')
            ->where('id', $assignmentdataold->id)
            // ->get();
            ->update(['otherpartnerhour' => $finalresultotherpatner]);
        }

        // new assignment hour add
        if ($assignmentdata->leadpartner == auth()->user()->teammember_id) {
          if ($assignmentdata->leadpartnerhour == null) {
            $assignmentdata->leadpartnerhour = 0;
          }
          $finalresultleadpatner =  $assignmentdata->leadpartnerhour + $request->hour;
          $totalteamhourupdate = DB::table('assignmentmappings')
            ->where('id', $assignmentdata->id)
            // ->get();
            ->update(['leadpartnerhour' => $finalresultleadpatner]);
        }
        if ($assignmentdata->otherpartner == auth()->user()->teammember_id) {
          if ($assignmentdata->otherpartnerhour == null) {
            $assignmentdata->otherpartnerhour = 0;
          }
          $finalresultotherpatner =  $assignmentdata->otherpartnerhour + $request->hour;
          $totalteamhourupdate = DB::table('assignmentmappings')
            ->where('id', $assignmentdata->id)
            // ->get();
            ->update(['otherpartnerhour' => $finalresultotherpatner]);
        }
      }
    }

    if (is_numeric($request->assignment_id)) {
      $assignment_id = $request->assignment_id;
      $getassignmentgenerateId = DB::table('timesheetusers')->where('id', $request->timesheetusersid)->first();
      $assignmentgenerateId = $getassignmentgenerateId->assignmentgenerate_id;

      $oldtimesheetdata = DB::table('timesheetusers')->where('id', $request->timesheetusersid)->first();
      // update total hour 
      if ($oldtimesheetdata->hour != $request->hour) {
        if (auth()->user()->role_id == 14 || auth()->user()->role_id == 15) {
          $gettotalteamhour = DB::table('assignmentmappings')
            ->leftJoin(
              'assignmentteammappings',
              'assignmentteammappings.assignmentmapping_id',
              'assignmentmappings.id',
            )
            ->where(
              'assignmentmappings.assignmentgenerate_id',
              $oldtimesheetdata->assignmentgenerate_id
            )
            ->where('assignmentteammappings.teammember_id', auth()->user()->teammember_id)
            ->select('assignmentteammappings.*')
            ->first();
          if ($gettotalteamhour) {
            $totalteamhour = $gettotalteamhour->teamhour;
            $subtractoldhour =  $totalteamhour - $oldtimesheetdata->hour;
            $finalresult =  $subtractoldhour + $request->hour;

            $totalteamhourupdate = DB::table('assignmentteammappings')
              ->where('id', $gettotalteamhour->id)
              // ->get();
              ->update(['teamhour' =>  $finalresult]);
          }
        }
        if (auth()->user()->role_id == 13) {
          $assignmentdata = DB::table('assignmentmappings')
            ->where('assignmentgenerate_id', $oldtimesheetdata->assignmentgenerate_id)
            ->first();

          if ($assignmentdata->leadpartner == auth()->user()->teammember_id) {
            $subtractoldhour =  $assignmentdata->leadpartnerhour - $oldtimesheetdata->hour;
            $finalresultleadpatner =  $subtractoldhour + $request->hour;
            $totalteamhourupdate = DB::table('assignmentmappings')
              ->where('id', $assignmentdata->id)
              // ->get();
              ->update(['leadpartnerhour' => $finalresultleadpatner]);
          }
          if ($assignmentdata->otherpartner == auth()->user()->teammember_id) {
            $subtractoldhour =  $assignmentdata->otherpartnerhour - $oldtimesheetdata->hour;
            $finalresultotherpatner =  $subtractoldhour + $request->hour;

            $totalteamhourupdate = DB::table('assignmentmappings')
              ->where('id', $assignmentdata->id)
              // ->get();
              ->update(['otherpartnerhour' => $finalresultotherpatner]);
          }
        }
      }
    }

    try {
      $timesheetdataupdate = DB::table('timesheetusers')->where('id', $request->timesheetusersid)->first();
      DB::table('timesheets')->where('id', $timesheetdataupdate->timesheetid)->update([
        'status'   =>   0,
      ]);

      DB::table('timesheetusers')->where('id', $request->timesheetusersid)->update([
        'status'   =>   0,
        'client_id'   =>  $request->client_id,
        'assignmentgenerate_id'   =>  $assignmentgenerateId,
        'assignment_id'   =>   $assignment_id,
        'partner'   =>  $request->partner,
        'workitem'   =>   $request->workitem,
        'createdby'   =>   $request->createdby,
        'location'   =>   $request->location,
        'hour'   =>   $request->hour,
      ]);

      $output = array('msg' => 'Updated Successfully');
      return redirect()->to('timesheet/mylist')->with('success', $output);
    } catch (Exception $e) {
      DB::rollBack();
      Log::emergency("File:" . $e->getFile() . "Line:" . $e->getLine() . "Message:" . $e->getMessage());
      report($e);
      $output = array('msg' => $e->getMessage());
      return back()->withErrors($output)->withInput();
    }
  }





bugs occure in testing 
2222222222222222222222222222222222222222222222222222222222222222222
app\Http\Controllers\AssignmentmappingController.php
in store function remove below line 

dd(request)


bugs occure in testing 
2222222222222222222222222222222222222222222222222222222222222222222
resources\views\backEnd\assignmentmapping\create.blade.php
find text  if (x < maxField) {
 
add this class hidedive




resources\views\backEnd\assignmentmapping\form.blade.php
find text $('.add_buttonn, .remove_button,
 
replace script tag hare 
 
 
<script>
    $(document).ready(function() {
        $('#enablebox').on('change', function() {
            $('.enablefalse').prop('disabled', this.checked);
            if (this.checked) {
                $('.add_buttonn, .remove_button, .hidedive').addClass('d-none');
            } else {
                $('.add_buttonn, .remove_button, .hidedive').removeClass('d-none');
            }
        });
    });
</script>

22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
serch  'fulldate'  for update fuldates
this code update on vsademo,vsalocal,and vsalive per only fulldate updated and only year wla baki hai 

   'fulldate' => $hdatess,
   
   
search 'fulldate' for update year 

    ->where('year', $currentYear)
	
 $year1 = $prevSunday->format('Y');


22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222































